[
  {
    "name": "_text",
    "expression": null,
    "base": [
      "DomainResource"
    ]
  },
  {
    "name": "_content",
    "expression": null,
    "base": [
      "Resource"
    ]
  },
  {
    "name": "_id",
    "expression": "Resource.id",
    "base": [
      "Resource"
    ]
  },
  {
    "name": "_lastUpdated",
    "expression": "Resource.meta.lastUpdated",
    "base": [
      "Resource"
    ]
  },
  {
    "name": "_profile",
    "expression": "Resource.meta.profile",
    "base": [
      "Resource"
    ]
  },
  {
    "name": "_query",
    "expression": null,
    "base": [
      "Resource"
    ]
  },
  {
    "name": "_security",
    "expression": "Resource.meta.security",
    "base": [
      "Resource"
    ]
  },
  {
    "name": "_source",
    "expression": "Resource.meta.source",
    "base": [
      "Resource"
    ]
  },
  {
    "name": "_tag",
    "expression": "Resource.meta.tag",
    "base": [
      "Resource"
    ]
  },
  {
    "name": "identifier",
    "expression": "Account.identifier",
    "base": [
      "Account"
    ]
  },
  {
    "name": "name",
    "expression": "Account.name",
    "base": [
      "Account"
    ]
  },
  {
    "name": "owner",
    "expression": "Account.owner",
    "base": [
      "Account"
    ]
  },
  {
    "name": "patient",
    "expression": "Account.subject.where(resolve() is Patient)",
    "base": [
      "Account"
    ]
  },
  {
    "name": "period",
    "expression": "Account.servicePeriod",
    "base": [
      "Account"
    ]
  },
  {
    "name": "status",
    "expression": "Account.status",
    "base": [
      "Account"
    ]
  },
  {
    "name": "subject",
    "expression": "Account.subject",
    "base": [
      "Account"
    ]
  },
  {
    "name": "type",
    "expression": "Account.type",
    "base": [
      "Account"
    ]
  },
  {
    "name": "composed-of",
    "expression": "ActivityDefinition.relatedArtifact.where(type='composed-of').resource",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "context",
    "expression": "(ActivityDefinition.useContext.value as CodeableConcept)",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(ActivityDefinition.useContext.value as Quantity) | (ActivityDefinition.useContext.value as Range)",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "context-type",
    "expression": "ActivityDefinition.useContext.code",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "date",
    "expression": "ActivityDefinition.date",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "depends-on",
    "expression": "ActivityDefinition.relatedArtifact.where(type='depends-on').resource | ActivityDefinition.library",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "derived-from",
    "expression": "ActivityDefinition.relatedArtifact.where(type='derived-from').resource",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "description",
    "expression": "ActivityDefinition.description",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "effective",
    "expression": "ActivityDefinition.effectivePeriod",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "identifier",
    "expression": "ActivityDefinition.identifier",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "jurisdiction",
    "expression": "ActivityDefinition.jurisdiction",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "name",
    "expression": "ActivityDefinition.name",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "predecessor",
    "expression": "ActivityDefinition.relatedArtifact.where(type='predecessor').resource",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "publisher",
    "expression": "ActivityDefinition.publisher",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "status",
    "expression": "ActivityDefinition.status",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "successor",
    "expression": "ActivityDefinition.relatedArtifact.where(type='successor').resource",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "title",
    "expression": "ActivityDefinition.title",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "topic",
    "expression": "ActivityDefinition.topic",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "url",
    "expression": "ActivityDefinition.url",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "version",
    "expression": "ActivityDefinition.version",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "ActivityDefinition.useContext",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "ActivityDefinition.useContext",
    "base": [
      "ActivityDefinition"
    ]
  },
  {
    "name": "device",
    "expression": "AdministrableProductDefinition.device",
    "base": [
      "AdministrableProductDefinition"
    ]
  },
  {
    "name": "dose-form",
    "expression": "AdministrableProductDefinition.administrableDoseForm",
    "base": [
      "AdministrableProductDefinition"
    ]
  },
  {
    "name": "identifier",
    "expression": "AdministrableProductDefinition.identifier",
    "base": [
      "AdministrableProductDefinition"
    ]
  },
  {
    "name": "ingredient",
    "expression": "AdministrableProductDefinition.ingredient",
    "base": [
      "AdministrableProductDefinition"
    ]
  },
  {
    "name": "manufactured-item",
    "expression": "AdministrableProductDefinition.producedFrom",
    "base": [
      "AdministrableProductDefinition"
    ]
  },
  {
    "name": "route",
    "expression": "AdministrableProductDefinition.routeOfAdministration.code",
    "base": [
      "AdministrableProductDefinition"
    ]
  },
  {
    "name": "subject",
    "expression": "AdministrableProductDefinition.subject",
    "base": [
      "AdministrableProductDefinition"
    ]
  },
  {
    "name": "target-species",
    "expression": "AdministrableProductDefinition.routeOfAdministration.targetSpecies.code",
    "base": [
      "AdministrableProductDefinition"
    ]
  },
  {
    "name": "actuality",
    "expression": "AdverseEvent.actuality",
    "base": [
      "AdverseEvent"
    ]
  },
  {
    "name": "category",
    "expression": "AdverseEvent.category",
    "base": [
      "AdverseEvent"
    ]
  },
  {
    "name": "code",
    "expression": "AdverseEvent.code",
    "base": [
      "AdverseEvent"
    ]
  },
  {
    "name": "date",
    "expression": "AdverseEvent.occurrence",
    "base": [
      "AdverseEvent"
    ]
  },
  {
    "name": "identifier",
    "expression": "AdverseEvent.identifier",
    "base": [
      "AdverseEvent"
    ]
  },
  {
    "name": "location",
    "expression": "AdverseEvent.location",
    "base": [
      "AdverseEvent"
    ]
  },
  {
    "name": "patient",
    "expression": "AdverseEvent.subject",
    "base": [
      "AdverseEvent"
    ]
  },
  {
    "name": "recorder",
    "expression": "AdverseEvent.recorder",
    "base": [
      "AdverseEvent"
    ]
  },
  {
    "name": "resultingcondition",
    "expression": "AdverseEvent.resultingCondition",
    "base": [
      "AdverseEvent"
    ]
  },
  {
    "name": "seriousness",
    "expression": "AdverseEvent.seriousness",
    "base": [
      "AdverseEvent"
    ]
  },
  {
    "name": "status",
    "expression": "AdverseEvent.status",
    "base": [
      "AdverseEvent"
    ]
  },
  {
    "name": "study",
    "expression": "AdverseEvent.study",
    "base": [
      "AdverseEvent"
    ]
  },
  {
    "name": "subject",
    "expression": "AdverseEvent.subject",
    "base": [
      "AdverseEvent"
    ]
  },
  {
    "name": "substance",
    "expression": "(AdverseEvent.suspectEntity.instance as Reference)",
    "base": [
      "AdverseEvent"
    ]
  },
  {
    "name": "asserter",
    "expression": "AllergyIntolerance.asserter",
    "base": [
      "AllergyIntolerance"
    ]
  },
  {
    "name": "category",
    "expression": "AllergyIntolerance.category",
    "base": [
      "AllergyIntolerance"
    ]
  },
  {
    "name": "clinical-status",
    "expression": "AllergyIntolerance.clinicalStatus",
    "base": [
      "AllergyIntolerance"
    ]
  },
  {
    "name": "code",
    "expression": "AllergyIntolerance.code | AllergyIntolerance.reaction.substance | Condition.code | DeviceRequest.code.concept | DiagnosticReport.code | FamilyMemberHistory.condition.code | List.code | Medication.code | MedicationAdministration.medication.concept | MedicationDispense.medication.concept | MedicationRequest.medication.concept | MedicationUsage.medication.concept | Observation.code | Procedure.code | ServiceRequest.code",
    "base": [
      "AllergyIntolerance",
      "Condition",
      "DeviceRequest",
      "DiagnosticReport",
      "FamilyMemberHistory",
      "List",
      "Medication",
      "MedicationAdministration",
      "MedicationDispense",
      "MedicationRequest",
      "MedicationUsage",
      "Observation",
      "Procedure",
      "ServiceRequest"
    ]
  },
  {
    "name": "criticality",
    "expression": "AllergyIntolerance.criticality",
    "base": [
      "AllergyIntolerance"
    ]
  },
  {
    "name": "date",
    "expression": "AllergyIntolerance.recordedDate | CarePlan.period | ClinicalImpression.date | Composition.date | Consent.dateTime | DiagnosticReport.effective | Encounter.period | EpisodeOfCare.period | FamilyMemberHistory.date | Flag.period | (Immunization.occurrence as dateTime) | List.date | Observation.effective | Procedure.occurrence | (RiskAssessment.occurrence as dateTime) | SupplyRequest.authoredOn",
    "base": [
      "AllergyIntolerance",
      "CarePlan",
      "CareTeam",
      "ClinicalImpression",
      "Composition",
      "Consent",
      "DiagnosticReport",
      "Encounter",
      "EpisodeOfCare",
      "FamilyMemberHistory",
      "Flag",
      "Immunization",
      "List",
      "Observation",
      "Procedure",
      "RiskAssessment",
      "SupplyRequest"
    ]
  },
  {
    "name": "identifier",
    "expression": "AllergyIntolerance.identifier | CarePlan.identifier | CareTeam.identifier | Composition.identifier | Condition.identifier | Consent.identifier | DetectedIssue.identifier | DeviceRequest.identifier | DiagnosticReport.identifier | DocumentManifest.masterIdentifier | DocumentManifest.identifier | DocumentReference.content.identifier | DocumentReference.identifier | Encounter.identifier | EpisodeOfCare.identifier | FamilyMemberHistory.identifier | Goal.identifier | ImagingStudy.identifier | Immunization.identifier | List.identifier | MedicationAdministration.identifier | MedicationDispense.identifier | MedicationRequest.identifier | MedicationUsage.identifier | NutritionOrder.identifier | Observation.identifier | Procedure.identifier | RiskAssessment.identifier | ServiceRequest.identifier | SupplyDelivery.identifier | SupplyRequest.identifier | VisionPrescription.identifier",
    "base": [
      "AllergyIntolerance",
      "CarePlan",
      "CareTeam",
      "Composition",
      "Condition",
      "Consent",
      "DetectedIssue",
      "DeviceRequest",
      "DiagnosticReport",
      "DocumentManifest",
      "DocumentReference",
      "Encounter",
      "EpisodeOfCare",
      "FamilyMemberHistory",
      "Goal",
      "ImagingStudy",
      "Immunization",
      "List",
      "MedicationAdministration",
      "MedicationDispense",
      "MedicationRequest",
      "MedicationUsage",
      "NutritionOrder",
      "Observation",
      "Procedure",
      "RiskAssessment",
      "ServiceRequest",
      "SupplyDelivery",
      "SupplyRequest",
      "VisionPrescription"
    ]
  },
  {
    "name": "last-date",
    "expression": "AllergyIntolerance.lastOccurrence",
    "base": [
      "AllergyIntolerance"
    ]
  },
  {
    "name": "manifestation-code",
    "expression": "AllergyIntolerance.reaction.manifestation.concept",
    "base": [
      "AllergyIntolerance"
    ]
  },
  {
    "name": "manifestation-reference",
    "expression": "AllergyIntolerance.reaction.manifestation.reference",
    "base": [
      "AllergyIntolerance"
    ]
  },
  {
    "name": "patient",
    "expression": "AllergyIntolerance.patient | CarePlan.subject.where(resolve() is Patient) | CareTeam.subject.where(resolve() is Patient) | ClinicalImpression.subject.where(resolve() is Patient) | Composition.subject.where(resolve() is Patient) | Condition.subject.where(resolve() is Patient) | Consent.subject.where(resolve() is Patient) | DetectedIssue.patient | DeviceRequest.subject.where(resolve() is Patient) | DeviceUsage.subject | DiagnosticReport.subject.where(resolve() is Patient) | DocumentManifest.subject.where(resolve() is Patient) | DocumentReference.subject.where(resolve() is Patient) | Encounter.subject.where(resolve() is Patient) | EpisodeOfCare.patient | FamilyMemberHistory.patient | Flag.subject.where(resolve() is Patient) | Goal.subject.where(resolve() is Patient) | ImagingStudy.subject.where(resolve() is Patient) | Immunization.patient | List.subject.where(resolve() is Patient) | MedicationAdministration.subject.where(resolve() is Patient) | MedicationDispense.subject.where(resolve() is Patient) | MedicationRequest.subject.where(resolve() is Patient) | MedicationUsage.subject.where(resolve() is Patient) | NutritionOrder.patient | Observation.subject.where(resolve() is Patient) | Procedure.subject.where(resolve() is Patient) | RiskAssessment.subject.where(resolve() is Patient) | ServiceRequest.subject.where(resolve() is Patient) | SupplyDelivery.patient | VisionPrescription.patient",
    "base": [
      "AllergyIntolerance",
      "CarePlan",
      "CareTeam",
      "ClinicalImpression",
      "Composition",
      "Condition",
      "Consent",
      "DetectedIssue",
      "DeviceRequest",
      "DeviceUsage",
      "DiagnosticReport",
      "DocumentManifest",
      "DocumentReference",
      "Encounter",
      "EpisodeOfCare",
      "FamilyMemberHistory",
      "Flag",
      "Goal",
      "ImagingStudy",
      "Immunization",
      "List",
      "MedicationAdministration",
      "MedicationDispense",
      "MedicationRequest",
      "MedicationUsage",
      "NutritionOrder",
      "Observation",
      "Procedure",
      "RiskAssessment",
      "ServiceRequest",
      "SupplyDelivery",
      "VisionPrescription"
    ]
  },
  {
    "name": "recorder",
    "expression": "AllergyIntolerance.recorder",
    "base": [
      "AllergyIntolerance"
    ]
  },
  {
    "name": "route",
    "expression": "AllergyIntolerance.reaction.exposureRoute",
    "base": [
      "AllergyIntolerance"
    ]
  },
  {
    "name": "severity",
    "expression": "AllergyIntolerance.reaction.severity",
    "base": [
      "AllergyIntolerance"
    ]
  },
  {
    "name": "type",
    "expression": "AllergyIntolerance.type | Composition.type | DocumentManifest.type | DocumentReference.type | Encounter.type | EpisodeOfCare.type",
    "base": [
      "AllergyIntolerance",
      "Composition",
      "DocumentManifest",
      "DocumentReference",
      "Encounter",
      "EpisodeOfCare"
    ]
  },
  {
    "name": "verification-status",
    "expression": "AllergyIntolerance.verificationStatus",
    "base": [
      "AllergyIntolerance"
    ]
  },
  {
    "name": "actor",
    "expression": "Appointment.participant.actor",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "appointment-type",
    "expression": "Appointment.appointmentType",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "based-on",
    "expression": "Appointment.basedOn",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "date",
    "expression": "Appointment.start",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "identifier",
    "expression": "Appointment.identifier",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "location",
    "expression": "Appointment.participant.actor.where(resolve() is Location)",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "part-status",
    "expression": "Appointment.participant.status",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "patient",
    "expression": "Appointment.participant.actor.where(resolve() is Patient)",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "practitioner",
    "expression": "Appointment.participant.actor.where(resolve() is Practitioner)",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "reason-code",
    "expression": "Appointment.reason.concept",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "reason-reference",
    "expression": "Appointment.reason.reference",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "service-category",
    "expression": "Appointment.serviceCategory",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "service-type",
    "expression": "Appointment.serviceType",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "slot",
    "expression": "Appointment.slot",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "specialty",
    "expression": "Appointment.specialty",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "status",
    "expression": "Appointment.status",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "supporting-info",
    "expression": "Appointment.supportingInformation",
    "base": [
      "Appointment"
    ]
  },
  {
    "name": "actor",
    "expression": "AppointmentResponse.actor",
    "base": [
      "AppointmentResponse"
    ]
  },
  {
    "name": "appointment",
    "expression": "AppointmentResponse.appointment",
    "base": [
      "AppointmentResponse"
    ]
  },
  {
    "name": "identifier",
    "expression": "AppointmentResponse.identifier",
    "base": [
      "AppointmentResponse"
    ]
  },
  {
    "name": "location",
    "expression": "AppointmentResponse.actor.where(resolve() is Location)",
    "base": [
      "AppointmentResponse"
    ]
  },
  {
    "name": "part-status",
    "expression": "AppointmentResponse.participantStatus",
    "base": [
      "AppointmentResponse"
    ]
  },
  {
    "name": "patient",
    "expression": "AppointmentResponse.actor.where(resolve() is Patient)",
    "base": [
      "AppointmentResponse"
    ]
  },
  {
    "name": "practitioner",
    "expression": "AppointmentResponse.actor.where(resolve() is Practitioner)",
    "base": [
      "AppointmentResponse"
    ]
  },
  {
    "name": "action",
    "expression": "AuditEvent.action",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "address",
    "expression": "AuditEvent.agent.network.address",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "agent",
    "expression": "AuditEvent.agent.who",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "agent-name",
    "expression": "AuditEvent.agent.name",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "agent-role",
    "expression": "AuditEvent.agent.role",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "altid",
    "expression": "AuditEvent.agent.altId",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "based-on",
    "expression": "AuditEvent.basedOn",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "date",
    "expression": "AuditEvent.recorded",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "encounter",
    "expression": "AuditEvent.encounter",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "entity",
    "expression": "AuditEvent.entity.what",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "entity-name",
    "expression": "AuditEvent.entity.name",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "entity-role",
    "expression": "AuditEvent.entity.role",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "entity-type",
    "expression": "AuditEvent.entity.type",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "outcome",
    "expression": "AuditEvent.outcome",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "patient",
    "expression": "AuditEvent.agent.who.where(resolve() is Patient) | AuditEvent.entity.what.where(resolve() is Patient)",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "policy",
    "expression": "AuditEvent.agent.policy",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "purpose",
    "expression": "AuditEvent.purposeOfEvent | AuditEvent.agent.purposeOfUse",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "site",
    "expression": "AuditEvent.source.site",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "source",
    "expression": "AuditEvent.source.observer",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "subtype",
    "expression": "AuditEvent.subtype",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "type",
    "expression": "AuditEvent.type",
    "base": [
      "AuditEvent"
    ]
  },
  {
    "name": "author",
    "expression": "Basic.author",
    "base": [
      "Basic"
    ]
  },
  {
    "name": "code",
    "expression": "Basic.code",
    "base": [
      "Basic"
    ]
  },
  {
    "name": "created",
    "expression": "Basic.created",
    "base": [
      "Basic"
    ]
  },
  {
    "name": "identifier",
    "expression": "Basic.identifier",
    "base": [
      "Basic"
    ]
  },
  {
    "name": "patient",
    "expression": "Basic.subject.where(resolve() is Patient)",
    "base": [
      "Basic"
    ]
  },
  {
    "name": "subject",
    "expression": "Basic.subject",
    "base": [
      "Basic"
    ]
  },
  {
    "name": "identifier",
    "expression": "BodyStructure.identifier",
    "base": [
      "BodyStructure"
    ]
  },
  {
    "name": "location",
    "expression": "BodyStructure.location",
    "base": [
      "BodyStructure"
    ]
  },
  {
    "name": "morphology",
    "expression": "BodyStructure.morphology",
    "base": [
      "BodyStructure"
    ]
  },
  {
    "name": "patient",
    "expression": "BodyStructure.patient",
    "base": [
      "BodyStructure"
    ]
  },
  {
    "name": "composition",
    "expression": "Bundle.entry[0].resource",
    "base": [
      "Bundle"
    ]
  },
  {
    "name": "identifier",
    "expression": "Bundle.identifier",
    "base": [
      "Bundle"
    ]
  },
  {
    "name": "message",
    "expression": "Bundle.entry[0].resource",
    "base": [
      "Bundle"
    ]
  },
  {
    "name": "timestamp",
    "expression": "Bundle.timestamp",
    "base": [
      "Bundle"
    ]
  },
  {
    "name": "type",
    "expression": "Bundle.type",
    "base": [
      "Bundle"
    ]
  },
  {
    "name": "context",
    "expression": "(CapabilityStatement.useContext.value as CodeableConcept) | (CodeSystem.useContext.value as CodeableConcept) | (CompartmentDefinition.useContext.value as CodeableConcept) | (ConceptMap.useContext.value as CodeableConcept) | (GraphDefinition.useContext.value as CodeableConcept) | (ImplementationGuide.useContext.value as CodeableConcept) | (MessageDefinition.useContext.value as CodeableConcept) | (NamingSystem.useContext.value as CodeableConcept) | (OperationDefinition.useContext.value as CodeableConcept) | (SearchParameter.useContext.value as CodeableConcept) | (StructureDefinition.useContext.value as CodeableConcept) | (StructureMap.useContext.value as CodeableConcept) | (TerminologyCapabilities.useContext.value as CodeableConcept) | (ValueSet.useContext.value as CodeableConcept)",
    "base": [
      "CapabilityStatement",
      "CodeSystem",
      "CompartmentDefinition",
      "ConceptMap",
      "GraphDefinition",
      "ImplementationGuide",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "SearchParameter",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(CapabilityStatement.useContext.value as Quantity) | (CapabilityStatement.useContext.value as Range) | (CodeSystem.useContext.value as Quantity) | (CodeSystem.useContext.value as Range) | (CompartmentDefinition.useContext.value as Quantity) | (CompartmentDefinition.useContext.value as Range) | (ConceptMap.useContext.value as Quantity) | (ConceptMap.useContext.value as Range) | (GraphDefinition.useContext.value as Quantity) | (GraphDefinition.useContext.value as Range) | (ImplementationGuide.useContext.value as Quantity) | (ImplementationGuide.useContext.value as Range) | (MessageDefinition.useContext.value as Quantity) | (MessageDefinition.useContext.value as Range) | (NamingSystem.useContext.value as Quantity) | (NamingSystem.useContext.value as Range) | (OperationDefinition.useContext.value as Quantity) | (OperationDefinition.useContext.value as Range) | (SearchParameter.useContext.value as Quantity) | (SearchParameter.useContext.value as Range) | (StructureDefinition.useContext.value as Quantity) | (StructureDefinition.useContext.value as Range) | (StructureMap.useContext.value as Quantity) | (StructureMap.useContext.value as Range) | (TerminologyCapabilities.useContext.value as Quantity) | (TerminologyCapabilities.useContext.value as Range) | (ValueSet.useContext.value as Quantity) | (ValueSet.useContext.value as Range)",
    "base": [
      "CapabilityStatement",
      "CodeSystem",
      "CompartmentDefinition",
      "ConceptMap",
      "GraphDefinition",
      "ImplementationGuide",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "SearchParameter",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "context-type",
    "expression": "CapabilityStatement.useContext.code | CodeSystem.useContext.code | CompartmentDefinition.useContext.code | ConceptMap.useContext.code | GraphDefinition.useContext.code | ImplementationGuide.useContext.code | MessageDefinition.useContext.code | NamingSystem.useContext.code | OperationDefinition.useContext.code | SearchParameter.useContext.code | StructureDefinition.useContext.code | StructureMap.useContext.code | TerminologyCapabilities.useContext.code | ValueSet.useContext.code",
    "base": [
      "CapabilityStatement",
      "CodeSystem",
      "CompartmentDefinition",
      "ConceptMap",
      "GraphDefinition",
      "ImplementationGuide",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "SearchParameter",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "date",
    "expression": "CapabilityStatement.date | CodeSystem.date | CompartmentDefinition.date | ConceptMap.date | GraphDefinition.date | ImplementationGuide.date | MessageDefinition.date | NamingSystem.date | OperationDefinition.date | SearchParameter.date | StructureDefinition.date | StructureMap.date | TerminologyCapabilities.date | ValueSet.date",
    "base": [
      "CapabilityStatement",
      "CodeSystem",
      "CompartmentDefinition",
      "ConceptMap",
      "GraphDefinition",
      "ImplementationGuide",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "SearchParameter",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "description",
    "expression": "CapabilityStatement.description | CodeSystem.description | CompartmentDefinition.description | ConceptMap.description | GraphDefinition.description | ImplementationGuide.description | MessageDefinition.description | NamingSystem.description | OperationDefinition.description | SearchParameter.description | StructureDefinition.description | StructureMap.description | TerminologyCapabilities.description | ValueSet.description",
    "base": [
      "CapabilityStatement",
      "CodeSystem",
      "CompartmentDefinition",
      "ConceptMap",
      "GraphDefinition",
      "ImplementationGuide",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "SearchParameter",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "fhirversion",
    "expression": "CapabilityStatement.version",
    "base": [
      "CapabilityStatement"
    ]
  },
  {
    "name": "format",
    "expression": "CapabilityStatement.format",
    "base": [
      "CapabilityStatement"
    ]
  },
  {
    "name": "guide",
    "expression": "CapabilityStatement.implementationGuide",
    "base": [
      "CapabilityStatement"
    ]
  },
  {
    "name": "jurisdiction",
    "expression": "CapabilityStatement.jurisdiction | CodeSystem.jurisdiction | ConceptMap.jurisdiction | GraphDefinition.jurisdiction | ImplementationGuide.jurisdiction | MessageDefinition.jurisdiction | NamingSystem.jurisdiction | OperationDefinition.jurisdiction | SearchParameter.jurisdiction | StructureDefinition.jurisdiction | StructureMap.jurisdiction | TerminologyCapabilities.jurisdiction | ValueSet.jurisdiction",
    "base": [
      "CapabilityStatement",
      "CodeSystem",
      "ConceptMap",
      "GraphDefinition",
      "ImplementationGuide",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "SearchParameter",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "mode",
    "expression": "CapabilityStatement.rest.mode",
    "base": [
      "CapabilityStatement"
    ]
  },
  {
    "name": "name",
    "expression": "CapabilityStatement.name | CodeSystem.name | CompartmentDefinition.name | ConceptMap.name | GraphDefinition.name | ImplementationGuide.name | MessageDefinition.name | NamingSystem.name | OperationDefinition.name | SearchParameter.name | StructureDefinition.name | StructureMap.name | TerminologyCapabilities.name | ValueSet.name",
    "base": [
      "CapabilityStatement",
      "CodeSystem",
      "CompartmentDefinition",
      "ConceptMap",
      "GraphDefinition",
      "ImplementationGuide",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "SearchParameter",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "publisher",
    "expression": "CapabilityStatement.publisher | CodeSystem.publisher | CompartmentDefinition.publisher | ConceptMap.publisher | GraphDefinition.publisher | ImplementationGuide.publisher | MessageDefinition.publisher | NamingSystem.publisher | OperationDefinition.publisher | SearchParameter.publisher | StructureDefinition.publisher | StructureMap.publisher | TerminologyCapabilities.publisher | ValueSet.publisher",
    "base": [
      "CapabilityStatement",
      "CodeSystem",
      "CompartmentDefinition",
      "ConceptMap",
      "GraphDefinition",
      "ImplementationGuide",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "SearchParameter",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "resource",
    "expression": "CapabilityStatement.rest.resource.type",
    "base": [
      "CapabilityStatement"
    ]
  },
  {
    "name": "resource-profile",
    "expression": "CapabilityStatement.rest.resource.profile",
    "base": [
      "CapabilityStatement"
    ]
  },
  {
    "name": "security-service",
    "expression": "CapabilityStatement.rest.security.service",
    "base": [
      "CapabilityStatement"
    ]
  },
  {
    "name": "software",
    "expression": "CapabilityStatement.software.name",
    "base": [
      "CapabilityStatement"
    ]
  },
  {
    "name": "status",
    "expression": "CapabilityStatement.status | CodeSystem.status | CompartmentDefinition.status | ConceptMap.status | GraphDefinition.status | ImplementationGuide.status | MessageDefinition.status | NamingSystem.status | OperationDefinition.status | SearchParameter.status | StructureDefinition.status | StructureMap.status | TerminologyCapabilities.status | ValueSet.status",
    "base": [
      "CapabilityStatement",
      "CodeSystem",
      "CompartmentDefinition",
      "ConceptMap",
      "GraphDefinition",
      "ImplementationGuide",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "SearchParameter",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "supported-profile",
    "expression": "CapabilityStatement.rest.resource.supportedProfile",
    "base": [
      "CapabilityStatement"
    ]
  },
  {
    "name": "title",
    "expression": "CapabilityStatement.title | CodeSystem.title | ConceptMap.title | ImplementationGuide.title | MessageDefinition.title | OperationDefinition.title | StructureDefinition.title | StructureMap.title | TerminologyCapabilities.title | ValueSet.title",
    "base": [
      "CapabilityStatement",
      "CodeSystem",
      "ConceptMap",
      "ImplementationGuide",
      "MessageDefinition",
      "OperationDefinition",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "url",
    "expression": "CapabilityStatement.url | CodeSystem.url | CompartmentDefinition.url | ConceptMap.url | GraphDefinition.url | ImplementationGuide.url | MessageDefinition.url | NamingSystem.url | OperationDefinition.url | SearchParameter.url | StructureDefinition.url | StructureMap.url | TerminologyCapabilities.url | ValueSet.url",
    "base": [
      "CapabilityStatement",
      "CodeSystem",
      "CompartmentDefinition",
      "ConceptMap",
      "GraphDefinition",
      "ImplementationGuide",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "SearchParameter",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "version",
    "expression": "CapabilityStatement.version | CodeSystem.version | CompartmentDefinition.version | ConceptMap.version | GraphDefinition.version | ImplementationGuide.version | MessageDefinition.version | NamingSystem.version | OperationDefinition.version | SearchParameter.version | StructureDefinition.version | StructureMap.version | TerminologyCapabilities.version | ValueSet.version",
    "base": [
      "CapabilityStatement",
      "CodeSystem",
      "CompartmentDefinition",
      "ConceptMap",
      "GraphDefinition",
      "ImplementationGuide",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "SearchParameter",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "CapabilityStatement.useContext | CodeSystem.useContext | CompartmentDefinition.useContext | ConceptMap.useContext | GraphDefinition.useContext | ImplementationGuide.useContext | MessageDefinition.useContext | NamingSystem.useContext | OperationDefinition.useContext | SearchParameter.useContext | StructureDefinition.useContext | StructureMap.useContext | TerminologyCapabilities.useContext | ValueSet.useContext",
    "base": [
      "CapabilityStatement",
      "CodeSystem",
      "CompartmentDefinition",
      "ConceptMap",
      "GraphDefinition",
      "ImplementationGuide",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "SearchParameter",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "CapabilityStatement.useContext | CodeSystem.useContext | CompartmentDefinition.useContext | ConceptMap.useContext | GraphDefinition.useContext | ImplementationGuide.useContext | MessageDefinition.useContext | NamingSystem.useContext | OperationDefinition.useContext | SearchParameter.useContext | StructureDefinition.useContext | StructureMap.useContext | TerminologyCapabilities.useContext | ValueSet.useContext",
    "base": [
      "CapabilityStatement",
      "CodeSystem",
      "CompartmentDefinition",
      "ConceptMap",
      "GraphDefinition",
      "ImplementationGuide",
      "MessageDefinition",
      "NamingSystem",
      "OperationDefinition",
      "SearchParameter",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "context",
    "expression": "(CapabilityStatement2.useContext.value as CodeableConcept)",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(CapabilityStatement2.useContext.value as Quantity) | (CapabilityStatement2.useContext.value as Range)",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "context-type",
    "expression": "CapabilityStatement2.useContext.code",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "date",
    "expression": "CapabilityStatement2.date",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "description",
    "expression": "CapabilityStatement2.description",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "fhirversion",
    "expression": "CapabilityStatement2.version",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "format",
    "expression": "CapabilityStatement2.format",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "guide",
    "expression": "CapabilityStatement2.implementationGuide",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "jurisdiction",
    "expression": "CapabilityStatement2.jurisdiction",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "mode",
    "expression": "CapabilityStatement2.rest.mode",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "name",
    "expression": "CapabilityStatement2.name",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "publisher",
    "expression": "CapabilityStatement2.publisher",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "resource",
    "expression": "CapabilityStatement2.rest.resource.type",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "resource-profile",
    "expression": "CapabilityStatement2.rest.resource.profile",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "software",
    "expression": "CapabilityStatement2.software.name",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "status",
    "expression": "CapabilityStatement2.status",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "supported-profile",
    "expression": "CapabilityStatement2.rest.resource.supportedProfile",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "title",
    "expression": "CapabilityStatement2.title",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "url",
    "expression": "CapabilityStatement2.url",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "version",
    "expression": "CapabilityStatement2.version",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "CapabilityStatement2.useContext",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "CapabilityStatement2.useContext",
    "base": [
      "CapabilityStatement2"
    ]
  },
  {
    "name": "activity-code",
    "expression": "CarePlan.activity.plannedActivityDetail.code",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "activity-reference",
    "expression": "CarePlan.activity.plannedActivityReference",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "activity-scheduled-date",
    "expression": "CarePlan.activity.plannedActivityDetail.scheduled.as(Timing) | CarePlan.activity.plannedActivityDetail.scheduled.as(Period)",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "activity-scheduled-string",
    "expression": "CarePlan.activity.plannedActivityDetail.scheduled.as(string)",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "based-on",
    "expression": "CarePlan.basedOn",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "care-team",
    "expression": "CarePlan.careTeam",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "category",
    "expression": "CarePlan.category",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "condition",
    "expression": "CarePlan.addresses.reference",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "encounter",
    "expression": "CarePlan.encounter",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "goal",
    "expression": "CarePlan.goal",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "instantiates-canonical",
    "expression": "CarePlan.instantiatesCanonical",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "instantiates-uri",
    "expression": "CarePlan.instantiatesUri",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "intent",
    "expression": "CarePlan.intent",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "part-of",
    "expression": "CarePlan.partOf",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "performer",
    "expression": "CarePlan.activity.plannedActivityDetail.performer",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "replaces",
    "expression": "CarePlan.replaces",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "status",
    "expression": "CarePlan.status",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "subject",
    "expression": "CarePlan.subject",
    "base": [
      "CarePlan"
    ]
  },
  {
    "name": "category",
    "expression": "CareTeam.category",
    "base": [
      "CareTeam"
    ]
  },
  {
    "name": "name",
    "expression": "CareTeam.name | CareTeam.extension('http://hl7.org/fhir/StructureDefinition/careteam-alias')",
    "base": [
      "CareTeam"
    ]
  },
  {
    "name": "participant",
    "expression": "CareTeam.participant.member",
    "base": [
      "CareTeam"
    ]
  },
  {
    "name": "status",
    "expression": "CareTeam.status",
    "base": [
      "CareTeam"
    ]
  },
  {
    "name": "subject",
    "expression": "CareTeam.subject",
    "base": [
      "CareTeam"
    ]
  },
  {
    "name": "identifier",
    "expression": "CatalogEntry.identifier",
    "base": [
      "CatalogEntry"
    ]
  },
  {
    "name": "name",
    "expression": "CatalogEntry.name",
    "base": [
      "CatalogEntry"
    ]
  },
  {
    "name": "orderable",
    "expression": "CatalogEntry.orderable",
    "base": [
      "CatalogEntry"
    ]
  },
  {
    "name": "referenced-item",
    "expression": "CatalogEntry.referencedItem",
    "base": [
      "CatalogEntry"
    ]
  },
  {
    "name": "related-entry",
    "expression": "CatalogEntry.relatedEntry.target",
    "base": [
      "CatalogEntry"
    ]
  },
  {
    "name": "status",
    "expression": "CatalogEntry.status",
    "base": [
      "CatalogEntry"
    ]
  },
  {
    "name": "type",
    "expression": "CatalogEntry.type",
    "base": [
      "CatalogEntry"
    ]
  },
  {
    "name": "account",
    "expression": "ChargeItem.account",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "code",
    "expression": "ChargeItem.code",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "context",
    "expression": "ChargeItem.context",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "entered-date",
    "expression": "ChargeItem.enteredDate",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "enterer",
    "expression": "ChargeItem.enterer",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "factor-override",
    "expression": "ChargeItem.factorOverride",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "identifier",
    "expression": "ChargeItem.identifier",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "occurrence",
    "expression": "ChargeItem.occurrence",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "patient",
    "expression": "ChargeItem.subject.where(resolve() is Patient)",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "performer-actor",
    "expression": "ChargeItem.performer.actor",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "performer-function",
    "expression": "ChargeItem.performer.function",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "performing-organization",
    "expression": "ChargeItem.performingOrganization",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "price-override",
    "expression": "ChargeItem.priceOverride",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "quantity",
    "expression": "ChargeItem.quantity",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "requesting-organization",
    "expression": "ChargeItem.requestingOrganization",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "service",
    "expression": "ChargeItem.service",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "subject",
    "expression": "ChargeItem.subject",
    "base": [
      "ChargeItem"
    ]
  },
  {
    "name": "context",
    "expression": "(ChargeItemDefinition.useContext.value as CodeableConcept)",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(ChargeItemDefinition.useContext.value as Quantity) | (ChargeItemDefinition.useContext.value as Range)",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "context-type",
    "expression": "ChargeItemDefinition.useContext.code",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "date",
    "expression": "ChargeItemDefinition.date",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "description",
    "expression": "ChargeItemDefinition.description",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "effective",
    "expression": "ChargeItemDefinition.effectivePeriod",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "identifier",
    "expression": "ChargeItemDefinition.identifier",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "jurisdiction",
    "expression": "ChargeItemDefinition.jurisdiction",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "publisher",
    "expression": "ChargeItemDefinition.publisher",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "status",
    "expression": "ChargeItemDefinition.status",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "title",
    "expression": "ChargeItemDefinition.title",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "url",
    "expression": "ChargeItemDefinition.url",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "version",
    "expression": "ChargeItemDefinition.version",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "ChargeItemDefinition.useContext",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "ChargeItemDefinition.useContext",
    "base": [
      "ChargeItemDefinition"
    ]
  },
  {
    "name": "context",
    "expression": "(Citation.useContext.value as CodeableConcept)",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(Citation.useContext.value as Quantity) | (Citation.useContext.value as Range)",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "context-type",
    "expression": "Citation.useContext.code",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "date",
    "expression": "Citation.date",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "description",
    "expression": "Citation.description",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "effective",
    "expression": "Citation.effectivePeriod",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "identifier",
    "expression": "Citation.identifier",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "jurisdiction",
    "expression": "Citation.jurisdiction",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "name",
    "expression": "Citation.name",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "publisher",
    "expression": "Citation.publisher",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "status",
    "expression": "Citation.status",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "title",
    "expression": "Citation.title",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "url",
    "expression": "Citation.url",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "version",
    "expression": "Citation.version",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "Citation.useContext",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "Citation.useContext",
    "base": [
      "Citation"
    ]
  },
  {
    "name": "care-team",
    "expression": "Claim.careTeam.provider",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "created",
    "expression": "Claim.created",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "detail-udi",
    "expression": "Claim.item.detail.udi",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "encounter",
    "expression": "Claim.item.encounter",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "enterer",
    "expression": "Claim.enterer",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "facility",
    "expression": "Claim.facility",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "identifier",
    "expression": "Claim.identifier",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "insurer",
    "expression": "Claim.insurer",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "item-udi",
    "expression": "Claim.item.udi",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "patient",
    "expression": "Claim.patient",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "payee",
    "expression": "Claim.payee.party",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "priority",
    "expression": "Claim.priority",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "procedure-udi",
    "expression": "Claim.procedure.udi",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "provider",
    "expression": "Claim.provider",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "status",
    "expression": "Claim.status",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "subdetail-udi",
    "expression": "Claim.item.detail.subDetail.udi",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "use",
    "expression": "Claim.use",
    "base": [
      "Claim"
    ]
  },
  {
    "name": "created",
    "expression": "ClaimResponse.created",
    "base": [
      "ClaimResponse"
    ]
  },
  {
    "name": "disposition",
    "expression": "ClaimResponse.disposition",
    "base": [
      "ClaimResponse"
    ]
  },
  {
    "name": "identifier",
    "expression": "ClaimResponse.identifier",
    "base": [
      "ClaimResponse"
    ]
  },
  {
    "name": "insurer",
    "expression": "ClaimResponse.insurer",
    "base": [
      "ClaimResponse"
    ]
  },
  {
    "name": "outcome",
    "expression": "ClaimResponse.outcome",
    "base": [
      "ClaimResponse"
    ]
  },
  {
    "name": "patient",
    "expression": "ClaimResponse.patient",
    "base": [
      "ClaimResponse"
    ]
  },
  {
    "name": "payment-date",
    "expression": "ClaimResponse.payment.date",
    "base": [
      "ClaimResponse"
    ]
  },
  {
    "name": "request",
    "expression": "ClaimResponse.request",
    "base": [
      "ClaimResponse"
    ]
  },
  {
    "name": "requestor",
    "expression": "ClaimResponse.requestor",
    "base": [
      "ClaimResponse"
    ]
  },
  {
    "name": "status",
    "expression": "ClaimResponse.status",
    "base": [
      "ClaimResponse"
    ]
  },
  {
    "name": "use",
    "expression": "ClaimResponse.use",
    "base": [
      "ClaimResponse"
    ]
  },
  {
    "name": "encounter",
    "expression": "ClinicalImpression.encounter",
    "base": [
      "ClinicalImpression"
    ]
  },
  {
    "name": "finding-code",
    "expression": "ClinicalImpression.finding.item.concept",
    "base": [
      "ClinicalImpression"
    ]
  },
  {
    "name": "finding-ref",
    "expression": "ClinicalImpression.finding.item.reference",
    "base": [
      "ClinicalImpression"
    ]
  },
  {
    "name": "identifier",
    "expression": "ClinicalImpression.identifier",
    "base": [
      "ClinicalImpression"
    ]
  },
  {
    "name": "performer",
    "expression": "ClinicalImpression.performer",
    "base": [
      "ClinicalImpression"
    ]
  },
  {
    "name": "previous",
    "expression": "ClinicalImpression.previous",
    "base": [
      "ClinicalImpression"
    ]
  },
  {
    "name": "problem",
    "expression": "ClinicalImpression.problem",
    "base": [
      "ClinicalImpression"
    ]
  },
  {
    "name": "status",
    "expression": "ClinicalImpression.status",
    "base": [
      "ClinicalImpression"
    ]
  },
  {
    "name": "subject",
    "expression": "ClinicalImpression.subject",
    "base": [
      "ClinicalImpression"
    ]
  },
  {
    "name": "supporting-info",
    "expression": "ClinicalImpression.supportingInfo",
    "base": [
      "ClinicalImpression"
    ]
  },
  {
    "name": "contraindication",
    "expression": "ClinicalUseIssue.contraindication.diseaseSymptomProcedure",
    "base": [
      "ClinicalUseIssue"
    ]
  },
  {
    "name": "contraindication-reference",
    "expression": "ClinicalUseIssue.contraindication.diseaseSymptomProcedure",
    "base": [
      "ClinicalUseIssue"
    ]
  },
  {
    "name": "effect",
    "expression": "ClinicalUseIssue.undesirableEffect.symptomConditionEffect",
    "base": [
      "ClinicalUseIssue"
    ]
  },
  {
    "name": "effect-reference",
    "expression": "ClinicalUseIssue.undesirableEffect.symptomConditionEffect",
    "base": [
      "ClinicalUseIssue"
    ]
  },
  {
    "name": "identifier",
    "expression": "ClinicalUseIssue.identifier",
    "base": [
      "ClinicalUseIssue"
    ]
  },
  {
    "name": "indication",
    "expression": "ClinicalUseIssue.indication.diseaseSymptomProcedure",
    "base": [
      "ClinicalUseIssue"
    ]
  },
  {
    "name": "indication-reference",
    "expression": "ClinicalUseIssue.indication.diseaseSymptomProcedure",
    "base": [
      "ClinicalUseIssue"
    ]
  },
  {
    "name": "interaction",
    "expression": "ClinicalUseIssue.interaction.type",
    "base": [
      "ClinicalUseIssue"
    ]
  },
  {
    "name": "product",
    "expression": "ClinicalUseIssue.subject.where(resolve() is MedicinalProductDefinition)",
    "base": [
      "ClinicalUseIssue"
    ]
  },
  {
    "name": "subject",
    "expression": "ClinicalUseIssue.subject",
    "base": [
      "ClinicalUseIssue"
    ]
  },
  {
    "name": "type",
    "expression": "ClinicalUseIssue.type",
    "base": [
      "ClinicalUseIssue"
    ]
  },
  {
    "name": "code",
    "expression": "CodeSystem.concept.code",
    "base": [
      "CodeSystem"
    ]
  },
  {
    "name": "content-mode",
    "expression": "CodeSystem.content",
    "base": [
      "CodeSystem"
    ]
  },
  {
    "name": "identifier",
    "expression": "CodeSystem.identifier | ConceptMap.identifier | MessageDefinition.identifier | StructureDefinition.identifier | StructureMap.identifier | TerminologyCapabilities.identifier | ValueSet.identifier",
    "base": [
      "CodeSystem",
      "ConceptMap",
      "MessageDefinition",
      "StructureDefinition",
      "StructureMap",
      "TerminologyCapabilities",
      "ValueSet"
    ]
  },
  {
    "name": "language",
    "expression": "CodeSystem.concept.designation.language",
    "base": [
      "CodeSystem"
    ]
  },
  {
    "name": "supplements",
    "expression": "CodeSystem.supplements",
    "base": [
      "CodeSystem"
    ]
  },
  {
    "name": "system",
    "expression": "CodeSystem.url",
    "base": [
      "CodeSystem"
    ]
  },
  {
    "name": "based-on",
    "expression": "Communication.basedOn",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "category",
    "expression": "Communication.category",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "encounter",
    "expression": "Communication.encounter",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "identifier",
    "expression": "Communication.identifier",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "instantiates-canonical",
    "expression": "Communication.instantiatesCanonical",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "instantiates-uri",
    "expression": "Communication.instantiatesUri",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "medium",
    "expression": "Communication.medium",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "part-of",
    "expression": "Communication.partOf",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "patient",
    "expression": "Communication.subject.where(resolve() is Patient)",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "received",
    "expression": "Communication.received",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "recipient",
    "expression": "Communication.recipient",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "sender",
    "expression": "Communication.sender",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "sent",
    "expression": "Communication.sent",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "status",
    "expression": "Communication.status",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "subject",
    "expression": "Communication.subject",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "topic",
    "expression": "Communication.topic",
    "base": [
      "Communication"
    ]
  },
  {
    "name": "authored",
    "expression": "CommunicationRequest.authoredOn",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "based-on",
    "expression": "CommunicationRequest.basedOn",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "category",
    "expression": "CommunicationRequest.category",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "encounter",
    "expression": "CommunicationRequest.encounter",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "group-identifier",
    "expression": "CommunicationRequest.groupIdentifier",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "identifier",
    "expression": "CommunicationRequest.identifier",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "information-provider",
    "expression": "CommunicationRequest.informationProvider",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "medium",
    "expression": "CommunicationRequest.medium",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "occurrence",
    "expression": "CommunicationRequest.occurrence.as(dateTime) | CommunicationRequest.occurrence.as(Period)",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "patient",
    "expression": "CommunicationRequest.subject.where(resolve() is Patient)",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "priority",
    "expression": "CommunicationRequest.priority",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "recipient",
    "expression": "CommunicationRequest.recipient",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "replaces",
    "expression": "CommunicationRequest.replaces",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "requester",
    "expression": "CommunicationRequest.requester",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "status",
    "expression": "CommunicationRequest.status",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "subject",
    "expression": "CommunicationRequest.subject",
    "base": [
      "CommunicationRequest"
    ]
  },
  {
    "name": "code",
    "expression": "CompartmentDefinition.code",
    "base": [
      "CompartmentDefinition"
    ]
  },
  {
    "name": "resource",
    "expression": "CompartmentDefinition.resource.code",
    "base": [
      "CompartmentDefinition"
    ]
  },
  {
    "name": "attester",
    "expression": "Composition.attester.party",
    "base": [
      "Composition"
    ]
  },
  {
    "name": "author",
    "expression": "Composition.author",
    "base": [
      "Composition"
    ]
  },
  {
    "name": "category",
    "expression": "Composition.category",
    "base": [
      "Composition"
    ]
  },
  {
    "name": "confidentiality",
    "expression": "Composition.confidentiality",
    "base": [
      "Composition"
    ]
  },
  {
    "name": "context",
    "expression": "Composition.event.code",
    "base": [
      "Composition"
    ]
  },
  {
    "name": "encounter",
    "expression": "Composition.encounter | DeviceRequest.encounter | DiagnosticReport.encounter | DocumentReference.encounter | Flag.encounter | List.encounter | NutritionOrder.encounter | Observation.encounter | Procedure.encounter | RiskAssessment.encounter | ServiceRequest.encounter | VisionPrescription.encounter",
    "base": [
      "Composition",
      "DeviceRequest",
      "DiagnosticReport",
      "DocumentReference",
      "Flag",
      "List",
      "NutritionOrder",
      "Observation",
      "Procedure",
      "RiskAssessment",
      "ServiceRequest",
      "VisionPrescription"
    ]
  },
  {
    "name": "entry",
    "expression": "Composition.section.entry",
    "base": [
      "Composition"
    ]
  },
  {
    "name": "period",
    "expression": "Composition.event.period",
    "base": [
      "Composition"
    ]
  },
  {
    "name": "related-id",
    "expression": "(Composition.relatesTo.target as Identifier)",
    "base": [
      "Composition"
    ]
  },
  {
    "name": "related-ref",
    "expression": "(Composition.relatesTo.target as Reference)",
    "base": [
      "Composition"
    ]
  },
  {
    "name": "section",
    "expression": "Composition.section.code",
    "base": [
      "Composition"
    ]
  },
  {
    "name": "status",
    "expression": "Composition.status",
    "base": [
      "Composition"
    ]
  },
  {
    "name": "subject",
    "expression": "Composition.subject",
    "base": [
      "Composition"
    ]
  },
  {
    "name": "title",
    "expression": "Composition.title",
    "base": [
      "Composition"
    ]
  },
  {
    "name": "dependson",
    "expression": "ConceptMap.group.element.target.dependsOn.property",
    "base": [
      "ConceptMap"
    ]
  },
  {
    "name": "other",
    "expression": "ConceptMap.group.unmapped.url",
    "base": [
      "ConceptMap"
    ]
  },
  {
    "name": "product",
    "expression": "ConceptMap.group.element.target.product.property",
    "base": [
      "ConceptMap"
    ]
  },
  {
    "name": "source",
    "expression": "(ConceptMap.source as canonical)",
    "base": [
      "ConceptMap"
    ]
  },
  {
    "name": "source-code",
    "expression": "ConceptMap.group.element.code",
    "base": [
      "ConceptMap"
    ]
  },
  {
    "name": "source-system",
    "expression": "ConceptMap.group.source",
    "base": [
      "ConceptMap"
    ]
  },
  {
    "name": "source-uri",
    "expression": "(ConceptMap.source as uri)",
    "base": [
      "ConceptMap"
    ]
  },
  {
    "name": "target",
    "expression": "(ConceptMap.target as canonical)",
    "base": [
      "ConceptMap"
    ]
  },
  {
    "name": "target-code",
    "expression": "ConceptMap.group.element.target.code",
    "base": [
      "ConceptMap"
    ]
  },
  {
    "name": "target-system",
    "expression": "ConceptMap.group.target",
    "base": [
      "ConceptMap"
    ]
  },
  {
    "name": "target-uri",
    "expression": "(ConceptMap.target as uri)",
    "base": [
      "ConceptMap"
    ]
  },
  {
    "name": "abatement-age",
    "expression": "Condition.abatement.as(Age) | Condition.abatement.as(Range)",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "abatement-date",
    "expression": "Condition.abatement.as(dateTime) | Condition.abatement.as(Period)",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "abatement-string",
    "expression": "Condition.abatement.as(string)",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "asserter",
    "expression": "Condition.asserter",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "body-site",
    "expression": "Condition.bodySite",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "category",
    "expression": "Condition.category",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "clinical-status",
    "expression": "Condition.clinicalStatus",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "encounter",
    "expression": "Condition.encounter",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "evidence",
    "expression": "Condition.evidence.code",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "evidence-detail",
    "expression": "Condition.evidence.detail",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "onset-age",
    "expression": "Condition.onset.as(Age) | Condition.onset.as(Range)",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "onset-date",
    "expression": "Condition.onset.as(dateTime) | Condition.onset.as(Period)",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "onset-info",
    "expression": "Condition.onset.as(string)",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "recorded-date",
    "expression": "Condition.recordedDate",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "severity",
    "expression": "Condition.severity",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "stage",
    "expression": "Condition.stage.summary",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "subject",
    "expression": "Condition.subject",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "verification-status",
    "expression": "Condition.verificationStatus",
    "base": [
      "Condition"
    ]
  },
  {
    "name": "context",
    "expression": "(ConditionDefinition.useContext.value as CodeableConcept)",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(ConditionDefinition.useContext.value as Quantity) | (ConditionDefinition.useContext.value as Range)",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "context-type",
    "expression": "ConditionDefinition.useContext.code",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "date",
    "expression": "ConditionDefinition.date",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "description",
    "expression": "ConditionDefinition.description",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "identifier",
    "expression": "ConditionDefinition.identifier",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "jurisdiction",
    "expression": "ConditionDefinition.jurisdiction",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "name",
    "expression": "ConditionDefinition.name",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "publisher",
    "expression": "ConditionDefinition.publisher",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "status",
    "expression": "ConditionDefinition.status",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "title",
    "expression": "ConditionDefinition.title",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "url",
    "expression": "ConditionDefinition.url",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "version",
    "expression": "ConditionDefinition.version",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "ConditionDefinition.useContext",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "ConditionDefinition.useContext",
    "base": [
      "ConditionDefinition"
    ]
  },
  {
    "name": "action",
    "expression": "Consent.provision.action",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "actor",
    "expression": "Consent.provision.actor.reference",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "category",
    "expression": "Consent.category",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "consentor",
    "expression": "Consent.performer",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "controller",
    "expression": "Consent.controller",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "data",
    "expression": "Consent.provision.data.reference",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "manager",
    "expression": "Consent.manager",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "period",
    "expression": "Consent.provision.period",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "policy-uri",
    "expression": "Consent.policy.uri",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "purpose",
    "expression": "Consent.provision.purpose",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "scope",
    "expression": "Consent.scope",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "security-label",
    "expression": "Consent.provision.securityLabel",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "source-reference",
    "expression": "Consent.sourceReference",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "status",
    "expression": "Consent.status",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "subject",
    "expression": "Consent.subject",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "verified",
    "expression": "Consent.verification.verified",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "verified-date",
    "expression": "Consent.verification.verificationDate",
    "base": [
      "Consent"
    ]
  },
  {
    "name": "authority",
    "expression": "Contract.authority",
    "base": [
      "Contract"
    ]
  },
  {
    "name": "domain",
    "expression": "Contract.domain",
    "base": [
      "Contract"
    ]
  },
  {
    "name": "identifier",
    "expression": "Contract.identifier",
    "base": [
      "Contract"
    ]
  },
  {
    "name": "instantiates",
    "expression": "Contract.instantiatesUri",
    "base": [
      "Contract"
    ]
  },
  {
    "name": "issued",
    "expression": "Contract.issued",
    "base": [
      "Contract"
    ]
  },
  {
    "name": "patient",
    "expression": "Contract.subject.where(resolve() is Patient)",
    "base": [
      "Contract"
    ]
  },
  {
    "name": "signer",
    "expression": "Contract.signer.party",
    "base": [
      "Contract"
    ]
  },
  {
    "name": "status",
    "expression": "Contract.status",
    "base": [
      "Contract"
    ]
  },
  {
    "name": "subject",
    "expression": "Contract.subject",
    "base": [
      "Contract"
    ]
  },
  {
    "name": "url",
    "expression": "Contract.url",
    "base": [
      "Contract"
    ]
  },
  {
    "name": "beneficiary",
    "expression": "Coverage.beneficiary",
    "base": [
      "Coverage"
    ]
  },
  {
    "name": "class-type",
    "expression": "Coverage.class.type",
    "base": [
      "Coverage"
    ]
  },
  {
    "name": "class-value",
    "expression": "Coverage.class.value",
    "base": [
      "Coverage"
    ]
  },
  {
    "name": "dependent",
    "expression": "Coverage.dependent",
    "base": [
      "Coverage"
    ]
  },
  {
    "name": "identifier",
    "expression": "Coverage.identifier",
    "base": [
      "Coverage"
    ]
  },
  {
    "name": "patient",
    "expression": "Coverage.beneficiary",
    "base": [
      "Coverage"
    ]
  },
  {
    "name": "payor",
    "expression": "Coverage.payor",
    "base": [
      "Coverage"
    ]
  },
  {
    "name": "policy-holder",
    "expression": "Coverage.policyHolder",
    "base": [
      "Coverage"
    ]
  },
  {
    "name": "status",
    "expression": "Coverage.status",
    "base": [
      "Coverage"
    ]
  },
  {
    "name": "subscriber",
    "expression": "Coverage.subscriber",
    "base": [
      "Coverage"
    ]
  },
  {
    "name": "type",
    "expression": "Coverage.type",
    "base": [
      "Coverage"
    ]
  },
  {
    "name": "created",
    "expression": "CoverageEligibilityRequest.created",
    "base": [
      "CoverageEligibilityRequest"
    ]
  },
  {
    "name": "enterer",
    "expression": "CoverageEligibilityRequest.enterer",
    "base": [
      "CoverageEligibilityRequest"
    ]
  },
  {
    "name": "facility",
    "expression": "CoverageEligibilityRequest.facility",
    "base": [
      "CoverageEligibilityRequest"
    ]
  },
  {
    "name": "identifier",
    "expression": "CoverageEligibilityRequest.identifier",
    "base": [
      "CoverageEligibilityRequest"
    ]
  },
  {
    "name": "patient",
    "expression": "CoverageEligibilityRequest.patient",
    "base": [
      "CoverageEligibilityRequest"
    ]
  },
  {
    "name": "provider",
    "expression": "CoverageEligibilityRequest.provider",
    "base": [
      "CoverageEligibilityRequest"
    ]
  },
  {
    "name": "status",
    "expression": "CoverageEligibilityRequest.status",
    "base": [
      "CoverageEligibilityRequest"
    ]
  },
  {
    "name": "created",
    "expression": "CoverageEligibilityResponse.created",
    "base": [
      "CoverageEligibilityResponse"
    ]
  },
  {
    "name": "disposition",
    "expression": "CoverageEligibilityResponse.disposition",
    "base": [
      "CoverageEligibilityResponse"
    ]
  },
  {
    "name": "identifier",
    "expression": "CoverageEligibilityResponse.identifier",
    "base": [
      "CoverageEligibilityResponse"
    ]
  },
  {
    "name": "insurer",
    "expression": "CoverageEligibilityResponse.insurer",
    "base": [
      "CoverageEligibilityResponse"
    ]
  },
  {
    "name": "outcome",
    "expression": "CoverageEligibilityResponse.outcome",
    "base": [
      "CoverageEligibilityResponse"
    ]
  },
  {
    "name": "patient",
    "expression": "CoverageEligibilityResponse.patient",
    "base": [
      "CoverageEligibilityResponse"
    ]
  },
  {
    "name": "request",
    "expression": "CoverageEligibilityResponse.request",
    "base": [
      "CoverageEligibilityResponse"
    ]
  },
  {
    "name": "requestor",
    "expression": "CoverageEligibilityResponse.requestor",
    "base": [
      "CoverageEligibilityResponse"
    ]
  },
  {
    "name": "status",
    "expression": "CoverageEligibilityResponse.status",
    "base": [
      "CoverageEligibilityResponse"
    ]
  },
  {
    "name": "author",
    "expression": "DetectedIssue.author",
    "base": [
      "DetectedIssue"
    ]
  },
  {
    "name": "code",
    "expression": "DetectedIssue.code",
    "base": [
      "DetectedIssue"
    ]
  },
  {
    "name": "identified",
    "expression": "DetectedIssue.identified",
    "base": [
      "DetectedIssue"
    ]
  },
  {
    "name": "implicated",
    "expression": "DetectedIssue.implicated",
    "base": [
      "DetectedIssue"
    ]
  },
  {
    "name": "status",
    "expression": "DetectedIssue.status",
    "base": [
      "DetectedIssue"
    ]
  },
  {
    "name": "definition",
    "expression": "Device.definition",
    "base": [
      "Device"
    ]
  },
  {
    "name": "device-name",
    "expression": "Device.deviceName.name | Device.type.coding.display | Device.type.text",
    "base": [
      "Device"
    ]
  },
  {
    "name": "expiration-date",
    "expression": "Device.expirationDate",
    "base": [
      "Device"
    ]
  },
  {
    "name": "identifier",
    "expression": "Device.identifier",
    "base": [
      "Device"
    ]
  },
  {
    "name": "location",
    "expression": "Device.location",
    "base": [
      "Device"
    ]
  },
  {
    "name": "lot-number",
    "expression": "Device.lotNumber",
    "base": [
      "Device"
    ]
  },
  {
    "name": "manufacture-date",
    "expression": "Device.manufactureDate",
    "base": [
      "Device"
    ]
  },
  {
    "name": "manufacturer",
    "expression": "Device.manufacturer",
    "base": [
      "Device"
    ]
  },
  {
    "name": "model",
    "expression": "Device.modelNumber",
    "base": [
      "Device"
    ]
  },
  {
    "name": "organization",
    "expression": "Device.owner",
    "base": [
      "Device"
    ]
  },
  {
    "name": "parent",
    "expression": "Device.parent",
    "base": [
      "Device"
    ]
  },
  {
    "name": "patient",
    "expression": "Device.patient",
    "base": [
      "Device"
    ]
  },
  {
    "name": "serial-number",
    "expression": "Device.serialNumber",
    "base": [
      "Device"
    ]
  },
  {
    "name": "status",
    "expression": "Device.status",
    "base": [
      "Device"
    ]
  },
  {
    "name": "type",
    "expression": "Device.type",
    "base": [
      "Device"
    ]
  },
  {
    "name": "udi-carrier",
    "expression": "Device.udiCarrier.carrierHRF",
    "base": [
      "Device"
    ]
  },
  {
    "name": "udi-di",
    "expression": "Device.udiCarrier.deviceIdentifier",
    "base": [
      "Device"
    ]
  },
  {
    "name": "url",
    "expression": "Device.url",
    "base": [
      "Device"
    ]
  },
  {
    "name": "version",
    "expression": "Device.version.value",
    "base": [
      "Device"
    ]
  },
  {
    "name": "identifier",
    "expression": "DeviceDefinition.identifier",
    "base": [
      "DeviceDefinition"
    ]
  },
  {
    "name": "parent",
    "expression": "DeviceDefinition.parentDevice",
    "base": [
      "DeviceDefinition"
    ]
  },
  {
    "name": "type",
    "expression": "DeviceDefinition.type",
    "base": [
      "DeviceDefinition"
    ]
  },
  {
    "name": "category",
    "expression": "DeviceMetric.category",
    "base": [
      "DeviceMetric"
    ]
  },
  {
    "name": "identifier",
    "expression": "DeviceMetric.identifier",
    "base": [
      "DeviceMetric"
    ]
  },
  {
    "name": "parent",
    "expression": "DeviceMetric.parent",
    "base": [
      "DeviceMetric"
    ]
  },
  {
    "name": "source",
    "expression": "DeviceMetric.source",
    "base": [
      "DeviceMetric"
    ]
  },
  {
    "name": "type",
    "expression": "DeviceMetric.type",
    "base": [
      "DeviceMetric"
    ]
  },
  {
    "name": "authored-on",
    "expression": "DeviceRequest.authoredOn",
    "base": [
      "DeviceRequest"
    ]
  },
  {
    "name": "based-on",
    "expression": "DeviceRequest.basedOn",
    "base": [
      "DeviceRequest"
    ]
  },
  {
    "name": "device",
    "expression": "DeviceRequest.code.reference",
    "base": [
      "DeviceRequest"
    ]
  },
  {
    "name": "event-date",
    "expression": "(DeviceRequest.occurrence as dateTime) | (DeviceRequest.occurrence as Period)",
    "base": [
      "DeviceRequest"
    ]
  },
  {
    "name": "group-identifier",
    "expression": "DeviceRequest.groupIdentifier",
    "base": [
      "DeviceRequest"
    ]
  },
  {
    "name": "instantiates-canonical",
    "expression": "DeviceRequest.instantiatesCanonical",
    "base": [
      "DeviceRequest"
    ]
  },
  {
    "name": "instantiates-uri",
    "expression": "DeviceRequest.instantiatesUri",
    "base": [
      "DeviceRequest"
    ]
  },
  {
    "name": "insurance",
    "expression": "DeviceRequest.insurance",
    "base": [
      "DeviceRequest"
    ]
  },
  {
    "name": "intent",
    "expression": "DeviceRequest.intent",
    "base": [
      "DeviceRequest"
    ]
  },
  {
    "name": "performer",
    "expression": "DeviceRequest.performer",
    "base": [
      "DeviceRequest"
    ]
  },
  {
    "name": "prior-request",
    "expression": "DeviceRequest.priorRequest",
    "base": [
      "DeviceRequest"
    ]
  },
  {
    "name": "requester",
    "expression": "DeviceRequest.requester",
    "base": [
      "DeviceRequest"
    ]
  },
  {
    "name": "status",
    "expression": "DeviceRequest.status",
    "base": [
      "DeviceRequest"
    ]
  },
  {
    "name": "subject",
    "expression": "DeviceRequest.subject",
    "base": [
      "DeviceRequest"
    ]
  },
  {
    "name": "device",
    "expression": "DeviceUsage.device.concept",
    "base": [
      "DeviceUsage"
    ]
  },
  {
    "name": "identifier",
    "expression": "DeviceUsage.identifier",
    "base": [
      "DeviceUsage"
    ]
  },
  {
    "name": "subject",
    "expression": "DeviceUsage.subject",
    "base": [
      "DeviceUsage"
    ]
  },
  {
    "name": "based-on",
    "expression": "DiagnosticReport.basedOn",
    "base": [
      "DiagnosticReport"
    ]
  },
  {
    "name": "category",
    "expression": "DiagnosticReport.category",
    "base": [
      "DiagnosticReport"
    ]
  },
  {
    "name": "conclusion",
    "expression": "DiagnosticReport.conclusionCode",
    "base": [
      "DiagnosticReport"
    ]
  },
  {
    "name": "issued",
    "expression": "DiagnosticReport.issued",
    "base": [
      "DiagnosticReport"
    ]
  },
  {
    "name": "media",
    "expression": "DiagnosticReport.media.link",
    "base": [
      "DiagnosticReport"
    ]
  },
  {
    "name": "performer",
    "expression": "DiagnosticReport.performer",
    "base": [
      "DiagnosticReport"
    ]
  },
  {
    "name": "result",
    "expression": "DiagnosticReport.result",
    "base": [
      "DiagnosticReport"
    ]
  },
  {
    "name": "results-interpreter",
    "expression": "DiagnosticReport.resultsInterpreter",
    "base": [
      "DiagnosticReport"
    ]
  },
  {
    "name": "specimen",
    "expression": "DiagnosticReport.specimen",
    "base": [
      "DiagnosticReport"
    ]
  },
  {
    "name": "status",
    "expression": "DiagnosticReport.status",
    "base": [
      "DiagnosticReport"
    ]
  },
  {
    "name": "subject",
    "expression": "DiagnosticReport.subject",
    "base": [
      "DiagnosticReport"
    ]
  },
  {
    "name": "author",
    "expression": "DocumentManifest.author",
    "base": [
      "DocumentManifest"
    ]
  },
  {
    "name": "created",
    "expression": "DocumentManifest.created",
    "base": [
      "DocumentManifest"
    ]
  },
  {
    "name": "description",
    "expression": "DocumentManifest.description",
    "base": [
      "DocumentManifest"
    ]
  },
  {
    "name": "item",
    "expression": "DocumentManifest.content",
    "base": [
      "DocumentManifest"
    ]
  },
  {
    "name": "recipient",
    "expression": "DocumentManifest.recipient",
    "base": [
      "DocumentManifest"
    ]
  },
  {
    "name": "related-id",
    "expression": "DocumentManifest.related.identifier",
    "base": [
      "DocumentManifest"
    ]
  },
  {
    "name": "related-ref",
    "expression": "DocumentManifest.related.ref",
    "base": [
      "DocumentManifest"
    ]
  },
  {
    "name": "source",
    "expression": "DocumentManifest.source",
    "base": [
      "DocumentManifest"
    ]
  },
  {
    "name": "status",
    "expression": "DocumentManifest.status",
    "base": [
      "DocumentManifest"
    ]
  },
  {
    "name": "subject",
    "expression": "DocumentManifest.subject",
    "base": [
      "DocumentManifest"
    ]
  },
  {
    "name": "attester",
    "expression": "DocumentReference.attester.party",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "author",
    "expression": "DocumentReference.author",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "based-on",
    "expression": "DocumentReference.basedOn",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "category",
    "expression": "DocumentReference.category",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "contenttype",
    "expression": "DocumentReference.content.attachment.contentType",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "creation",
    "expression": "DocumentReference.content.attachment.creation",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "custodian",
    "expression": "DocumentReference.custodian",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "date",
    "expression": "DocumentReference.date",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "description",
    "expression": "DocumentReference.description",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "doc-status",
    "expression": "DocumentReference.docStatus",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "event",
    "expression": "DocumentReference.event",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "facility",
    "expression": "DocumentReference.facilityType",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "format",
    "expression": "DocumentReference.content.format",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "language",
    "expression": "DocumentReference.content.attachment.language",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "location",
    "expression": "DocumentReference.content.attachment.url",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "period",
    "expression": "DocumentReference.period",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "related",
    "expression": "DocumentReference.related",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "relatesto",
    "expression": "DocumentReference.relatesTo.target",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "relation",
    "expression": "DocumentReference.relatesTo.code",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "security-label",
    "expression": "DocumentReference.securityLabel",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "setting",
    "expression": "DocumentReference.practiceSetting",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "status",
    "expression": "DocumentReference.status",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "subject",
    "expression": "DocumentReference.subject",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "relationship",
    "expression": "DocumentReference.relatesTo",
    "base": [
      "DocumentReference"
    ]
  },
  {
    "name": "account",
    "expression": "Encounter.account",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "appointment",
    "expression": "Encounter.appointment",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "based-on",
    "expression": "Encounter.basedOn",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "class",
    "expression": "Encounter.class",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "diagnosis",
    "expression": "Encounter.diagnosis.condition",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "episode-of-care",
    "expression": "Encounter.episodeOfCare",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "length",
    "expression": "Encounter.length",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "location",
    "expression": "Encounter.location.location",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "location-period",
    "expression": "Encounter.location.period",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "part-of",
    "expression": "Encounter.partOf",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "participant",
    "expression": "Encounter.participant.individual",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "participant-type",
    "expression": "Encounter.participant.type",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "practitioner",
    "expression": "Encounter.participant.individual.where(resolve() is Practitioner)",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "reason-code",
    "expression": "Encounter.reason.concept",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "reason-reference",
    "expression": "Encounter.reason.reference",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "service-provider",
    "expression": "Encounter.serviceProvider",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "special-arrangement",
    "expression": "Encounter.hospitalization.specialArrangement",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "status",
    "expression": "Encounter.status",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "subject",
    "expression": "Encounter.subject",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "subject-status",
    "expression": "Encounter.subjectStatus",
    "base": [
      "Encounter"
    ]
  },
  {
    "name": "connection-type",
    "expression": "Endpoint.connectionType",
    "base": [
      "Endpoint"
    ]
  },
  {
    "name": "identifier",
    "expression": "Endpoint.identifier",
    "base": [
      "Endpoint"
    ]
  },
  {
    "name": "name",
    "expression": "Endpoint.name",
    "base": [
      "Endpoint"
    ]
  },
  {
    "name": "organization",
    "expression": "Endpoint.managingOrganization",
    "base": [
      "Endpoint"
    ]
  },
  {
    "name": "payload-type",
    "expression": "Endpoint.payloadType",
    "base": [
      "Endpoint"
    ]
  },
  {
    "name": "status",
    "expression": "Endpoint.status",
    "base": [
      "Endpoint"
    ]
  },
  {
    "name": "identifier",
    "expression": "EnrollmentRequest.identifier",
    "base": [
      "EnrollmentRequest"
    ]
  },
  {
    "name": "patient",
    "expression": "EnrollmentRequest.candidate",
    "base": [
      "EnrollmentRequest"
    ]
  },
  {
    "name": "status",
    "expression": "EnrollmentRequest.status",
    "base": [
      "EnrollmentRequest"
    ]
  },
  {
    "name": "subject",
    "expression": "EnrollmentRequest.candidate",
    "base": [
      "EnrollmentRequest"
    ]
  },
  {
    "name": "identifier",
    "expression": "EnrollmentResponse.identifier",
    "base": [
      "EnrollmentResponse"
    ]
  },
  {
    "name": "request",
    "expression": "EnrollmentResponse.request",
    "base": [
      "EnrollmentResponse"
    ]
  },
  {
    "name": "status",
    "expression": "EnrollmentResponse.status",
    "base": [
      "EnrollmentResponse"
    ]
  },
  {
    "name": "care-manager",
    "expression": "EpisodeOfCare.careManager.where(resolve() is Practitioner)",
    "base": [
      "EpisodeOfCare"
    ]
  },
  {
    "name": "condition",
    "expression": "EpisodeOfCare.diagnosis.condition",
    "base": [
      "EpisodeOfCare"
    ]
  },
  {
    "name": "incoming-referral",
    "expression": "EpisodeOfCare.referralRequest",
    "base": [
      "EpisodeOfCare"
    ]
  },
  {
    "name": "organization",
    "expression": "EpisodeOfCare.managingOrganization",
    "base": [
      "EpisodeOfCare"
    ]
  },
  {
    "name": "status",
    "expression": "EpisodeOfCare.status",
    "base": [
      "EpisodeOfCare"
    ]
  },
  {
    "name": "composed-of",
    "expression": "EventDefinition.relatedArtifact.where(type='composed-of').resource",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "context",
    "expression": "(EventDefinition.useContext.value as CodeableConcept)",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(EventDefinition.useContext.value as Quantity) | (EventDefinition.useContext.value as Range)",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "context-type",
    "expression": "EventDefinition.useContext.code",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "date",
    "expression": "EventDefinition.date",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "depends-on",
    "expression": "EventDefinition.relatedArtifact.where(type='depends-on').resource",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "derived-from",
    "expression": "EventDefinition.relatedArtifact.where(type='derived-from').resource",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "description",
    "expression": "EventDefinition.description",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "effective",
    "expression": "EventDefinition.effectivePeriod",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "identifier",
    "expression": "EventDefinition.identifier",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "jurisdiction",
    "expression": "EventDefinition.jurisdiction",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "name",
    "expression": "EventDefinition.name",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "predecessor",
    "expression": "EventDefinition.relatedArtifact.where(type='predecessor').resource",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "publisher",
    "expression": "EventDefinition.publisher",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "status",
    "expression": "EventDefinition.status",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "successor",
    "expression": "EventDefinition.relatedArtifact.where(type='successor').resource",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "title",
    "expression": "EventDefinition.title",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "topic",
    "expression": "EventDefinition.topic",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "url",
    "expression": "EventDefinition.url",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "version",
    "expression": "EventDefinition.version",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "EventDefinition.useContext",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "EventDefinition.useContext",
    "base": [
      "EventDefinition"
    ]
  },
  {
    "name": "context",
    "expression": "(Evidence.useContext.value as CodeableConcept)",
    "base": [
      "Evidence"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(Evidence.useContext.value as Quantity) | (Evidence.useContext.value as Range)",
    "base": [
      "Evidence"
    ]
  },
  {
    "name": "context-type",
    "expression": "Evidence.useContext.code",
    "base": [
      "Evidence"
    ]
  },
  {
    "name": "date",
    "expression": "Evidence.date",
    "base": [
      "Evidence"
    ]
  },
  {
    "name": "description",
    "expression": "Evidence.description",
    "base": [
      "Evidence"
    ]
  },
  {
    "name": "identifier",
    "expression": "Evidence.identifier",
    "base": [
      "Evidence"
    ]
  },
  {
    "name": "publisher",
    "expression": "Evidence.publisher",
    "base": [
      "Evidence"
    ]
  },
  {
    "name": "status",
    "expression": "Evidence.status",
    "base": [
      "Evidence"
    ]
  },
  {
    "name": "title",
    "expression": "Evidence.title",
    "base": [
      "Evidence"
    ]
  },
  {
    "name": "url",
    "expression": "Evidence.url",
    "base": [
      "Evidence"
    ]
  },
  {
    "name": "version",
    "expression": "Evidence.version",
    "base": [
      "Evidence"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "Evidence.useContext",
    "base": [
      "Evidence"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "Evidence.useContext",
    "base": [
      "Evidence"
    ]
  },
  {
    "name": "context",
    "expression": "(EvidenceReport.useContext.value as CodeableConcept)",
    "base": [
      "EvidenceReport"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(EvidenceReport.useContext.value as Quantity) | (EvidenceReport.useContext.value as Range)",
    "base": [
      "EvidenceReport"
    ]
  },
  {
    "name": "context-type",
    "expression": "EvidenceReport.useContext.code",
    "base": [
      "EvidenceReport"
    ]
  },
  {
    "name": "identifier",
    "expression": "EvidenceReport.identifier",
    "base": [
      "EvidenceReport"
    ]
  },
  {
    "name": "publisher",
    "expression": "EvidenceReport.publisher",
    "base": [
      "EvidenceReport"
    ]
  },
  {
    "name": "status",
    "expression": "EvidenceReport.status",
    "base": [
      "EvidenceReport"
    ]
  },
  {
    "name": "url",
    "expression": "EvidenceReport.url",
    "base": [
      "EvidenceReport"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "EvidenceReport.useContext",
    "base": [
      "EvidenceReport"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "EvidenceReport.useContext",
    "base": [
      "EvidenceReport"
    ]
  },
  {
    "name": "composed-of",
    "expression": "EvidenceVariable.relatedArtifact.where(type='composed-of').resource",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "context",
    "expression": "(EvidenceVariable.useContext.value as CodeableConcept)",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(EvidenceVariable.useContext.value as Quantity) | (EvidenceVariable.useContext.value as Range)",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "context-type",
    "expression": "EvidenceVariable.useContext.code",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "date",
    "expression": "EvidenceVariable.date",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "depends-on",
    "expression": "EvidenceVariable.relatedArtifact.where(type='depends-on').resource",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "derived-from",
    "expression": "EvidenceVariable.relatedArtifact.where(type='derived-from').resource",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "description",
    "expression": "EvidenceVariable.description",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "identifier",
    "expression": "EvidenceVariable.identifier",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "name",
    "expression": "EvidenceVariable.name",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "predecessor",
    "expression": "EvidenceVariable.relatedArtifact.where(type='predecessor').resource",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "publisher",
    "expression": "EvidenceVariable.publisher",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "status",
    "expression": "EvidenceVariable.status",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "successor",
    "expression": "EvidenceVariable.relatedArtifact.where(type='successor').resource",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "title",
    "expression": "EvidenceVariable.title",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "topic",
    "expression": null,
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "url",
    "expression": "EvidenceVariable.url",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "version",
    "expression": "EvidenceVariable.version",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "EvidenceVariable.useContext",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "EvidenceVariable.useContext",
    "base": [
      "EvidenceVariable"
    ]
  },
  {
    "name": "context",
    "expression": "(ExampleScenario.useContext.value as CodeableConcept)",
    "base": [
      "ExampleScenario"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(ExampleScenario.useContext.value as Quantity) | (ExampleScenario.useContext.value as Range)",
    "base": [
      "ExampleScenario"
    ]
  },
  {
    "name": "context-type",
    "expression": "ExampleScenario.useContext.code",
    "base": [
      "ExampleScenario"
    ]
  },
  {
    "name": "date",
    "expression": "ExampleScenario.date",
    "base": [
      "ExampleScenario"
    ]
  },
  {
    "name": "identifier",
    "expression": "ExampleScenario.identifier",
    "base": [
      "ExampleScenario"
    ]
  },
  {
    "name": "jurisdiction",
    "expression": "ExampleScenario.jurisdiction",
    "base": [
      "ExampleScenario"
    ]
  },
  {
    "name": "name",
    "expression": "ExampleScenario.name",
    "base": [
      "ExampleScenario"
    ]
  },
  {
    "name": "publisher",
    "expression": "ExampleScenario.publisher",
    "base": [
      "ExampleScenario"
    ]
  },
  {
    "name": "status",
    "expression": "ExampleScenario.status",
    "base": [
      "ExampleScenario"
    ]
  },
  {
    "name": "url",
    "expression": "ExampleScenario.url",
    "base": [
      "ExampleScenario"
    ]
  },
  {
    "name": "version",
    "expression": "ExampleScenario.version",
    "base": [
      "ExampleScenario"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "ExampleScenario.useContext",
    "base": [
      "ExampleScenario"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "ExampleScenario.useContext",
    "base": [
      "ExampleScenario"
    ]
  },
  {
    "name": "care-team",
    "expression": "ExplanationOfBenefit.careTeam.provider",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "claim",
    "expression": "ExplanationOfBenefit.claim",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "coverage",
    "expression": "ExplanationOfBenefit.insurance.coverage",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "created",
    "expression": "ExplanationOfBenefit.created",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "detail-udi",
    "expression": "ExplanationOfBenefit.item.detail.udi",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "disposition",
    "expression": "ExplanationOfBenefit.disposition",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "encounter",
    "expression": "ExplanationOfBenefit.item.encounter",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "enterer",
    "expression": "ExplanationOfBenefit.enterer",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "facility",
    "expression": "ExplanationOfBenefit.facility",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "identifier",
    "expression": "ExplanationOfBenefit.identifier",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "item-udi",
    "expression": "ExplanationOfBenefit.item.udi",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "patient",
    "expression": "ExplanationOfBenefit.patient",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "payee",
    "expression": "ExplanationOfBenefit.payee.party",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "procedure-udi",
    "expression": "ExplanationOfBenefit.procedure.udi",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "provider",
    "expression": "ExplanationOfBenefit.provider",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "status",
    "expression": "ExplanationOfBenefit.status",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "subdetail-udi",
    "expression": "ExplanationOfBenefit.item.detail.subDetail.udi",
    "base": [
      "ExplanationOfBenefit"
    ]
  },
  {
    "name": "instantiates-canonical",
    "expression": "FamilyMemberHistory.instantiatesCanonical",
    "base": [
      "FamilyMemberHistory"
    ]
  },
  {
    "name": "instantiates-uri",
    "expression": "FamilyMemberHistory.instantiatesUri",
    "base": [
      "FamilyMemberHistory"
    ]
  },
  {
    "name": "relationship",
    "expression": "FamilyMemberHistory.relationship",
    "base": [
      "FamilyMemberHistory"
    ]
  },
  {
    "name": "sex",
    "expression": "FamilyMemberHistory.sex",
    "base": [
      "FamilyMemberHistory"
    ]
  },
  {
    "name": "status",
    "expression": "FamilyMemberHistory.status",
    "base": [
      "FamilyMemberHistory"
    ]
  },
  {
    "name": "author",
    "expression": "Flag.author",
    "base": [
      "Flag"
    ]
  },
  {
    "name": "identifier",
    "expression": "Flag.identifier",
    "base": [
      "Flag"
    ]
  },
  {
    "name": "status",
    "expression": "Flag.status",
    "base": [
      "Flag"
    ]
  },
  {
    "name": "subject",
    "expression": "Flag.subject",
    "base": [
      "Flag"
    ]
  },
  {
    "name": "achievement-status",
    "expression": "Goal.achievementStatus",
    "base": [
      "Goal"
    ]
  },
  {
    "name": "category",
    "expression": "Goal.category",
    "base": [
      "Goal"
    ]
  },
  {
    "name": "lifecycle-status",
    "expression": "Goal.lifecycleStatus",
    "base": [
      "Goal"
    ]
  },
  {
    "name": "start-date",
    "expression": "(Goal.start as date)",
    "base": [
      "Goal"
    ]
  },
  {
    "name": "subject",
    "expression": "Goal.subject",
    "base": [
      "Goal"
    ]
  },
  {
    "name": "target-date",
    "expression": "(Goal.target.due as date)",
    "base": [
      "Goal"
    ]
  },
  {
    "name": "start",
    "expression": "GraphDefinition.start",
    "base": [
      "GraphDefinition"
    ]
  },
  {
    "name": "actual",
    "expression": "Group.actual",
    "base": [
      "Group"
    ]
  },
  {
    "name": "characteristic",
    "expression": "Group.characteristic.code",
    "base": [
      "Group"
    ]
  },
  {
    "name": "code",
    "expression": "Group.code",
    "base": [
      "Group"
    ]
  },
  {
    "name": "exclude",
    "expression": "Group.characteristic.exclude",
    "base": [
      "Group"
    ]
  },
  {
    "name": "identifier",
    "expression": "Group.identifier",
    "base": [
      "Group"
    ]
  },
  {
    "name": "managing-entity",
    "expression": "Group.managingEntity",
    "base": [
      "Group"
    ]
  },
  {
    "name": "member",
    "expression": "Group.member.entity",
    "base": [
      "Group"
    ]
  },
  {
    "name": "type",
    "expression": "Group.type",
    "base": [
      "Group"
    ]
  },
  {
    "name": "value",
    "expression": "(Group.characteristic.value as CodeableConcept) | (Group.characteristic.value as boolean)",
    "base": [
      "Group"
    ]
  },
  {
    "name": "characteristic-value",
    "expression": "Group.characteristic",
    "base": [
      "Group"
    ]
  },
  {
    "name": "identifier",
    "expression": "GuidanceResponse.identifier",
    "base": [
      "GuidanceResponse"
    ]
  },
  {
    "name": "patient",
    "expression": "GuidanceResponse.subject.where(resolve() is Patient)",
    "base": [
      "GuidanceResponse"
    ]
  },
  {
    "name": "request",
    "expression": "GuidanceResponse.requestIdentifier",
    "base": [
      "GuidanceResponse"
    ]
  },
  {
    "name": "status",
    "expression": "GuidanceResponse.status",
    "base": [
      "GuidanceResponse"
    ]
  },
  {
    "name": "subject",
    "expression": "GuidanceResponse.subject",
    "base": [
      "GuidanceResponse"
    ]
  },
  {
    "name": "active",
    "expression": "HealthcareService.active",
    "base": [
      "HealthcareService"
    ]
  },
  {
    "name": "characteristic",
    "expression": "HealthcareService.characteristic",
    "base": [
      "HealthcareService"
    ]
  },
  {
    "name": "coverage-area",
    "expression": "HealthcareService.coverageArea",
    "base": [
      "HealthcareService"
    ]
  },
  {
    "name": "endpoint",
    "expression": "HealthcareService.endpoint",
    "base": [
      "HealthcareService"
    ]
  },
  {
    "name": "identifier",
    "expression": "HealthcareService.identifier",
    "base": [
      "HealthcareService"
    ]
  },
  {
    "name": "location",
    "expression": "HealthcareService.location",
    "base": [
      "HealthcareService"
    ]
  },
  {
    "name": "name",
    "expression": "HealthcareService.name",
    "base": [
      "HealthcareService"
    ]
  },
  {
    "name": "organization",
    "expression": "HealthcareService.providedBy",
    "base": [
      "HealthcareService"
    ]
  },
  {
    "name": "program",
    "expression": "HealthcareService.program",
    "base": [
      "HealthcareService"
    ]
  },
  {
    "name": "service-category",
    "expression": "HealthcareService.category",
    "base": [
      "HealthcareService"
    ]
  },
  {
    "name": "service-type",
    "expression": "HealthcareService.type",
    "base": [
      "HealthcareService"
    ]
  },
  {
    "name": "specialty",
    "expression": "HealthcareService.specialty",
    "base": [
      "HealthcareService"
    ]
  },
  {
    "name": "basedon",
    "expression": "ImagingStudy.basedOn",
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "bodysite",
    "expression": "ImagingStudy.series.bodySite",
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "dicom-class",
    "expression": "ImagingStudy.series.instance.sopClass",
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "encounter",
    "expression": "ImagingStudy.encounter",
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "endpoint",
    "expression": "ImagingStudy.endpoint | ImagingStudy.series.endpoint",
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "instance",
    "expression": "ImagingStudy.series.instance.uid",
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "interpreter",
    "expression": "ImagingStudy.interpreter",
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "modality",
    "expression": "ImagingStudy.series.modality",
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "performer",
    "expression": "ImagingStudy.series.performer.actor",
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "reason",
    "expression": null,
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "referrer",
    "expression": "ImagingStudy.referrer",
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "series",
    "expression": "ImagingStudy.series.uid",
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "started",
    "expression": "ImagingStudy.started",
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "status",
    "expression": "ImagingStudy.status",
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "subject",
    "expression": "ImagingStudy.subject",
    "base": [
      "ImagingStudy"
    ]
  },
  {
    "name": "location",
    "expression": "Immunization.location",
    "base": [
      "Immunization"
    ]
  },
  {
    "name": "lot-number",
    "expression": "Immunization.lotNumber",
    "base": [
      "Immunization"
    ]
  },
  {
    "name": "manufacturer",
    "expression": "Immunization.manufacturer",
    "base": [
      "Immunization"
    ]
  },
  {
    "name": "performer",
    "expression": "Immunization.performer.actor",
    "base": [
      "Immunization"
    ]
  },
  {
    "name": "reaction",
    "expression": "Immunization.reaction.detail",
    "base": [
      "Immunization"
    ]
  },
  {
    "name": "reaction-date",
    "expression": "Immunization.reaction.date",
    "base": [
      "Immunization"
    ]
  },
  {
    "name": "reason-code",
    "expression": "Immunization.reason.concept",
    "base": [
      "Immunization"
    ]
  },
  {
    "name": "reason-reference",
    "expression": "Immunization.reason.reference",
    "base": [
      "Immunization"
    ]
  },
  {
    "name": "series",
    "expression": "Immunization.protocolApplied.series",
    "base": [
      "Immunization"
    ]
  },
  {
    "name": "status",
    "expression": "Immunization.status",
    "base": [
      "Immunization"
    ]
  },
  {
    "name": "status-reason",
    "expression": "Immunization.statusReason",
    "base": [
      "Immunization"
    ]
  },
  {
    "name": "target-disease",
    "expression": "Immunization.protocolApplied.targetDisease",
    "base": [
      "Immunization"
    ]
  },
  {
    "name": "vaccine-code",
    "expression": "Immunization.vaccineCode",
    "base": [
      "Immunization"
    ]
  },
  {
    "name": "date",
    "expression": "ImmunizationEvaluation.date",
    "base": [
      "ImmunizationEvaluation"
    ]
  },
  {
    "name": "dose-status",
    "expression": "ImmunizationEvaluation.doseStatus",
    "base": [
      "ImmunizationEvaluation"
    ]
  },
  {
    "name": "identifier",
    "expression": "ImmunizationEvaluation.identifier",
    "base": [
      "ImmunizationEvaluation"
    ]
  },
  {
    "name": "immunization-event",
    "expression": "ImmunizationEvaluation.immunizationEvent",
    "base": [
      "ImmunizationEvaluation"
    ]
  },
  {
    "name": "patient",
    "expression": "ImmunizationEvaluation.patient",
    "base": [
      "ImmunizationEvaluation"
    ]
  },
  {
    "name": "status",
    "expression": "ImmunizationEvaluation.status",
    "base": [
      "ImmunizationEvaluation"
    ]
  },
  {
    "name": "target-disease",
    "expression": "ImmunizationEvaluation.targetDisease",
    "base": [
      "ImmunizationEvaluation"
    ]
  },
  {
    "name": "date",
    "expression": "ImmunizationRecommendation.date",
    "base": [
      "ImmunizationRecommendation"
    ]
  },
  {
    "name": "identifier",
    "expression": "ImmunizationRecommendation.identifier",
    "base": [
      "ImmunizationRecommendation"
    ]
  },
  {
    "name": "information",
    "expression": "ImmunizationRecommendation.recommendation.supportingPatientInformation",
    "base": [
      "ImmunizationRecommendation"
    ]
  },
  {
    "name": "patient",
    "expression": "ImmunizationRecommendation.patient",
    "base": [
      "ImmunizationRecommendation"
    ]
  },
  {
    "name": "status",
    "expression": "ImmunizationRecommendation.recommendation.forecastStatus",
    "base": [
      "ImmunizationRecommendation"
    ]
  },
  {
    "name": "support",
    "expression": "ImmunizationRecommendation.recommendation.supportingImmunization",
    "base": [
      "ImmunizationRecommendation"
    ]
  },
  {
    "name": "target-disease",
    "expression": "ImmunizationRecommendation.recommendation.targetDisease",
    "base": [
      "ImmunizationRecommendation"
    ]
  },
  {
    "name": "vaccine-type",
    "expression": "ImmunizationRecommendation.recommendation.vaccineCode",
    "base": [
      "ImmunizationRecommendation"
    ]
  },
  {
    "name": "depends-on",
    "expression": "ImplementationGuide.dependsOn.uri",
    "base": [
      "ImplementationGuide"
    ]
  },
  {
    "name": "experimental",
    "expression": "ImplementationGuide.experimental",
    "base": [
      "ImplementationGuide"
    ]
  },
  {
    "name": "global",
    "expression": "ImplementationGuide.global.profile",
    "base": [
      "ImplementationGuide"
    ]
  },
  {
    "name": "resource",
    "expression": "ImplementationGuide.definition.resource.reference",
    "base": [
      "ImplementationGuide"
    ]
  },
  {
    "name": "function",
    "expression": "Ingredient.function",
    "base": [
      "Ingredient"
    ]
  },
  {
    "name": "identifier",
    "expression": "Ingredient.identifier",
    "base": [
      "Ingredient"
    ]
  },
  {
    "name": "manufacturer",
    "expression": "Ingredient.manufacturer",
    "base": [
      "Ingredient"
    ]
  },
  {
    "name": "role",
    "expression": "Ingredient.role",
    "base": [
      "Ingredient"
    ]
  },
  {
    "name": "specified-substance",
    "expression": "Ingredient.specifiedSubstance.code.reference",
    "base": [
      "Ingredient"
    ]
  },
  {
    "name": "specified-substance-code",
    "expression": "Ingredient.specifiedSubstance.code.concept",
    "base": [
      "Ingredient"
    ]
  },
  {
    "name": "specified-substance-definition",
    "expression": "Ingredient.specifiedSubstance.code.reference",
    "base": [
      "Ingredient"
    ]
  },
  {
    "name": "substance",
    "expression": "Ingredient.substance.code.reference",
    "base": [
      "Ingredient"
    ]
  },
  {
    "name": "substance-code",
    "expression": "Ingredient.substance.code.concept",
    "base": [
      "Ingredient"
    ]
  },
  {
    "name": "substance-definition",
    "expression": "Ingredient.substance.code.reference",
    "base": [
      "Ingredient"
    ]
  },
  {
    "name": "address",
    "expression": "InsurancePlan.contact.address",
    "base": [
      "InsurancePlan"
    ]
  },
  {
    "name": "address-city",
    "expression": "InsurancePlan.contact.address.city",
    "base": [
      "InsurancePlan"
    ]
  },
  {
    "name": "address-country",
    "expression": "InsurancePlan.contact.address.country",
    "base": [
      "InsurancePlan"
    ]
  },
  {
    "name": "address-postalcode",
    "expression": "InsurancePlan.contact.address.postalCode",
    "base": [
      "InsurancePlan"
    ]
  },
  {
    "name": "address-state",
    "expression": "InsurancePlan.contact.address.state",
    "base": [
      "InsurancePlan"
    ]
  },
  {
    "name": "address-use",
    "expression": "InsurancePlan.contact.address.use",
    "base": [
      "InsurancePlan"
    ]
  },
  {
    "name": "administered-by",
    "expression": "InsurancePlan.administeredBy",
    "base": [
      "InsurancePlan"
    ]
  },
  {
    "name": "endpoint",
    "expression": "InsurancePlan.endpoint",
    "base": [
      "InsurancePlan"
    ]
  },
  {
    "name": "identifier",
    "expression": "InsurancePlan.identifier",
    "base": [
      "InsurancePlan"
    ]
  },
  {
    "name": "name",
    "expression": "name | alias",
    "base": [
      "InsurancePlan"
    ]
  },
  {
    "name": "owned-by",
    "expression": "InsurancePlan.ownedBy",
    "base": [
      "InsurancePlan"
    ]
  },
  {
    "name": "phonetic",
    "expression": "InsurancePlan.name",
    "base": [
      "InsurancePlan"
    ]
  },
  {
    "name": "status",
    "expression": "InsurancePlan.status",
    "base": [
      "InsurancePlan"
    ]
  },
  {
    "name": "type",
    "expression": "InsurancePlan.type",
    "base": [
      "InsurancePlan"
    ]
  },
  {
    "name": "account",
    "expression": "Invoice.account",
    "base": [
      "Invoice"
    ]
  },
  {
    "name": "date",
    "expression": "Invoice.date",
    "base": [
      "Invoice"
    ]
  },
  {
    "name": "identifier",
    "expression": "Invoice.identifier",
    "base": [
      "Invoice"
    ]
  },
  {
    "name": "issuer",
    "expression": "Invoice.issuer",
    "base": [
      "Invoice"
    ]
  },
  {
    "name": "participant",
    "expression": "Invoice.participant.actor",
    "base": [
      "Invoice"
    ]
  },
  {
    "name": "participant-role",
    "expression": "Invoice.participant.role",
    "base": [
      "Invoice"
    ]
  },
  {
    "name": "patient",
    "expression": "Invoice.subject.where(resolve() is Patient)",
    "base": [
      "Invoice"
    ]
  },
  {
    "name": "recipient",
    "expression": "Invoice.recipient",
    "base": [
      "Invoice"
    ]
  },
  {
    "name": "status",
    "expression": "Invoice.status",
    "base": [
      "Invoice"
    ]
  },
  {
    "name": "subject",
    "expression": "Invoice.subject",
    "base": [
      "Invoice"
    ]
  },
  {
    "name": "totalgross",
    "expression": "Invoice.totalGross",
    "base": [
      "Invoice"
    ]
  },
  {
    "name": "totalnet",
    "expression": "Invoice.totalNet",
    "base": [
      "Invoice"
    ]
  },
  {
    "name": "type",
    "expression": "Invoice.type",
    "base": [
      "Invoice"
    ]
  },
  {
    "name": "composed-of",
    "expression": "Library.relatedArtifact.where(type='composed-of').resource",
    "base": [
      "Library"
    ]
  },
  {
    "name": "content-type",
    "expression": "Library.content.contentType",
    "base": [
      "Library"
    ]
  },
  {
    "name": "context",
    "expression": "(Library.useContext.value as CodeableConcept)",
    "base": [
      "Library"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(Library.useContext.value as Quantity) | (Library.useContext.value as Range)",
    "base": [
      "Library"
    ]
  },
  {
    "name": "context-type",
    "expression": "Library.useContext.code",
    "base": [
      "Library"
    ]
  },
  {
    "name": "date",
    "expression": "Library.date",
    "base": [
      "Library"
    ]
  },
  {
    "name": "depends-on",
    "expression": "Library.relatedArtifact.where(type='depends-on').resource",
    "base": [
      "Library"
    ]
  },
  {
    "name": "derived-from",
    "expression": "Library.relatedArtifact.where(type='derived-from').resource",
    "base": [
      "Library"
    ]
  },
  {
    "name": "description",
    "expression": "Library.description",
    "base": [
      "Library"
    ]
  },
  {
    "name": "effective",
    "expression": "Library.effectivePeriod",
    "base": [
      "Library"
    ]
  },
  {
    "name": "identifier",
    "expression": "Library.identifier",
    "base": [
      "Library"
    ]
  },
  {
    "name": "jurisdiction",
    "expression": "Library.jurisdiction",
    "base": [
      "Library"
    ]
  },
  {
    "name": "name",
    "expression": "Library.name",
    "base": [
      "Library"
    ]
  },
  {
    "name": "predecessor",
    "expression": "Library.relatedArtifact.where(type='predecessor').resource",
    "base": [
      "Library"
    ]
  },
  {
    "name": "publisher",
    "expression": "Library.publisher",
    "base": [
      "Library"
    ]
  },
  {
    "name": "status",
    "expression": "Library.status",
    "base": [
      "Library"
    ]
  },
  {
    "name": "successor",
    "expression": "Library.relatedArtifact.where(type='successor').resource",
    "base": [
      "Library"
    ]
  },
  {
    "name": "title",
    "expression": "Library.title",
    "base": [
      "Library"
    ]
  },
  {
    "name": "topic",
    "expression": "Library.topic",
    "base": [
      "Library"
    ]
  },
  {
    "name": "type",
    "expression": "Library.type",
    "base": [
      "Library"
    ]
  },
  {
    "name": "url",
    "expression": "Library.url",
    "base": [
      "Library"
    ]
  },
  {
    "name": "version",
    "expression": "Library.version",
    "base": [
      "Library"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "Library.useContext",
    "base": [
      "Library"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "Library.useContext",
    "base": [
      "Library"
    ]
  },
  {
    "name": "author",
    "expression": "Linkage.author",
    "base": [
      "Linkage"
    ]
  },
  {
    "name": "item",
    "expression": "Linkage.item.resource",
    "base": [
      "Linkage"
    ]
  },
  {
    "name": "source",
    "expression": "Linkage.item.resource",
    "base": [
      "Linkage"
    ]
  },
  {
    "name": "empty-reason",
    "expression": "List.emptyReason",
    "base": [
      "List"
    ]
  },
  {
    "name": "item",
    "expression": "List.entry.item",
    "base": [
      "List"
    ]
  },
  {
    "name": "notes",
    "expression": "List.note.text",
    "base": [
      "List"
    ]
  },
  {
    "name": "source",
    "expression": "List.source",
    "base": [
      "List"
    ]
  },
  {
    "name": "status",
    "expression": "List.status",
    "base": [
      "List"
    ]
  },
  {
    "name": "subject",
    "expression": "List.subject",
    "base": [
      "List"
    ]
  },
  {
    "name": "title",
    "expression": "List.title",
    "base": [
      "List"
    ]
  },
  {
    "name": "address",
    "expression": "Location.address",
    "base": [
      "Location"
    ]
  },
  {
    "name": "address-city",
    "expression": "Location.address.city",
    "base": [
      "Location"
    ]
  },
  {
    "name": "address-country",
    "expression": "Location.address.country",
    "base": [
      "Location"
    ]
  },
  {
    "name": "address-postalcode",
    "expression": "Location.address.postalCode",
    "base": [
      "Location"
    ]
  },
  {
    "name": "address-state",
    "expression": "Location.address.state",
    "base": [
      "Location"
    ]
  },
  {
    "name": "address-use",
    "expression": "Location.address.use",
    "base": [
      "Location"
    ]
  },
  {
    "name": "endpoint",
    "expression": "Location.endpoint",
    "base": [
      "Location"
    ]
  },
  {
    "name": "identifier",
    "expression": "Location.identifier",
    "base": [
      "Location"
    ]
  },
  {
    "name": "name",
    "expression": "Location.name | Location.alias",
    "base": [
      "Location"
    ]
  },
  {
    "name": "near",
    "expression": "Location.position",
    "base": [
      "Location"
    ]
  },
  {
    "name": "operational-status",
    "expression": "Location.operationalStatus",
    "base": [
      "Location"
    ]
  },
  {
    "name": "organization",
    "expression": "Location.managingOrganization",
    "base": [
      "Location"
    ]
  },
  {
    "name": "partof",
    "expression": "Location.partOf",
    "base": [
      "Location"
    ]
  },
  {
    "name": "status",
    "expression": "Location.status",
    "base": [
      "Location"
    ]
  },
  {
    "name": "type",
    "expression": "Location.type",
    "base": [
      "Location"
    ]
  },
  {
    "name": "dose-form",
    "expression": "ManufacturedItemDefinition.manufacturedDoseForm",
    "base": [
      "ManufacturedItemDefinition"
    ]
  },
  {
    "name": "identifier",
    "expression": "ManufacturedItemDefinition.identifier",
    "base": [
      "ManufacturedItemDefinition"
    ]
  },
  {
    "name": "ingredient",
    "expression": "ManufacturedItemDefinition.ingredient.reference",
    "base": [
      "ManufacturedItemDefinition"
    ]
  },
  {
    "name": "ingredient-code",
    "expression": "ManufacturedItemDefinition.ingredient.concept",
    "base": [
      "ManufacturedItemDefinition"
    ]
  },
  {
    "name": "composed-of",
    "expression": "Measure.relatedArtifact.where(type='composed-of').resource",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "context",
    "expression": "(Measure.useContext.value as CodeableConcept)",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(Measure.useContext.value as Quantity) | (Measure.useContext.value as Range)",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "context-type",
    "expression": "Measure.useContext.code",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "date",
    "expression": "Measure.date",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "depends-on",
    "expression": "Measure.relatedArtifact.where(type='depends-on').resource | Measure.library",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "derived-from",
    "expression": "Measure.relatedArtifact.where(type='derived-from').resource",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "description",
    "expression": "Measure.description",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "effective",
    "expression": "Measure.effectivePeriod",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "identifier",
    "expression": "Measure.identifier",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "jurisdiction",
    "expression": "Measure.jurisdiction",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "name",
    "expression": "Measure.name",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "predecessor",
    "expression": "Measure.relatedArtifact.where(type='predecessor').resource",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "publisher",
    "expression": "Measure.publisher",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "status",
    "expression": "Measure.status",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "successor",
    "expression": "Measure.relatedArtifact.where(type='successor').resource",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "title",
    "expression": "Measure.title",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "topic",
    "expression": "Measure.topic",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "url",
    "expression": "Measure.url",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "version",
    "expression": "Measure.version",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "Measure.useContext",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "Measure.useContext",
    "base": [
      "Measure"
    ]
  },
  {
    "name": "date",
    "expression": "MeasureReport.date",
    "base": [
      "MeasureReport"
    ]
  },
  {
    "name": "evaluated-resource",
    "expression": "MeasureReport.evaluatedResource",
    "base": [
      "MeasureReport"
    ]
  },
  {
    "name": "identifier",
    "expression": "MeasureReport.identifier",
    "base": [
      "MeasureReport"
    ]
  },
  {
    "name": "measure",
    "expression": "MeasureReport.measure",
    "base": [
      "MeasureReport"
    ]
  },
  {
    "name": "patient",
    "expression": "MeasureReport.subject.where(resolve() is Patient)",
    "base": [
      "MeasureReport"
    ]
  },
  {
    "name": "period",
    "expression": "MeasureReport.period",
    "base": [
      "MeasureReport"
    ]
  },
  {
    "name": "reporter",
    "expression": "MeasureReport.reporter",
    "base": [
      "MeasureReport"
    ]
  },
  {
    "name": "status",
    "expression": "MeasureReport.status",
    "base": [
      "MeasureReport"
    ]
  },
  {
    "name": "subject",
    "expression": "MeasureReport.subject",
    "base": [
      "MeasureReport"
    ]
  },
  {
    "name": "expiration-date",
    "expression": "Medication.batch.expirationDate",
    "base": [
      "Medication"
    ]
  },
  {
    "name": "form",
    "expression": null,
    "base": [
      "Medication"
    ]
  },
  {
    "name": "identifier",
    "expression": "Medication.identifier",
    "base": [
      "Medication"
    ]
  },
  {
    "name": "ingredient",
    "expression": "Medication.ingredient.item.reference",
    "base": [
      "Medication"
    ]
  },
  {
    "name": "ingredient-code",
    "expression": "Medication.ingredient.item.concept",
    "base": [
      "Medication"
    ]
  },
  {
    "name": "lot-number",
    "expression": "Medication.batch.lotNumber",
    "base": [
      "Medication"
    ]
  },
  {
    "name": "sponsor",
    "expression": "Medication.sponsor",
    "base": [
      "Medication"
    ]
  },
  {
    "name": "status",
    "expression": "Medication.status",
    "base": [
      "Medication"
    ]
  },
  {
    "name": "date",
    "expression": "MedicationAdministration.occurence",
    "base": [
      "MedicationAdministration"
    ]
  },
  {
    "name": "device",
    "expression": "MedicationAdministration.device",
    "base": [
      "MedicationAdministration"
    ]
  },
  {
    "name": "encounter",
    "expression": "MedicationAdministration.encounter | MedicationRequest.encounter",
    "base": [
      "MedicationAdministration",
      "MedicationRequest"
    ]
  },
  {
    "name": "medication",
    "expression": "MedicationAdministration.medication.reference | MedicationDispense.medication.reference | MedicationRequest.medication.reference | MedicationUsage.medication.reference",
    "base": [
      "MedicationAdministration",
      "MedicationDispense",
      "MedicationRequest",
      "MedicationUsage"
    ]
  },
  {
    "name": "performer",
    "expression": "MedicationAdministration.performer.actor",
    "base": [
      "MedicationAdministration"
    ]
  },
  {
    "name": "reason-given",
    "expression": "MedicationAdministration.reason.reference",
    "base": [
      "MedicationAdministration"
    ]
  },
  {
    "name": "reason-given-code",
    "expression": "MedicationAdministration.reason.concept",
    "base": [
      "MedicationAdministration"
    ]
  },
  {
    "name": "reason-not-given",
    "expression": "MedicationAdministration.statusReason",
    "base": [
      "MedicationAdministration"
    ]
  },
  {
    "name": "request",
    "expression": "MedicationAdministration.request",
    "base": [
      "MedicationAdministration"
    ]
  },
  {
    "name": "status",
    "expression": "MedicationAdministration.status | MedicationDispense.status | MedicationRequest.status | MedicationUsage.status",
    "base": [
      "MedicationAdministration",
      "MedicationDispense",
      "MedicationRequest",
      "MedicationUsage"
    ]
  },
  {
    "name": "subject",
    "expression": "MedicationAdministration.subject",
    "base": [
      "MedicationAdministration"
    ]
  },
  {
    "name": "destination",
    "expression": "MedicationDispense.destination",
    "base": [
      "MedicationDispense"
    ]
  },
  {
    "name": "encounter",
    "expression": "MedicationDispense.encounter",
    "base": [
      "MedicationDispense"
    ]
  },
  {
    "name": "performer",
    "expression": "MedicationDispense.performer.actor",
    "base": [
      "MedicationDispense"
    ]
  },
  {
    "name": "prescription",
    "expression": "MedicationDispense.authorizingPrescription",
    "base": [
      "MedicationDispense"
    ]
  },
  {
    "name": "receiver",
    "expression": "MedicationDispense.receiver",
    "base": [
      "MedicationDispense"
    ]
  },
  {
    "name": "responsibleparty",
    "expression": "MedicationDispense.substitution.responsibleParty",
    "base": [
      "MedicationDispense"
    ]
  },
  {
    "name": "subject",
    "expression": "MedicationDispense.subject",
    "base": [
      "MedicationDispense"
    ]
  },
  {
    "name": "type",
    "expression": "MedicationDispense.type",
    "base": [
      "MedicationDispense"
    ]
  },
  {
    "name": "whenhandedover",
    "expression": "MedicationDispense.whenHandedOver",
    "base": [
      "MedicationDispense"
    ]
  },
  {
    "name": "whenprepared",
    "expression": "MedicationDispense.whenPrepared",
    "base": [
      "MedicationDispense"
    ]
  },
  {
    "name": "classification",
    "expression": "MedicationKnowledge.medicineClassification.classification",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "classification-type",
    "expression": "MedicationKnowledge.medicineClassification.type",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "code",
    "expression": "MedicationKnowledge.code",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "doseform",
    "expression": "MedicationKnowledge.doseForm",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "identifier",
    "expression": "MedicationKnowledge.identifier",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "ingredient",
    "expression": "MedicationKnowledge.ingredient.item.reference",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "ingredient-code",
    "expression": "MedicationKnowledge.ingredient.item.concept",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "monitoring-program-name",
    "expression": "MedicationKnowledge.monitoringProgram.name",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "monitoring-program-type",
    "expression": "MedicationKnowledge.monitoringProgram.type",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "monograph",
    "expression": "MedicationKnowledge.monograph.source",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "monograph-type",
    "expression": "MedicationKnowledge.monograph.type",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "packaging-cost",
    "expression": null,
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "packaging-cost-concept",
    "expression": null,
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "product-type",
    "expression": "MedicationKnowledge.productType",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "source-cost",
    "expression": "MedicationKnowledge.cost.source",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "sponsor",
    "expression": "MedicationKnowledge.sponsor",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "status",
    "expression": "MedicationKnowledge.status",
    "base": [
      "MedicationKnowledge"
    ]
  },
  {
    "name": "authoredon",
    "expression": "MedicationRequest.authoredOn",
    "base": [
      "MedicationRequest"
    ]
  },
  {
    "name": "category",
    "expression": "MedicationRequest.category",
    "base": [
      "MedicationRequest"
    ]
  },
  {
    "name": "combo-date",
    "expression": "MedicationRequest.dosageInstruction.timing.event | (MedicationRequest.dosageInstruction.timing.repeat.bounds as Period)",
    "base": [
      "MedicationRequest"
    ]
  },
  {
    "name": "intended-dispenser",
    "expression": "MedicationRequest.dispenseRequest.dispenser",
    "base": [
      "MedicationRequest"
    ]
  },
  {
    "name": "intended-performer",
    "expression": "MedicationRequest.performer",
    "base": [
      "MedicationRequest"
    ]
  },
  {
    "name": "intended-performertype",
    "expression": "MedicationRequest.performerType",
    "base": [
      "MedicationRequest"
    ]
  },
  {
    "name": "intent",
    "expression": "MedicationRequest.intent",
    "base": [
      "MedicationRequest"
    ]
  },
  {
    "name": "priority",
    "expression": "MedicationRequest.priority",
    "base": [
      "MedicationRequest"
    ]
  },
  {
    "name": "requester",
    "expression": "MedicationRequest.requester",
    "base": [
      "MedicationRequest"
    ]
  },
  {
    "name": "subject",
    "expression": "MedicationRequest.subject",
    "base": [
      "MedicationRequest"
    ]
  },
  {
    "name": "adherence",
    "expression": "MedicationUsage.adherence",
    "base": [
      "MedicationUsage"
    ]
  },
  {
    "name": "category",
    "expression": "MedicationUsage.category",
    "base": [
      "MedicationUsage"
    ]
  },
  {
    "name": "effective",
    "expression": "MedicationUsage.effective",
    "base": [
      "MedicationUsage"
    ]
  },
  {
    "name": "encounter",
    "expression": "MedicationUsage.encounter",
    "base": [
      "MedicationUsage"
    ]
  },
  {
    "name": "part-of",
    "expression": "MedicationUsage.partOf",
    "base": [
      "MedicationUsage"
    ]
  },
  {
    "name": "source",
    "expression": "MedicationUsage.informationSource",
    "base": [
      "MedicationUsage"
    ]
  },
  {
    "name": "subject",
    "expression": "MedicationUsage.subject",
    "base": [
      "MedicationUsage"
    ]
  },
  {
    "name": "characteristic",
    "expression": "MedicinalProductDefinition.characteristic",
    "base": [
      "MedicinalProductDefinition"
    ]
  },
  {
    "name": "contact",
    "expression": "MedicinalProductDefinition.contact.contact",
    "base": [
      "MedicinalProductDefinition"
    ]
  },
  {
    "name": "domain",
    "expression": "MedicinalProductDefinition.domain",
    "base": [
      "MedicinalProductDefinition"
    ]
  },
  {
    "name": "identifier",
    "expression": "MedicinalProductDefinition.identifier",
    "base": [
      "MedicinalProductDefinition"
    ]
  },
  {
    "name": "ingredient",
    "expression": "MedicinalProductDefinition.ingredient.reference",
    "base": [
      "MedicinalProductDefinition"
    ]
  },
  {
    "name": "ingredient-code",
    "expression": "MedicinalProductDefinition.ingredient.concept",
    "base": [
      "MedicinalProductDefinition"
    ]
  },
  {
    "name": "master-file",
    "expression": "MedicinalProductDefinition.masterFile",
    "base": [
      "MedicinalProductDefinition"
    ]
  },
  {
    "name": "name",
    "expression": "MedicinalProductDefinition.name.productName",
    "base": [
      "MedicinalProductDefinition"
    ]
  },
  {
    "name": "name-language",
    "expression": "MedicinalProductDefinition.name.countryLanguage.language",
    "base": [
      "MedicinalProductDefinition"
    ]
  },
  {
    "name": "product-classification",
    "expression": "MedicinalProductDefinition.classification",
    "base": [
      "MedicinalProductDefinition"
    ]
  },
  {
    "name": "status",
    "expression": "MedicinalProductDefinition.status",
    "base": [
      "MedicinalProductDefinition"
    ]
  },
  {
    "name": "type",
    "expression": "MedicinalProductDefinition.type",
    "base": [
      "MedicinalProductDefinition"
    ]
  },
  {
    "name": "category",
    "expression": "MessageDefinition.category",
    "base": [
      "MessageDefinition"
    ]
  },
  {
    "name": "event",
    "expression": "MessageDefinition.event",
    "base": [
      "MessageDefinition"
    ]
  },
  {
    "name": "focus",
    "expression": "MessageDefinition.focus.code",
    "base": [
      "MessageDefinition"
    ]
  },
  {
    "name": "parent",
    "expression": "MessageDefinition.parent",
    "base": [
      "MessageDefinition"
    ]
  },
  {
    "name": "author",
    "expression": "MessageHeader.author",
    "base": [
      "MessageHeader"
    ]
  },
  {
    "name": "code",
    "expression": "MessageHeader.response.code",
    "base": [
      "MessageHeader"
    ]
  },
  {
    "name": "destination",
    "expression": "MessageHeader.destination.name",
    "base": [
      "MessageHeader"
    ]
  },
  {
    "name": "destination-uri",
    "expression": "MessageHeader.destination.endpoint",
    "base": [
      "MessageHeader"
    ]
  },
  {
    "name": "enterer",
    "expression": "MessageHeader.enterer",
    "base": [
      "MessageHeader"
    ]
  },
  {
    "name": "event",
    "expression": "MessageHeader.event",
    "base": [
      "MessageHeader"
    ]
  },
  {
    "name": "focus",
    "expression": "MessageHeader.focus",
    "base": [
      "MessageHeader"
    ]
  },
  {
    "name": "receiver",
    "expression": "MessageHeader.destination.receiver",
    "base": [
      "MessageHeader"
    ]
  },
  {
    "name": "response-id",
    "expression": "MessageHeader.response.identifier",
    "base": [
      "MessageHeader"
    ]
  },
  {
    "name": "responsible",
    "expression": "MessageHeader.responsible",
    "base": [
      "MessageHeader"
    ]
  },
  {
    "name": "sender",
    "expression": "MessageHeader.sender",
    "base": [
      "MessageHeader"
    ]
  },
  {
    "name": "source",
    "expression": "MessageHeader.source.name",
    "base": [
      "MessageHeader"
    ]
  },
  {
    "name": "source-uri",
    "expression": "MessageHeader.source.endpoint",
    "base": [
      "MessageHeader"
    ]
  },
  {
    "name": "target",
    "expression": "MessageHeader.destination.target",
    "base": [
      "MessageHeader"
    ]
  },
  {
    "name": "chromosome",
    "expression": "MolecularSequence.referenceSeq.chromosome",
    "base": [
      "MolecularSequence"
    ]
  },
  {
    "name": "identifier",
    "expression": "MolecularSequence.identifier",
    "base": [
      "MolecularSequence"
    ]
  },
  {
    "name": "patient",
    "expression": "MolecularSequence.patient",
    "base": [
      "MolecularSequence"
    ]
  },
  {
    "name": "referenceseqid",
    "expression": "MolecularSequence.referenceSeq.referenceSeqId",
    "base": [
      "MolecularSequence"
    ]
  },
  {
    "name": "type",
    "expression": "MolecularSequence.type",
    "base": [
      "MolecularSequence"
    ]
  },
  {
    "name": "variant-end",
    "expression": "MolecularSequence.variant.end",
    "base": [
      "MolecularSequence"
    ]
  },
  {
    "name": "variant-start",
    "expression": "MolecularSequence.variant.start",
    "base": [
      "MolecularSequence"
    ]
  },
  {
    "name": "window-end",
    "expression": "MolecularSequence.referenceSeq.windowEnd",
    "base": [
      "MolecularSequence"
    ]
  },
  {
    "name": "window-start",
    "expression": "MolecularSequence.referenceSeq.windowStart",
    "base": [
      "MolecularSequence"
    ]
  },
  {
    "name": "chromosome-variant-coordinate",
    "expression": "MolecularSequence.variant",
    "base": [
      "MolecularSequence"
    ]
  },
  {
    "name": "chromosome-window-coordinate",
    "expression": "MolecularSequence.referenceSeq",
    "base": [
      "MolecularSequence"
    ]
  },
  {
    "name": "referenceseqid-variant-coordinate",
    "expression": "MolecularSequence.variant",
    "base": [
      "MolecularSequence"
    ]
  },
  {
    "name": "referenceseqid-window-coordinate",
    "expression": "MolecularSequence.referenceSeq",
    "base": [
      "MolecularSequence"
    ]
  },
  {
    "name": "contact",
    "expression": "NamingSystem.contact.name",
    "base": [
      "NamingSystem"
    ]
  },
  {
    "name": "id-type",
    "expression": "NamingSystem.uniqueId.type",
    "base": [
      "NamingSystem"
    ]
  },
  {
    "name": "kind",
    "expression": "NamingSystem.kind",
    "base": [
      "NamingSystem"
    ]
  },
  {
    "name": "period",
    "expression": "NamingSystem.uniqueId.period",
    "base": [
      "NamingSystem"
    ]
  },
  {
    "name": "responsible",
    "expression": "NamingSystem.responsible",
    "base": [
      "NamingSystem"
    ]
  },
  {
    "name": "telecom",
    "expression": "NamingSystem.contact.telecom",
    "base": [
      "NamingSystem"
    ]
  },
  {
    "name": "type",
    "expression": "NamingSystem.type",
    "base": [
      "NamingSystem"
    ]
  },
  {
    "name": "value",
    "expression": "NamingSystem.uniqueId.value",
    "base": [
      "NamingSystem"
    ]
  },
  {
    "name": "code",
    "expression": "NutritionIntake.code",
    "base": [
      "NutritionIntake"
    ]
  },
  {
    "name": "date",
    "expression": "NutritionIntake.occurrence",
    "base": [
      "NutritionIntake"
    ]
  },
  {
    "name": "encounter",
    "expression": "NutritionIntake.encounter",
    "base": [
      "NutritionIntake"
    ]
  },
  {
    "name": "identifier",
    "expression": "NutritionIntake.identifier",
    "base": [
      "NutritionIntake"
    ]
  },
  {
    "name": "nutrition",
    "expression": "NutritionIntake.consumedItem.nutritionProduct",
    "base": [
      "NutritionIntake"
    ]
  },
  {
    "name": "part-of",
    "expression": "NutritionIntake.partOf",
    "base": [
      "NutritionIntake"
    ]
  },
  {
    "name": "patient",
    "expression": "NutritionIntake.subject.where(resolve() is Patient)",
    "base": [
      "NutritionIntake"
    ]
  },
  {
    "name": "source",
    "expression": "(NutritionIntake.reported as Reference)",
    "base": [
      "NutritionIntake"
    ]
  },
  {
    "name": "status",
    "expression": "NutritionIntake.status",
    "base": [
      "NutritionIntake"
    ]
  },
  {
    "name": "subject",
    "expression": "NutritionIntake.subject",
    "base": [
      "NutritionIntake"
    ]
  },
  {
    "name": "additive",
    "expression": "NutritionOrder.enteralFormula.additiveType",
    "base": [
      "NutritionOrder"
    ]
  },
  {
    "name": "datetime",
    "expression": "NutritionOrder.dateTime",
    "base": [
      "NutritionOrder"
    ]
  },
  {
    "name": "formula",
    "expression": "NutritionOrder.enteralFormula.baseFormulaType",
    "base": [
      "NutritionOrder"
    ]
  },
  {
    "name": "instantiates-canonical",
    "expression": "NutritionOrder.instantiatesCanonical",
    "base": [
      "NutritionOrder"
    ]
  },
  {
    "name": "instantiates-uri",
    "expression": "NutritionOrder.instantiatesUri",
    "base": [
      "NutritionOrder"
    ]
  },
  {
    "name": "oraldiet",
    "expression": "NutritionOrder.oralDiet.type",
    "base": [
      "NutritionOrder"
    ]
  },
  {
    "name": "provider",
    "expression": "NutritionOrder.orderer",
    "base": [
      "NutritionOrder"
    ]
  },
  {
    "name": "status",
    "expression": "NutritionOrder.status",
    "base": [
      "NutritionOrder"
    ]
  },
  {
    "name": "supplement",
    "expression": "NutritionOrder.supplement.type",
    "base": [
      "NutritionOrder"
    ]
  },
  {
    "name": "identifier",
    "expression": "NutritionProduct.instance.identifier",
    "base": [
      "NutritionProduct"
    ]
  },
  {
    "name": "status",
    "expression": "NutritionProduct.status",
    "base": [
      "NutritionProduct"
    ]
  },
  {
    "name": "based-on",
    "expression": "Observation.basedOn",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "category",
    "expression": "Observation.category",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "combo-code",
    "expression": "Observation.code | Observation.component.code",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "combo-data-absent-reason",
    "expression": "Observation.dataAbsentReason | Observation.component.dataAbsentReason",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "combo-value-concept",
    "expression": "(Observation.value as CodeableConcept) | (Observation.component.value as CodeableConcept)",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "combo-value-quantity",
    "expression": "(Observation.value as Quantity) | (Observation.value as SampledData) | (Observation.component.value as Quantity) | (Observation.component.value as SampledData)",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "component-code",
    "expression": "Observation.component.code",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "component-data-absent-reason",
    "expression": "Observation.component.dataAbsentReason",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "component-value-concept",
    "expression": "(Observation.component.value as CodeableConcept)",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "component-value-quantity",
    "expression": "(Observation.component.value as Quantity) | (Observation.component.value as SampledData)",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "data-absent-reason",
    "expression": "Observation.dataAbsentReason",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "derived-from",
    "expression": "Observation.derivedFrom",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "device",
    "expression": "Observation.device",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "focus",
    "expression": "Observation.focus",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "has-member",
    "expression": "Observation.hasMember",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "method",
    "expression": "Observation.method",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "part-of",
    "expression": "Observation.partOf",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "performer",
    "expression": "Observation.performer",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "specimen",
    "expression": "Observation.specimen",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "status",
    "expression": "Observation.status",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "subject",
    "expression": "Observation.subject",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "value-concept",
    "expression": "(Observation.value as CodeableConcept)",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "value-date",
    "expression": "(Observation.value as dateTime) | (Observation.value as Period)",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "value-quantity",
    "expression": "(Observation.value as Quantity) | (Observation.value as SampledData)",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "value-string",
    "expression": "(Observation.value as string) | (Observation.value as CodeableConcept).text",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "code-value-concept",
    "expression": "Observation",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "code-value-date",
    "expression": "Observation",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "code-value-quantity",
    "expression": "Observation",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "code-value-string",
    "expression": "Observation",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "combo-code-value-concept",
    "expression": "Observation | Observation.component",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "combo-code-value-quantity",
    "expression": "Observation | Observation.component",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "component-code-value-concept",
    "expression": "Observation.component",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "component-code-value-quantity",
    "expression": "Observation.component",
    "base": [
      "Observation"
    ]
  },
  {
    "name": "category",
    "expression": "ObservationDefinition.category",
    "base": [
      "ObservationDefinition"
    ]
  },
  {
    "name": "code",
    "expression": "ObservationDefinition.code",
    "base": [
      "ObservationDefinition"
    ]
  },
  {
    "name": "experimental",
    "expression": "ObservationDefinition.experimental",
    "base": [
      "ObservationDefinition"
    ]
  },
  {
    "name": "identifier",
    "expression": "ObservationDefinition.identifier",
    "base": [
      "ObservationDefinition"
    ]
  },
  {
    "name": "method",
    "expression": "ObservationDefinition.method",
    "base": [
      "ObservationDefinition"
    ]
  },
  {
    "name": "status",
    "expression": "ObservationDefinition.status",
    "base": [
      "ObservationDefinition"
    ]
  },
  {
    "name": "title",
    "expression": "ObservationDefinition.title",
    "base": [
      "ObservationDefinition"
    ]
  },
  {
    "name": "url",
    "expression": "ObservationDefinition.url",
    "base": [
      "ObservationDefinition"
    ]
  },
  {
    "name": "base",
    "expression": "OperationDefinition.base",
    "base": [
      "OperationDefinition"
    ]
  },
  {
    "name": "code",
    "expression": "OperationDefinition.code",
    "base": [
      "OperationDefinition"
    ]
  },
  {
    "name": "input-profile",
    "expression": "OperationDefinition.inputProfile",
    "base": [
      "OperationDefinition"
    ]
  },
  {
    "name": "instance",
    "expression": "OperationDefinition.instance",
    "base": [
      "OperationDefinition"
    ]
  },
  {
    "name": "kind",
    "expression": "OperationDefinition.kind",
    "base": [
      "OperationDefinition"
    ]
  },
  {
    "name": "output-profile",
    "expression": "OperationDefinition.outputProfile",
    "base": [
      "OperationDefinition"
    ]
  },
  {
    "name": "system",
    "expression": "OperationDefinition.system",
    "base": [
      "OperationDefinition"
    ]
  },
  {
    "name": "type",
    "expression": "OperationDefinition.type",
    "base": [
      "OperationDefinition"
    ]
  },
  {
    "name": "active",
    "expression": "Organization.active",
    "base": [
      "Organization"
    ]
  },
  {
    "name": "address",
    "expression": "Organization.address",
    "base": [
      "Organization"
    ]
  },
  {
    "name": "address-city",
    "expression": "Organization.address.city",
    "base": [
      "Organization"
    ]
  },
  {
    "name": "address-country",
    "expression": "Organization.address.country",
    "base": [
      "Organization"
    ]
  },
  {
    "name": "address-postalcode",
    "expression": "Organization.address.postalCode",
    "base": [
      "Organization"
    ]
  },
  {
    "name": "address-state",
    "expression": "Organization.address.state",
    "base": [
      "Organization"
    ]
  },
  {
    "name": "address-use",
    "expression": "Organization.address.use",
    "base": [
      "Organization"
    ]
  },
  {
    "name": "endpoint",
    "expression": "Organization.endpoint",
    "base": [
      "Organization"
    ]
  },
  {
    "name": "identifier",
    "expression": "Organization.identifier",
    "base": [
      "Organization"
    ]
  },
  {
    "name": "name",
    "expression": "Organization.name | Organization.alias",
    "base": [
      "Organization"
    ]
  },
  {
    "name": "partof",
    "expression": "Organization.partOf",
    "base": [
      "Organization"
    ]
  },
  {
    "name": "phonetic",
    "expression": "Organization.name",
    "base": [
      "Organization"
    ]
  },
  {
    "name": "type",
    "expression": "Organization.type",
    "base": [
      "Organization"
    ]
  },
  {
    "name": "active",
    "expression": "OrganizationAffiliation.active",
    "base": [
      "OrganizationAffiliation"
    ]
  },
  {
    "name": "date",
    "expression": "OrganizationAffiliation.period",
    "base": [
      "OrganizationAffiliation"
    ]
  },
  {
    "name": "email",
    "expression": "OrganizationAffiliation.telecom.where(system='email')",
    "base": [
      "OrganizationAffiliation"
    ]
  },
  {
    "name": "endpoint",
    "expression": "OrganizationAffiliation.endpoint",
    "base": [
      "OrganizationAffiliation"
    ]
  },
  {
    "name": "identifier",
    "expression": "OrganizationAffiliation.identifier",
    "base": [
      "OrganizationAffiliation"
    ]
  },
  {
    "name": "location",
    "expression": "OrganizationAffiliation.location",
    "base": [
      "OrganizationAffiliation"
    ]
  },
  {
    "name": "network",
    "expression": "OrganizationAffiliation.network",
    "base": [
      "OrganizationAffiliation"
    ]
  },
  {
    "name": "participating-organization",
    "expression": "OrganizationAffiliation.participatingOrganization",
    "base": [
      "OrganizationAffiliation"
    ]
  },
  {
    "name": "phone",
    "expression": "OrganizationAffiliation.telecom.where(system='phone')",
    "base": [
      "OrganizationAffiliation"
    ]
  },
  {
    "name": "primary-organization",
    "expression": "OrganizationAffiliation.organization",
    "base": [
      "OrganizationAffiliation"
    ]
  },
  {
    "name": "role",
    "expression": "OrganizationAffiliation.code",
    "base": [
      "OrganizationAffiliation"
    ]
  },
  {
    "name": "service",
    "expression": "OrganizationAffiliation.healthcareService",
    "base": [
      "OrganizationAffiliation"
    ]
  },
  {
    "name": "specialty",
    "expression": "OrganizationAffiliation.specialty",
    "base": [
      "OrganizationAffiliation"
    ]
  },
  {
    "name": "telecom",
    "expression": "OrganizationAffiliation.telecom",
    "base": [
      "OrganizationAffiliation"
    ]
  },
  {
    "name": "biological",
    "expression": "PackagedProductDefinition.package.containedItem.item.reference",
    "base": [
      "PackagedProductDefinition"
    ]
  },
  {
    "name": "contained-item",
    "expression": "PackagedProductDefinition.package.containedItem.item.reference",
    "base": [
      "PackagedProductDefinition"
    ]
  },
  {
    "name": "device",
    "expression": "PackagedProductDefinition.package.containedItem.item.reference",
    "base": [
      "PackagedProductDefinition"
    ]
  },
  {
    "name": "identifier",
    "expression": "PackagedProductDefinition.identifier",
    "base": [
      "PackagedProductDefinition"
    ]
  },
  {
    "name": "manufactured-item",
    "expression": "PackagedProductDefinition.package.containedItem.item.reference",
    "base": [
      "PackagedProductDefinition"
    ]
  },
  {
    "name": "medication",
    "expression": "PackagedProductDefinition.package.containedItem.item.reference",
    "base": [
      "PackagedProductDefinition"
    ]
  },
  {
    "name": "name",
    "expression": "PackagedProductDefinition.name",
    "base": [
      "PackagedProductDefinition"
    ]
  },
  {
    "name": "nutrition",
    "expression": "PackagedProductDefinition.package.containedItem.item.reference",
    "base": [
      "PackagedProductDefinition"
    ]
  },
  {
    "name": "package",
    "expression": "PackagedProductDefinition.package.containedItem.item.reference",
    "base": [
      "PackagedProductDefinition"
    ]
  },
  {
    "name": "status",
    "expression": "PackagedProductDefinition.status",
    "base": [
      "PackagedProductDefinition"
    ]
  },
  {
    "name": "subject",
    "expression": "PackagedProductDefinition.subject",
    "base": [
      "PackagedProductDefinition"
    ]
  },
  {
    "name": "active",
    "expression": "Patient.active",
    "base": [
      "Patient"
    ]
  },
  {
    "name": "address",
    "expression": "Patient.address | Person.address | Practitioner.address | RelatedPerson.address",
    "base": [
      "Patient",
      "Person",
      "Practitioner",
      "RelatedPerson"
    ]
  },
  {
    "name": "address-city",
    "expression": "Patient.address.city | Person.address.city | Practitioner.address.city | RelatedPerson.address.city",
    "base": [
      "Patient",
      "Person",
      "Practitioner",
      "RelatedPerson"
    ]
  },
  {
    "name": "address-country",
    "expression": "Patient.address.country | Person.address.country | Practitioner.address.country | RelatedPerson.address.country",
    "base": [
      "Patient",
      "Person",
      "Practitioner",
      "RelatedPerson"
    ]
  },
  {
    "name": "address-postalcode",
    "expression": "Patient.address.postalCode | Person.address.postalCode | Practitioner.address.postalCode | RelatedPerson.address.postalCode",
    "base": [
      "Patient",
      "Person",
      "Practitioner",
      "RelatedPerson"
    ]
  },
  {
    "name": "address-state",
    "expression": "Patient.address.state | Person.address.state | Practitioner.address.state | RelatedPerson.address.state",
    "base": [
      "Patient",
      "Person",
      "Practitioner",
      "RelatedPerson"
    ]
  },
  {
    "name": "address-use",
    "expression": "Patient.address.use | Person.address.use | Practitioner.address.use | RelatedPerson.address.use",
    "base": [
      "Patient",
      "Person",
      "Practitioner",
      "RelatedPerson"
    ]
  },
  {
    "name": "birthdate",
    "expression": "Patient.birthDate | Person.birthDate | RelatedPerson.birthDate",
    "base": [
      "Patient",
      "Person",
      "RelatedPerson"
    ]
  },
  {
    "name": "death-date",
    "expression": "(Patient.deceased as dateTime)",
    "base": [
      "Patient"
    ]
  },
  {
    "name": "deceased",
    "expression": "Patient.deceased.exists() and Patient.deceased != false",
    "base": [
      "Patient"
    ]
  },
  {
    "name": "email",
    "expression": "Patient.telecom.where(system='email') | Person.telecom.where(system='email') | Practitioner.telecom.where(system='email') | PractitionerRole.telecom.where(system='email') | RelatedPerson.telecom.where(system='email')",
    "base": [
      "Patient",
      "Person",
      "Practitioner",
      "PractitionerRole",
      "RelatedPerson"
    ]
  },
  {
    "name": "family",
    "expression": "Patient.name.family | Practitioner.name.family",
    "base": [
      "Patient",
      "Practitioner"
    ]
  },
  {
    "name": "gender",
    "expression": "Patient.gender | Person.gender | Practitioner.gender | RelatedPerson.gender",
    "base": [
      "Patient",
      "Person",
      "Practitioner",
      "RelatedPerson"
    ]
  },
  {
    "name": "general-practitioner",
    "expression": "Patient.generalPractitioner",
    "base": [
      "Patient"
    ]
  },
  {
    "name": "given",
    "expression": "Patient.name.given | Practitioner.name.given",
    "base": [
      "Patient",
      "Practitioner"
    ]
  },
  {
    "name": "identifier",
    "expression": "Patient.identifier",
    "base": [
      "Patient"
    ]
  },
  {
    "name": "language",
    "expression": "Patient.communication.language",
    "base": [
      "Patient"
    ]
  },
  {
    "name": "link",
    "expression": "Patient.link.other",
    "base": [
      "Patient"
    ]
  },
  {
    "name": "name",
    "expression": "Patient.name",
    "base": [
      "Patient"
    ]
  },
  {
    "name": "organization",
    "expression": "Patient.managingOrganization",
    "base": [
      "Patient"
    ]
  },
  {
    "name": "phone",
    "expression": "Patient.telecom.where(system='phone') | Person.telecom.where(system='phone') | Practitioner.telecom.where(system='phone') | PractitionerRole.telecom.where(system='phone') | RelatedPerson.telecom.where(system='phone')",
    "base": [
      "Patient",
      "Person",
      "Practitioner",
      "PractitionerRole",
      "RelatedPerson"
    ]
  },
  {
    "name": "phonetic",
    "expression": "Patient.name | Person.name | Practitioner.name | RelatedPerson.name",
    "base": [
      "Patient",
      "Person",
      "Practitioner",
      "RelatedPerson"
    ]
  },
  {
    "name": "telecom",
    "expression": "Patient.telecom | Person.telecom | Practitioner.telecom | PractitionerRole.telecom | RelatedPerson.telecom",
    "base": [
      "Patient",
      "Person",
      "Practitioner",
      "PractitionerRole",
      "RelatedPerson"
    ]
  },
  {
    "name": "created",
    "expression": "PaymentNotice.created",
    "base": [
      "PaymentNotice"
    ]
  },
  {
    "name": "identifier",
    "expression": "PaymentNotice.identifier",
    "base": [
      "PaymentNotice"
    ]
  },
  {
    "name": "payment-status",
    "expression": "PaymentNotice.paymentStatus",
    "base": [
      "PaymentNotice"
    ]
  },
  {
    "name": "provider",
    "expression": "PaymentNotice.provider",
    "base": [
      "PaymentNotice"
    ]
  },
  {
    "name": "request",
    "expression": "PaymentNotice.request",
    "base": [
      "PaymentNotice"
    ]
  },
  {
    "name": "response",
    "expression": "PaymentNotice.response",
    "base": [
      "PaymentNotice"
    ]
  },
  {
    "name": "status",
    "expression": "PaymentNotice.status",
    "base": [
      "PaymentNotice"
    ]
  },
  {
    "name": "created",
    "expression": "PaymentReconciliation.created",
    "base": [
      "PaymentReconciliation"
    ]
  },
  {
    "name": "disposition",
    "expression": "PaymentReconciliation.disposition",
    "base": [
      "PaymentReconciliation"
    ]
  },
  {
    "name": "identifier",
    "expression": "PaymentReconciliation.identifier",
    "base": [
      "PaymentReconciliation"
    ]
  },
  {
    "name": "outcome",
    "expression": "PaymentReconciliation.outcome",
    "base": [
      "PaymentReconciliation"
    ]
  },
  {
    "name": "payment-issuer",
    "expression": "PaymentReconciliation.paymentIssuer",
    "base": [
      "PaymentReconciliation"
    ]
  },
  {
    "name": "request",
    "expression": "PaymentReconciliation.request",
    "base": [
      "PaymentReconciliation"
    ]
  },
  {
    "name": "requestor",
    "expression": "PaymentReconciliation.requestor",
    "base": [
      "PaymentReconciliation"
    ]
  },
  {
    "name": "status",
    "expression": "PaymentReconciliation.status",
    "base": [
      "PaymentReconciliation"
    ]
  },
  {
    "name": "status",
    "expression": "Permission.status",
    "base": [
      "Permission"
    ]
  },
  {
    "name": "identifier",
    "expression": "Person.identifier",
    "base": [
      "Person"
    ]
  },
  {
    "name": "link",
    "expression": "Person.link.target",
    "base": [
      "Person"
    ]
  },
  {
    "name": "name",
    "expression": "Person.name",
    "base": [
      "Person"
    ]
  },
  {
    "name": "organization",
    "expression": "Person.managingOrganization",
    "base": [
      "Person"
    ]
  },
  {
    "name": "patient",
    "expression": "Person.link.target.where(resolve() is Patient)",
    "base": [
      "Person"
    ]
  },
  {
    "name": "practitioner",
    "expression": "Person.link.target.where(resolve() is Practitioner)",
    "base": [
      "Person"
    ]
  },
  {
    "name": "relatedperson",
    "expression": "Person.link.target.where(resolve() is RelatedPerson)",
    "base": [
      "Person"
    ]
  },
  {
    "name": "composed-of",
    "expression": "PlanDefinition.relatedArtifact.where(type='composed-of').resource",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "context",
    "expression": "(PlanDefinition.useContext.value as CodeableConcept)",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(PlanDefinition.useContext.value as Quantity) | (PlanDefinition.useContext.value as Range)",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "context-type",
    "expression": "PlanDefinition.useContext.code",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "date",
    "expression": "PlanDefinition.date",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "definition",
    "expression": "PlanDefinition.action.definition",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "depends-on",
    "expression": "PlanDefinition.relatedArtifact.where(type='depends-on').resource | PlanDefinition.library",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "derived-from",
    "expression": "PlanDefinition.relatedArtifact.where(type='derived-from').resource",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "description",
    "expression": "PlanDefinition.description",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "effective",
    "expression": "PlanDefinition.effectivePeriod",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "identifier",
    "expression": "PlanDefinition.identifier",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "jurisdiction",
    "expression": "PlanDefinition.jurisdiction",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "name",
    "expression": "PlanDefinition.name",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "predecessor",
    "expression": "PlanDefinition.relatedArtifact.where(type='predecessor').resource",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "publisher",
    "expression": "PlanDefinition.publisher",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "status",
    "expression": "PlanDefinition.status",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "successor",
    "expression": "PlanDefinition.relatedArtifact.where(type='successor').resource",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "title",
    "expression": "PlanDefinition.title",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "topic",
    "expression": "PlanDefinition.topic",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "type",
    "expression": "PlanDefinition.type",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "url",
    "expression": "PlanDefinition.url",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "version",
    "expression": "PlanDefinition.version",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "PlanDefinition.useContext",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "PlanDefinition.useContext",
    "base": [
      "PlanDefinition"
    ]
  },
  {
    "name": "active",
    "expression": "Practitioner.active",
    "base": [
      "Practitioner"
    ]
  },
  {
    "name": "communication",
    "expression": "Practitioner.communication",
    "base": [
      "Practitioner"
    ]
  },
  {
    "name": "identifier",
    "expression": "Practitioner.identifier",
    "base": [
      "Practitioner"
    ]
  },
  {
    "name": "name",
    "expression": "Practitioner.name",
    "base": [
      "Practitioner"
    ]
  },
  {
    "name": "active",
    "expression": "PractitionerRole.active",
    "base": [
      "PractitionerRole"
    ]
  },
  {
    "name": "date",
    "expression": "PractitionerRole.period",
    "base": [
      "PractitionerRole"
    ]
  },
  {
    "name": "endpoint",
    "expression": "PractitionerRole.endpoint",
    "base": [
      "PractitionerRole"
    ]
  },
  {
    "name": "identifier",
    "expression": "PractitionerRole.identifier",
    "base": [
      "PractitionerRole"
    ]
  },
  {
    "name": "location",
    "expression": "PractitionerRole.location",
    "base": [
      "PractitionerRole"
    ]
  },
  {
    "name": "organization",
    "expression": "PractitionerRole.organization",
    "base": [
      "PractitionerRole"
    ]
  },
  {
    "name": "practitioner",
    "expression": "PractitionerRole.practitioner",
    "base": [
      "PractitionerRole"
    ]
  },
  {
    "name": "role",
    "expression": "PractitionerRole.code",
    "base": [
      "PractitionerRole"
    ]
  },
  {
    "name": "service",
    "expression": "PractitionerRole.healthcareService",
    "base": [
      "PractitionerRole"
    ]
  },
  {
    "name": "specialty",
    "expression": "PractitionerRole.specialty",
    "base": [
      "PractitionerRole"
    ]
  },
  {
    "name": "based-on",
    "expression": "Procedure.basedOn",
    "base": [
      "Procedure"
    ]
  },
  {
    "name": "category",
    "expression": "Procedure.category",
    "base": [
      "Procedure"
    ]
  },
  {
    "name": "instantiates-canonical",
    "expression": "Procedure.instantiatesCanonical",
    "base": [
      "Procedure"
    ]
  },
  {
    "name": "instantiates-uri",
    "expression": "Procedure.instantiatesUri",
    "base": [
      "Procedure"
    ]
  },
  {
    "name": "location",
    "expression": "Procedure.location",
    "base": [
      "Procedure"
    ]
  },
  {
    "name": "part-of",
    "expression": "Procedure.partOf",
    "base": [
      "Procedure"
    ]
  },
  {
    "name": "performer",
    "expression": "Procedure.performer.actor",
    "base": [
      "Procedure"
    ]
  },
  {
    "name": "reason-code",
    "expression": "Procedure.reason.concept",
    "base": [
      "Procedure"
    ]
  },
  {
    "name": "reason-reference",
    "expression": "Procedure.reason.reference",
    "base": [
      "Procedure"
    ]
  },
  {
    "name": "report",
    "expression": "Procedure.report",
    "base": [
      "Procedure"
    ]
  },
  {
    "name": "status",
    "expression": "Procedure.status",
    "base": [
      "Procedure"
    ]
  },
  {
    "name": "subject",
    "expression": "Procedure.subject",
    "base": [
      "Procedure"
    ]
  },
  {
    "name": "activity",
    "expression": "Provenance.activity",
    "base": [
      "Provenance"
    ]
  },
  {
    "name": "agent",
    "expression": "Provenance.agent.who",
    "base": [
      "Provenance"
    ]
  },
  {
    "name": "agent-role",
    "expression": "Provenance.agent.role",
    "base": [
      "Provenance"
    ]
  },
  {
    "name": "agent-type",
    "expression": "Provenance.agent.type",
    "base": [
      "Provenance"
    ]
  },
  {
    "name": "based-on",
    "expression": "Provenance.basedOn",
    "base": [
      "Provenance"
    ]
  },
  {
    "name": "encounter",
    "expression": "Provenance.encounter",
    "base": [
      "Provenance"
    ]
  },
  {
    "name": "entity",
    "expression": "Provenance.entity.what",
    "base": [
      "Provenance"
    ]
  },
  {
    "name": "location",
    "expression": "Provenance.location",
    "base": [
      "Provenance"
    ]
  },
  {
    "name": "patient",
    "expression": "Provenance.target.where(resolve() is Patient)",
    "base": [
      "Provenance"
    ]
  },
  {
    "name": "recorded",
    "expression": "Provenance.recorded",
    "base": [
      "Provenance"
    ]
  },
  {
    "name": "signature-type",
    "expression": "Provenance.signature.type",
    "base": [
      "Provenance"
    ]
  },
  {
    "name": "target",
    "expression": "Provenance.target",
    "base": [
      "Provenance"
    ]
  },
  {
    "name": "when",
    "expression": "(Provenance.occurred as dateTime)",
    "base": [
      "Provenance"
    ]
  },
  {
    "name": "combo-code",
    "expression": "Questionnaire.code | Questionnaire.item.code",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "context",
    "expression": "(Questionnaire.useContext.value as CodeableConcept)",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(Questionnaire.useContext.value as Quantity) | (Questionnaire.useContext.value as Range)",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "context-type",
    "expression": "Questionnaire.useContext.code",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "date",
    "expression": "Questionnaire.date",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "definition",
    "expression": "Questionnaire.item.definition",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "description",
    "expression": "Questionnaire.description",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "effective",
    "expression": "Questionnaire.effectivePeriod",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "identifier",
    "expression": "Questionnaire.identifier",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "item-code",
    "expression": "Questionnaire.item.code",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "jurisdiction",
    "expression": "Questionnaire.jurisdiction",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "name",
    "expression": "Questionnaire.name",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "publisher",
    "expression": "Questionnaire.publisher",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "questionnaire-code",
    "expression": "Questionnaire.code",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "status",
    "expression": "Questionnaire.status",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "subject-type",
    "expression": "Questionnaire.subjectType",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "title",
    "expression": "Questionnaire.title",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "url",
    "expression": "Questionnaire.url",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "version",
    "expression": "Questionnaire.version",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "Questionnaire.useContext",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "Questionnaire.useContext",
    "base": [
      "Questionnaire"
    ]
  },
  {
    "name": "author",
    "expression": "QuestionnaireResponse.author",
    "base": [
      "QuestionnaireResponse"
    ]
  },
  {
    "name": "authored",
    "expression": "QuestionnaireResponse.authored",
    "base": [
      "QuestionnaireResponse"
    ]
  },
  {
    "name": "based-on",
    "expression": "QuestionnaireResponse.basedOn",
    "base": [
      "QuestionnaireResponse"
    ]
  },
  {
    "name": "encounter",
    "expression": "QuestionnaireResponse.encounter",
    "base": [
      "QuestionnaireResponse"
    ]
  },
  {
    "name": "identifier",
    "expression": "QuestionnaireResponse.identifier",
    "base": [
      "QuestionnaireResponse"
    ]
  },
  {
    "name": "item-subject",
    "expression": "QuestionnaireResponse.item.where(extension('http://hl7.org/fhir/StructureDefinition/questionnaireresponse-isSubject').exists()).answer.value.ofType(Reference)",
    "base": [
      "QuestionnaireResponse"
    ]
  },
  {
    "name": "part-of",
    "expression": "QuestionnaireResponse.partOf",
    "base": [
      "QuestionnaireResponse"
    ]
  },
  {
    "name": "patient",
    "expression": "QuestionnaireResponse.subject.where(resolve() is Patient)",
    "base": [
      "QuestionnaireResponse"
    ]
  },
  {
    "name": "questionnaire",
    "expression": "QuestionnaireResponse.questionnaire",
    "base": [
      "QuestionnaireResponse"
    ]
  },
  {
    "name": "source",
    "expression": "QuestionnaireResponse.source",
    "base": [
      "QuestionnaireResponse"
    ]
  },
  {
    "name": "status",
    "expression": "QuestionnaireResponse.status",
    "base": [
      "QuestionnaireResponse"
    ]
  },
  {
    "name": "subject",
    "expression": "QuestionnaireResponse.subject",
    "base": [
      "QuestionnaireResponse"
    ]
  },
  {
    "name": "case",
    "expression": "RegulatedAuthorization.case.identifier",
    "base": [
      "RegulatedAuthorization"
    ]
  },
  {
    "name": "case-type",
    "expression": "RegulatedAuthorization.case.type",
    "base": [
      "RegulatedAuthorization"
    ]
  },
  {
    "name": "holder",
    "expression": "RegulatedAuthorization.holder",
    "base": [
      "RegulatedAuthorization"
    ]
  },
  {
    "name": "identifier",
    "expression": "RegulatedAuthorization.identifier",
    "base": [
      "RegulatedAuthorization"
    ]
  },
  {
    "name": "region",
    "expression": "RegulatedAuthorization.region",
    "base": [
      "RegulatedAuthorization"
    ]
  },
  {
    "name": "status",
    "expression": "RegulatedAuthorization.status",
    "base": [
      "RegulatedAuthorization"
    ]
  },
  {
    "name": "subject",
    "expression": "RegulatedAuthorization.subject",
    "base": [
      "RegulatedAuthorization"
    ]
  },
  {
    "name": "active",
    "expression": "RelatedPerson.active",
    "base": [
      "RelatedPerson"
    ]
  },
  {
    "name": "identifier",
    "expression": "RelatedPerson.identifier",
    "base": [
      "RelatedPerson"
    ]
  },
  {
    "name": "name",
    "expression": "RelatedPerson.name",
    "base": [
      "RelatedPerson"
    ]
  },
  {
    "name": "patient",
    "expression": "RelatedPerson.patient",
    "base": [
      "RelatedPerson"
    ]
  },
  {
    "name": "relationship",
    "expression": "RelatedPerson.relationship",
    "base": [
      "RelatedPerson"
    ]
  },
  {
    "name": "author",
    "expression": "RequestGroup.author",
    "base": [
      "RequestGroup"
    ]
  },
  {
    "name": "authored",
    "expression": "RequestGroup.authoredOn",
    "base": [
      "RequestGroup"
    ]
  },
  {
    "name": "code",
    "expression": "RequestGroup.code",
    "base": [
      "RequestGroup"
    ]
  },
  {
    "name": "encounter",
    "expression": "RequestGroup.encounter",
    "base": [
      "RequestGroup"
    ]
  },
  {
    "name": "group-identifier",
    "expression": "RequestGroup.groupIdentifier",
    "base": [
      "RequestGroup"
    ]
  },
  {
    "name": "identifier",
    "expression": "RequestGroup.identifier",
    "base": [
      "RequestGroup"
    ]
  },
  {
    "name": "instantiates-canonical",
    "expression": "RequestGroup.instantiatesCanonical",
    "base": [
      "RequestGroup"
    ]
  },
  {
    "name": "instantiates-uri",
    "expression": "RequestGroup.instantiatesUri",
    "base": [
      "RequestGroup"
    ]
  },
  {
    "name": "intent",
    "expression": "RequestGroup.intent",
    "base": [
      "RequestGroup"
    ]
  },
  {
    "name": "participant",
    "expression": "RequestGroup.action.participant.actor",
    "base": [
      "RequestGroup"
    ]
  },
  {
    "name": "patient",
    "expression": "RequestGroup.subject.where(resolve() is Patient)",
    "base": [
      "RequestGroup"
    ]
  },
  {
    "name": "priority",
    "expression": "RequestGroup.priority",
    "base": [
      "RequestGroup"
    ]
  },
  {
    "name": "status",
    "expression": "RequestGroup.status",
    "base": [
      "RequestGroup"
    ]
  },
  {
    "name": "subject",
    "expression": "RequestGroup.subject",
    "base": [
      "RequestGroup"
    ]
  },
  {
    "name": "category",
    "expression": "ResearchStudy.category",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "condition",
    "expression": "ResearchStudy.condition",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "date",
    "expression": "ResearchStudy.period",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "focus",
    "expression": "ResearchStudy.focus",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "identifier",
    "expression": "ResearchStudy.identifier",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "keyword",
    "expression": "ResearchStudy.keyword",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "location",
    "expression": "ResearchStudy.location",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "partof",
    "expression": "ResearchStudy.partOf",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "principalinvestigator",
    "expression": "ResearchStudy.principalInvestigator",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "protocol",
    "expression": "ResearchStudy.protocol",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "recruitment_actual",
    "expression": "ResearchStudy.recruitment.actualNumber",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "recruitment_target",
    "expression": "ResearchStudy.recruitment.targetNumber",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "site",
    "expression": "ResearchStudy.site",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "sponsor",
    "expression": "ResearchStudy.sponsor",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "status",
    "expression": "ResearchStudy.status",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "title",
    "expression": "ResearchStudy.title",
    "base": [
      "ResearchStudy"
    ]
  },
  {
    "name": "date",
    "expression": "ResearchSubject.period",
    "base": [
      "ResearchSubject"
    ]
  },
  {
    "name": "identifier",
    "expression": "ResearchSubject.identifier",
    "base": [
      "ResearchSubject"
    ]
  },
  {
    "name": "patient",
    "expression": "ResearchSubject.subject",
    "base": [
      "ResearchSubject"
    ]
  },
  {
    "name": "status",
    "expression": "ResearchSubject.status",
    "base": [
      "ResearchSubject"
    ]
  },
  {
    "name": "study",
    "expression": "ResearchSubject.study",
    "base": [
      "ResearchSubject"
    ]
  },
  {
    "name": "subject",
    "expression": "ResearchSubject.subject",
    "base": [
      "ResearchSubject"
    ]
  },
  {
    "name": "subject_state",
    "expression": "ResearchSubject.progress.subjectState",
    "base": [
      "ResearchSubject"
    ]
  },
  {
    "name": "condition",
    "expression": "RiskAssessment.condition",
    "base": [
      "RiskAssessment"
    ]
  },
  {
    "name": "method",
    "expression": "RiskAssessment.method",
    "base": [
      "RiskAssessment"
    ]
  },
  {
    "name": "performer",
    "expression": "RiskAssessment.performer",
    "base": [
      "RiskAssessment"
    ]
  },
  {
    "name": "probability",
    "expression": "RiskAssessment.prediction.probability",
    "base": [
      "RiskAssessment"
    ]
  },
  {
    "name": "risk",
    "expression": "RiskAssessment.prediction.qualitativeRisk",
    "base": [
      "RiskAssessment"
    ]
  },
  {
    "name": "subject",
    "expression": "RiskAssessment.subject",
    "base": [
      "RiskAssessment"
    ]
  },
  {
    "name": "active",
    "expression": "Schedule.active",
    "base": [
      "Schedule"
    ]
  },
  {
    "name": "actor",
    "expression": "Schedule.actor",
    "base": [
      "Schedule"
    ]
  },
  {
    "name": "date",
    "expression": "Schedule.planningHorizon",
    "base": [
      "Schedule"
    ]
  },
  {
    "name": "identifier",
    "expression": "Schedule.identifier",
    "base": [
      "Schedule"
    ]
  },
  {
    "name": "service-category",
    "expression": "Schedule.serviceCategory",
    "base": [
      "Schedule"
    ]
  },
  {
    "name": "service-type",
    "expression": "Schedule.serviceType",
    "base": [
      "Schedule"
    ]
  },
  {
    "name": "specialty",
    "expression": "Schedule.specialty",
    "base": [
      "Schedule"
    ]
  },
  {
    "name": "base",
    "expression": "SearchParameter.base",
    "base": [
      "SearchParameter"
    ]
  },
  {
    "name": "code",
    "expression": "SearchParameter.code",
    "base": [
      "SearchParameter"
    ]
  },
  {
    "name": "component",
    "expression": "SearchParameter.component.definition",
    "base": [
      "SearchParameter"
    ]
  },
  {
    "name": "derived-from",
    "expression": "SearchParameter.derivedFrom",
    "base": [
      "SearchParameter"
    ]
  },
  {
    "name": "target",
    "expression": "SearchParameter.target",
    "base": [
      "SearchParameter"
    ]
  },
  {
    "name": "type",
    "expression": "SearchParameter.type",
    "base": [
      "SearchParameter"
    ]
  },
  {
    "name": "authored",
    "expression": "ServiceRequest.authoredOn",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "based-on",
    "expression": "ServiceRequest.basedOn",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "body-site",
    "expression": "ServiceRequest.bodySite",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "category",
    "expression": "ServiceRequest.category",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "instantiates-canonical",
    "expression": "ServiceRequest.instantiatesCanonical",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "instantiates-uri",
    "expression": "ServiceRequest.instantiatesUri",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "intent",
    "expression": "ServiceRequest.intent",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "occurrence",
    "expression": "ServiceRequest.occurrence",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "performer",
    "expression": "ServiceRequest.performer",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "performer-type",
    "expression": "ServiceRequest.performerType",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "priority",
    "expression": "ServiceRequest.priority",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "replaces",
    "expression": "ServiceRequest.replaces",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "requester",
    "expression": "ServiceRequest.requester",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "requisition",
    "expression": "ServiceRequest.requisition",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "specimen",
    "expression": "ServiceRequest.specimen",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "status",
    "expression": "ServiceRequest.status",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "subject",
    "expression": "ServiceRequest.subject",
    "base": [
      "ServiceRequest"
    ]
  },
  {
    "name": "appointment-type",
    "expression": "Slot.appointmentType",
    "base": [
      "Slot"
    ]
  },
  {
    "name": "identifier",
    "expression": "Slot.identifier",
    "base": [
      "Slot"
    ]
  },
  {
    "name": "schedule",
    "expression": "Slot.schedule",
    "base": [
      "Slot"
    ]
  },
  {
    "name": "service-category",
    "expression": "Slot.serviceCategory",
    "base": [
      "Slot"
    ]
  },
  {
    "name": "service-type",
    "expression": "Slot.serviceType",
    "base": [
      "Slot"
    ]
  },
  {
    "name": "specialty",
    "expression": "Slot.specialty",
    "base": [
      "Slot"
    ]
  },
  {
    "name": "start",
    "expression": "Slot.start",
    "base": [
      "Slot"
    ]
  },
  {
    "name": "status",
    "expression": "Slot.status",
    "base": [
      "Slot"
    ]
  },
  {
    "name": "accession",
    "expression": "Specimen.accessionIdentifier",
    "base": [
      "Specimen"
    ]
  },
  {
    "name": "bodysite",
    "expression": "Specimen.collection.bodySite",
    "base": [
      "Specimen"
    ]
  },
  {
    "name": "collected",
    "expression": "Specimen.collection.collected",
    "base": [
      "Specimen"
    ]
  },
  {
    "name": "collector",
    "expression": "Specimen.collection.collector",
    "base": [
      "Specimen"
    ]
  },
  {
    "name": "container",
    "expression": "Specimen.container.type",
    "base": [
      "Specimen"
    ]
  },
  {
    "name": "container-id",
    "expression": "Specimen.container.identifier",
    "base": [
      "Specimen"
    ]
  },
  {
    "name": "identifier",
    "expression": "Specimen.identifier",
    "base": [
      "Specimen"
    ]
  },
  {
    "name": "parent",
    "expression": "Specimen.parent",
    "base": [
      "Specimen"
    ]
  },
  {
    "name": "patient",
    "expression": "Specimen.subject.where(resolve() is Patient)",
    "base": [
      "Specimen"
    ]
  },
  {
    "name": "status",
    "expression": "Specimen.status",
    "base": [
      "Specimen"
    ]
  },
  {
    "name": "subject",
    "expression": "Specimen.subject",
    "base": [
      "Specimen"
    ]
  },
  {
    "name": "type",
    "expression": "Specimen.type",
    "base": [
      "Specimen"
    ]
  },
  {
    "name": "container",
    "expression": "SpecimenDefinition.typeTested.container.type",
    "base": [
      "SpecimenDefinition"
    ]
  },
  {
    "name": "experimental",
    "expression": "SpecimenDefinition.experimental",
    "base": [
      "SpecimenDefinition"
    ]
  },
  {
    "name": "identifier",
    "expression": "SpecimenDefinition.identifier",
    "base": [
      "SpecimenDefinition"
    ]
  },
  {
    "name": "is-derived",
    "expression": "SpecimenDefinition.typeTested.isDerived",
    "base": [
      "SpecimenDefinition"
    ]
  },
  {
    "name": "status",
    "expression": "SpecimenDefinition.status",
    "base": [
      "SpecimenDefinition"
    ]
  },
  {
    "name": "title",
    "expression": "SpecimenDefinition.title",
    "base": [
      "SpecimenDefinition"
    ]
  },
  {
    "name": "type",
    "expression": "SpecimenDefinition.typeCollected",
    "base": [
      "SpecimenDefinition"
    ]
  },
  {
    "name": "type-tested",
    "expression": "SpecimenDefinition.typeTested.type",
    "base": [
      "SpecimenDefinition"
    ]
  },
  {
    "name": "url",
    "expression": "SpecimenDefinition.url",
    "base": [
      "SpecimenDefinition"
    ]
  },
  {
    "name": "abstract",
    "expression": "StructureDefinition.abstract",
    "base": [
      "StructureDefinition"
    ]
  },
  {
    "name": "base",
    "expression": "StructureDefinition.baseDefinition",
    "base": [
      "StructureDefinition"
    ]
  },
  {
    "name": "base-path",
    "expression": "StructureDefinition.snapshot.element.base.path | StructureDefinition.differential.element.base.path",
    "base": [
      "StructureDefinition"
    ]
  },
  {
    "name": "derivation",
    "expression": "StructureDefinition.derivation",
    "base": [
      "StructureDefinition"
    ]
  },
  {
    "name": "experimental",
    "expression": "StructureDefinition.experimental",
    "base": [
      "StructureDefinition"
    ]
  },
  {
    "name": "ext-context",
    "expression": "StructureDefinition.context",
    "base": [
      "StructureDefinition"
    ]
  },
  {
    "name": "keyword",
    "expression": "StructureDefinition.keyword",
    "base": [
      "StructureDefinition"
    ]
  },
  {
    "name": "kind",
    "expression": "StructureDefinition.kind",
    "base": [
      "StructureDefinition"
    ]
  },
  {
    "name": "path",
    "expression": "StructureDefinition.snapshot.element.path | StructureDefinition.differential.element.path",
    "base": [
      "StructureDefinition"
    ]
  },
  {
    "name": "type",
    "expression": "StructureDefinition.type",
    "base": [
      "StructureDefinition"
    ]
  },
  {
    "name": "valueset",
    "expression": "StructureDefinition.snapshot.element.binding.valueSet",
    "base": [
      "StructureDefinition"
    ]
  },
  {
    "name": "contact",
    "expression": "Subscription.contact",
    "base": [
      "Subscription"
    ]
  },
  {
    "name": "identifier",
    "expression": "Subscription.identifier",
    "base": [
      "Subscription"
    ]
  },
  {
    "name": "payload",
    "expression": null,
    "base": [
      "Subscription"
    ]
  },
  {
    "name": "status",
    "expression": "Subscription.status",
    "base": [
      "Subscription"
    ]
  },
  {
    "name": "type",
    "expression": null,
    "base": [
      "Subscription"
    ]
  },
  {
    "name": "url",
    "expression": null,
    "base": [
      "Subscription"
    ]
  },
  {
    "name": "date",
    "expression": "SubscriptionTopic.date",
    "base": [
      "SubscriptionTopic"
    ]
  },
  {
    "name": "derived-or-self",
    "expression": "SubscriptionTopic.url | SubscriptionTopic.derivedFrom",
    "base": [
      "SubscriptionTopic"
    ]
  },
  {
    "name": "identifier",
    "expression": "SubscriptionTopic.identifier",
    "base": [
      "SubscriptionTopic"
    ]
  },
  {
    "name": "publisher",
    "expression": "SubscriptionTopic.publisher",
    "base": [
      "SubscriptionTopic"
    ]
  },
  {
    "name": "resource-type",
    "expression": "SubscriptionTopic.resourceTrigger.resourceType",
    "base": [
      "SubscriptionTopic"
    ]
  },
  {
    "name": "status",
    "expression": "SubscriptionTopic.status",
    "base": [
      "SubscriptionTopic"
    ]
  },
  {
    "name": "title",
    "expression": "SubscriptionTopic.title",
    "base": [
      "SubscriptionTopic"
    ]
  },
  {
    "name": "trigger-description",
    "expression": "SubscriptionTopic.resourceTrigger.description",
    "base": [
      "SubscriptionTopic"
    ]
  },
  {
    "name": "url",
    "expression": "SubscriptionTopic.url",
    "base": [
      "SubscriptionTopic"
    ]
  },
  {
    "name": "version",
    "expression": "SubscriptionTopic.version",
    "base": [
      "SubscriptionTopic"
    ]
  },
  {
    "name": "category",
    "expression": "Substance.category",
    "base": [
      "Substance"
    ]
  },
  {
    "name": "code",
    "expression": "Substance.code.concept | (Substance.ingredient.substance as CodeableConcept)",
    "base": [
      "Substance"
    ]
  },
  {
    "name": "code-reference",
    "expression": "Substance.code.reference",
    "base": [
      "Substance"
    ]
  },
  {
    "name": "expiry",
    "expression": "Substance.expiry",
    "base": [
      "Substance"
    ]
  },
  {
    "name": "identifier",
    "expression": "Substance.identifier",
    "base": [
      "Substance"
    ]
  },
  {
    "name": "quantity",
    "expression": "Substance.quantity",
    "base": [
      "Substance"
    ]
  },
  {
    "name": "status",
    "expression": "Substance.status",
    "base": [
      "Substance"
    ]
  },
  {
    "name": "substance-reference",
    "expression": "(Substance.ingredient.substance as Reference)",
    "base": [
      "Substance"
    ]
  },
  {
    "name": "category",
    "expression": "SubstanceDefinition.category",
    "base": [
      "SubstanceDefinition"
    ]
  },
  {
    "name": "code",
    "expression": "SubstanceDefinition.code.code",
    "base": [
      "SubstanceDefinition"
    ]
  },
  {
    "name": "domain",
    "expression": "SubstanceDefinition.domain",
    "base": [
      "SubstanceDefinition"
    ]
  },
  {
    "name": "identifier",
    "expression": "SubstanceDefinition.identifier",
    "base": [
      "SubstanceDefinition"
    ]
  },
  {
    "name": "name",
    "expression": "SubstanceDefinition.name.name",
    "base": [
      "SubstanceDefinition"
    ]
  },
  {
    "name": "receiver",
    "expression": "SupplyDelivery.receiver",
    "base": [
      "SupplyDelivery"
    ]
  },
  {
    "name": "status",
    "expression": "SupplyDelivery.status",
    "base": [
      "SupplyDelivery"
    ]
  },
  {
    "name": "supplier",
    "expression": "SupplyDelivery.supplier",
    "base": [
      "SupplyDelivery"
    ]
  },
  {
    "name": "category",
    "expression": "SupplyRequest.category",
    "base": [
      "SupplyRequest"
    ]
  },
  {
    "name": "requester",
    "expression": "SupplyRequest.requester",
    "base": [
      "SupplyRequest"
    ]
  },
  {
    "name": "status",
    "expression": "SupplyRequest.status",
    "base": [
      "SupplyRequest"
    ]
  },
  {
    "name": "subject",
    "expression": "SupplyRequest.deliverTo",
    "base": [
      "SupplyRequest"
    ]
  },
  {
    "name": "supplier",
    "expression": "SupplyRequest.supplier",
    "base": [
      "SupplyRequest"
    ]
  },
  {
    "name": "authored-on",
    "expression": "Task.authoredOn",
    "base": [
      "Task"
    ]
  },
  {
    "name": "based-on",
    "expression": "Task.basedOn",
    "base": [
      "Task"
    ]
  },
  {
    "name": "business-status",
    "expression": "Task.businessStatus",
    "base": [
      "Task"
    ]
  },
  {
    "name": "code",
    "expression": "Task.code",
    "base": [
      "Task"
    ]
  },
  {
    "name": "encounter",
    "expression": "Task.encounter",
    "base": [
      "Task"
    ]
  },
  {
    "name": "focus",
    "expression": "Task.focus",
    "base": [
      "Task"
    ]
  },
  {
    "name": "group-identifier",
    "expression": "Task.groupIdentifier",
    "base": [
      "Task"
    ]
  },
  {
    "name": "identifier",
    "expression": "Task.identifier",
    "base": [
      "Task"
    ]
  },
  {
    "name": "intent",
    "expression": "Task.intent",
    "base": [
      "Task"
    ]
  },
  {
    "name": "modified",
    "expression": "Task.lastModified",
    "base": [
      "Task"
    ]
  },
  {
    "name": "owner",
    "expression": "Task.owner",
    "base": [
      "Task"
    ]
  },
  {
    "name": "part-of",
    "expression": "Task.partOf",
    "base": [
      "Task"
    ]
  },
  {
    "name": "patient",
    "expression": "Task.for.where(resolve() is Patient)",
    "base": [
      "Task"
    ]
  },
  {
    "name": "performer",
    "expression": "Task.performerType",
    "base": [
      "Task"
    ]
  },
  {
    "name": "period",
    "expression": "Task.executionPeriod",
    "base": [
      "Task"
    ]
  },
  {
    "name": "priority",
    "expression": "Task.priority",
    "base": [
      "Task"
    ]
  },
  {
    "name": "requester",
    "expression": "Task.requester",
    "base": [
      "Task"
    ]
  },
  {
    "name": "status",
    "expression": "Task.status",
    "base": [
      "Task"
    ]
  },
  {
    "name": "subject",
    "expression": "Task.for",
    "base": [
      "Task"
    ]
  },
  {
    "name": "identifier",
    "expression": "TestReport.identifier",
    "base": [
      "TestReport"
    ]
  },
  {
    "name": "issued",
    "expression": "TestReport.issued",
    "base": [
      "TestReport"
    ]
  },
  {
    "name": "participant",
    "expression": "TestReport.participant.uri",
    "base": [
      "TestReport"
    ]
  },
  {
    "name": "result",
    "expression": "TestReport.result",
    "base": [
      "TestReport"
    ]
  },
  {
    "name": "tester",
    "expression": "TestReport.tester",
    "base": [
      "TestReport"
    ]
  },
  {
    "name": "testscript",
    "expression": "TestReport.testScript",
    "base": [
      "TestReport"
    ]
  },
  {
    "name": "context",
    "expression": "(TestScript.useContext.value as CodeableConcept)",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "context-quantity",
    "expression": "(TestScript.useContext.value as Quantity) | (TestScript.useContext.value as Range)",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "context-type",
    "expression": "TestScript.useContext.code",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "date",
    "expression": "TestScript.date",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "description",
    "expression": "TestScript.description",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "identifier",
    "expression": "TestScript.identifier",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "jurisdiction",
    "expression": "TestScript.jurisdiction",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "name",
    "expression": "TestScript.name",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "publisher",
    "expression": "TestScript.publisher",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "scope-artifact",
    "expression": "TestScript.scope.artifact",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "status",
    "expression": "TestScript.status",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "testscript-capability",
    "expression": "TestScript.metadata.capability.description",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "title",
    "expression": "TestScript.title",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "url",
    "expression": "TestScript.url",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "version",
    "expression": "TestScript.version",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "context-type-quantity",
    "expression": "TestScript.useContext",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "context-type-value",
    "expression": "TestScript.useContext",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "scope-artifact-conformance",
    "expression": "TestScript.scope",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "scope-artifact-phase",
    "expression": "TestScript.scope",
    "base": [
      "TestScript"
    ]
  },
  {
    "name": "code",
    "expression": "ValueSet.expansion.contains.code | ValueSet.compose.include.concept.code",
    "base": [
      "ValueSet"
    ]
  },
  {
    "name": "expansion",
    "expression": "ValueSet.expansion.identifier",
    "base": [
      "ValueSet"
    ]
  },
  {
    "name": "reference",
    "expression": "ValueSet.compose.include.system",
    "base": [
      "ValueSet"
    ]
  },
  {
    "name": "target",
    "expression": "VerificationResult.target",
    "base": [
      "VerificationResult"
    ]
  },
  {
    "name": "datewritten",
    "expression": "VisionPrescription.dateWritten",
    "base": [
      "VisionPrescription"
    ]
  },
  {
    "name": "prescriber",
    "expression": "VisionPrescription.prescriber",
    "base": [
      "VisionPrescription"
    ]
  },
  {
    "name": "status",
    "expression": "VisionPrescription.status",
    "base": [
      "VisionPrescription"
    ]
  }
]
