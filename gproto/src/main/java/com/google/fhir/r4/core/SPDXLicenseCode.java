// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/r4/core/codes.proto

package com.google.fhir.r4.core;

/**
 *
 *
 * <pre>
 * The license that applies to an Implementation Guide (using an SPDX license
 * Identifiers, or 'not-open-source'). The binding is required but new SPDX
 * license Identifiers are allowed to be used (https://spdx.org/licenses/). See
 * http://hl7.org/fhir/spdx-license
 * </pre>
 *
 * Protobuf type {@code google.fhir.r4.core.SPDXLicenseCode}
 */
public final class SPDXLicenseCode extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.fhir.r4.core.SPDXLicenseCode)
    SPDXLicenseCodeOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use SPDXLicenseCode.newBuilder() to construct.
  private SPDXLicenseCode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private SPDXLicenseCode() {}

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new SPDXLicenseCode();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private SPDXLicenseCode(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.fhir.r4.core.Codes
        .internal_static_google_fhir_r4_core_SPDXLicenseCode_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.fhir.r4.core.Codes
        .internal_static_google_fhir_r4_core_SPDXLicenseCode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.fhir.r4.core.SPDXLicenseCode.class,
            com.google.fhir.r4.core.SPDXLicenseCode.Builder.class);
  }

  /** Protobuf enum {@code google.fhir.r4.core.SPDXLicenseCode.Value} */
  public enum Value implements com.google.protobuf.ProtocolMessageEnum {
    /** <code>INVALID_UNINITIALIZED = 0;</code> */
    INVALID_UNINITIALIZED(0),
    /** <code>NOT_OPEN_SOURCE = 1;</code> */
    NOT_OPEN_SOURCE(1),
    /**
     * <code>BSD_ZERO_CLAUSE_LICENSE = 2 [(.google.fhir.proto.fhir_original_code) = "0BSD"];</code>
     */
    BSD_ZERO_CLAUSE_LICENSE(2),
    /** <code>AAL = 3 [(.google.fhir.proto.fhir_original_code) = "AAL"];</code> */
    AAL(3),
    /** <code>ABSTYLES = 4 [(.google.fhir.proto.fhir_original_code) = "Abstyles"];</code> */
    ABSTYLES(4),
    /** <code>ADOBE_2006 = 5 [(.google.fhir.proto.fhir_original_code) = "Adobe-2006"];</code> */
    ADOBE_2006(5),
    /** <code>ADOBE_GLYPH = 6 [(.google.fhir.proto.fhir_original_code) = "Adobe-Glyph"];</code> */
    ADOBE_GLYPH(6),
    /** <code>ADSL = 7 [(.google.fhir.proto.fhir_original_code) = "ADSL"];</code> */
    ADSL(7),
    /** <code>AFL_1_1 = 8 [(.google.fhir.proto.fhir_original_code) = "AFL-1.1"];</code> */
    AFL_1_1(8),
    /** <code>AFL_1_2 = 9 [(.google.fhir.proto.fhir_original_code) = "AFL-1.2"];</code> */
    AFL_1_2(9),
    /** <code>AFL_2_0 = 10 [(.google.fhir.proto.fhir_original_code) = "AFL-2.0"];</code> */
    AFL_2_0(10),
    /** <code>AFL_2_1 = 11 [(.google.fhir.proto.fhir_original_code) = "AFL-2.1"];</code> */
    AFL_2_1(11),
    /** <code>AFL_3_0 = 12 [(.google.fhir.proto.fhir_original_code) = "AFL-3.0"];</code> */
    AFL_3_0(12),
    /** <code>AFMPARSE = 13 [(.google.fhir.proto.fhir_original_code) = "Afmparse"];</code> */
    AFMPARSE(13),
    /**
     * <code>AGPL_1_0_ONLY = 14 [(.google.fhir.proto.fhir_original_code) = "AGPL-1.0-only"];</code>
     */
    AGPL_1_0_ONLY(14),
    /**
     * <code>AGPL_1_0_OR_LATER = 15 [(.google.fhir.proto.fhir_original_code) = "AGPL-1.0-or-later"];
     * </code>
     */
    AGPL_1_0_OR_LATER(15),
    /**
     * <code>AGPL_3_0_ONLY = 16 [(.google.fhir.proto.fhir_original_code) = "AGPL-3.0-only"];</code>
     */
    AGPL_3_0_ONLY(16),
    /**
     * <code>AGPL_3_0_OR_LATER = 17 [(.google.fhir.proto.fhir_original_code) = "AGPL-3.0-or-later"];
     * </code>
     */
    AGPL_3_0_OR_LATER(17),
    /** <code>ALADDIN = 18 [(.google.fhir.proto.fhir_original_code) = "Aladdin"];</code> */
    ALADDIN(18),
    /** <code>AMDPLPA = 19 [(.google.fhir.proto.fhir_original_code) = "AMDPLPA"];</code> */
    AMDPLPA(19),
    /** <code>AML = 20 [(.google.fhir.proto.fhir_original_code) = "AML"];</code> */
    AML(20),
    /** <code>AMPAS = 21 [(.google.fhir.proto.fhir_original_code) = "AMPAS"];</code> */
    AMPAS(21),
    /** <code>ANTLR_PD = 22 [(.google.fhir.proto.fhir_original_code) = "ANTLR-PD"];</code> */
    ANTLR_PD(22),
    /** <code>APACHE_1_0 = 23 [(.google.fhir.proto.fhir_original_code) = "Apache-1.0"];</code> */
    APACHE_1_0(23),
    /** <code>APACHE_1_1 = 24 [(.google.fhir.proto.fhir_original_code) = "Apache-1.1"];</code> */
    APACHE_1_1(24),
    /** <code>APACHE_2_0 = 25 [(.google.fhir.proto.fhir_original_code) = "Apache-2.0"];</code> */
    APACHE_2_0(25),
    /** <code>APAFML = 26 [(.google.fhir.proto.fhir_original_code) = "APAFML"];</code> */
    APAFML(26),
    /** <code>APL_1_0 = 27 [(.google.fhir.proto.fhir_original_code) = "APL-1.0"];</code> */
    APL_1_0(27),
    /** <code>APSL_1_0 = 28 [(.google.fhir.proto.fhir_original_code) = "APSL-1.0"];</code> */
    APSL_1_0(28),
    /** <code>APSL_1_1 = 29 [(.google.fhir.proto.fhir_original_code) = "APSL-1.1"];</code> */
    APSL_1_1(29),
    /** <code>APSL_1_2 = 30 [(.google.fhir.proto.fhir_original_code) = "APSL-1.2"];</code> */
    APSL_1_2(30),
    /** <code>APSL_2_0 = 31 [(.google.fhir.proto.fhir_original_code) = "APSL-2.0"];</code> */
    APSL_2_0(31),
    /**
     * <code>ARTISTIC_1_0_CL8 = 32 [(.google.fhir.proto.fhir_original_code) = "Artistic-1.0-cl8"];
     * </code>
     */
    ARTISTIC_1_0_CL8(32),
    /**
     * <code>ARTISTIC_1_0_PERL = 33 [(.google.fhir.proto.fhir_original_code) = "Artistic-1.0-Perl"];
     * </code>
     */
    ARTISTIC_1_0_PERL(33),
    /**
     * <code>ARTISTIC_1_0 = 34 [(.google.fhir.proto.fhir_original_code) = "Artistic-1.0"];</code>
     */
    ARTISTIC_1_0(34),
    /**
     * <code>ARTISTIC_2_0 = 35 [(.google.fhir.proto.fhir_original_code) = "Artistic-2.0"];</code>
     */
    ARTISTIC_2_0(35),
    /** <code>BAHYPH = 36 [(.google.fhir.proto.fhir_original_code) = "Bahyph"];</code> */
    BAHYPH(36),
    /** <code>BARR = 37 [(.google.fhir.proto.fhir_original_code) = "Barr"];</code> */
    BARR(37),
    /** <code>BEERWARE = 38 [(.google.fhir.proto.fhir_original_code) = "Beerware"];</code> */
    BEERWARE(38),
    /**
     * <code>BIT_TORRENT_1_0 = 39 [(.google.fhir.proto.fhir_original_code) = "BitTorrent-1.0"];
     * </code>
     */
    BIT_TORRENT_1_0(39),
    /**
     * <code>BIT_TORRENT_1_1 = 40 [(.google.fhir.proto.fhir_original_code) = "BitTorrent-1.1"];
     * </code>
     */
    BIT_TORRENT_1_1(40),
    /** <code>BORCEUX = 41 [(.google.fhir.proto.fhir_original_code) = "Borceux"];</code> */
    BORCEUX(41),
    /**
     * <code>BSD_1_CLAUSE = 42 [(.google.fhir.proto.fhir_original_code) = "BSD-1-Clause"];</code>
     */
    BSD_1_CLAUSE(42),
    /**
     * <code>
     * BSD_2_CLAUSE_FREE_BSD = 43 [(.google.fhir.proto.fhir_original_code) = "BSD-2-Clause-FreeBSD"];
     * </code>
     */
    BSD_2_CLAUSE_FREE_BSD(43),
    /**
     * <code>
     * BSD_2_CLAUSE_NET_BSD = 44 [(.google.fhir.proto.fhir_original_code) = "BSD-2-Clause-NetBSD"];
     * </code>
     */
    BSD_2_CLAUSE_NET_BSD(44),
    /**
     * <code>
     * BSD_2_CLAUSE_PATENT = 45 [(.google.fhir.proto.fhir_original_code) = "BSD-2-Clause-Patent"];
     * </code>
     */
    BSD_2_CLAUSE_PATENT(45),
    /**
     * <code>BSD_2_CLAUSE = 46 [(.google.fhir.proto.fhir_original_code) = "BSD-2-Clause"];</code>
     */
    BSD_2_CLAUSE(46),
    /**
     * <code>
     * BSD_3_CLAUSE_ATTRIBUTION = 47 [(.google.fhir.proto.fhir_original_code) = "BSD-3-Clause-Attribution"];
     * </code>
     */
    BSD_3_CLAUSE_ATTRIBUTION(47),
    /**
     * <code>
     * BSD_3_CLAUSE_CLEAR = 48 [(.google.fhir.proto.fhir_original_code) = "BSD-3-Clause-Clear"];
     * </code>
     */
    BSD_3_CLAUSE_CLEAR(48),
    /**
     * <code>BSD_3_CLAUSE_LBNL = 49 [(.google.fhir.proto.fhir_original_code) = "BSD-3-Clause-LBNL"];
     * </code>
     */
    BSD_3_CLAUSE_LBNL(49),
    /**
     * <code>
     * BSD_3_CLAUSE_NO_NUCLEAR_LICENSE_2014 = 50 [(.google.fhir.proto.fhir_original_code) = "BSD-3-Clause-No-Nuclear-License-2014"];
     * </code>
     */
    BSD_3_CLAUSE_NO_NUCLEAR_LICENSE_2014(50),
    /**
     * <code>
     * BSD_3_CLAUSE_NO_NUCLEAR_LICENSE = 51 [(.google.fhir.proto.fhir_original_code) = "BSD-3-Clause-No-Nuclear-License"];
     * </code>
     */
    BSD_3_CLAUSE_NO_NUCLEAR_LICENSE(51),
    /**
     * <code>
     * BSD_3_CLAUSE_NO_NUCLEAR_WARRANTY = 52 [(.google.fhir.proto.fhir_original_code) = "BSD-3-Clause-No-Nuclear-Warranty"];
     * </code>
     */
    BSD_3_CLAUSE_NO_NUCLEAR_WARRANTY(52),
    /**
     * <code>BSD_3_CLAUSE = 53 [(.google.fhir.proto.fhir_original_code) = "BSD-3-Clause"];</code>
     */
    BSD_3_CLAUSE(53),
    /**
     * <code>BSD_4_CLAUSE_UC = 54 [(.google.fhir.proto.fhir_original_code) = "BSD-4-Clause-UC"];
     * </code>
     */
    BSD_4_CLAUSE_UC(54),
    /**
     * <code>BSD_4_CLAUSE = 55 [(.google.fhir.proto.fhir_original_code) = "BSD-4-Clause"];</code>
     */
    BSD_4_CLAUSE(55),
    /**
     * <code>BSD_PROTECTION = 56 [(.google.fhir.proto.fhir_original_code) = "BSD-Protection"];
     * </code>
     */
    BSD_PROTECTION(56),
    /**
     * <code>BSD_SOURCE_CODE = 57 [(.google.fhir.proto.fhir_original_code) = "BSD-Source-Code"];
     * </code>
     */
    BSD_SOURCE_CODE(57),
    /** <code>BSL_1_0 = 58 [(.google.fhir.proto.fhir_original_code) = "BSL-1.0"];</code> */
    BSL_1_0(58),
    /** <code>BZIP2_1_0_5 = 59 [(.google.fhir.proto.fhir_original_code) = "bzip2-1.0.5"];</code> */
    BZIP2_1_0_5(59),
    /** <code>BZIP2_1_0_6 = 60 [(.google.fhir.proto.fhir_original_code) = "bzip2-1.0.6"];</code> */
    BZIP2_1_0_6(60),
    /** <code>CALDERA = 61 [(.google.fhir.proto.fhir_original_code) = "Caldera"];</code> */
    CALDERA(61),
    /** <code>CATOSL_1_1 = 62 [(.google.fhir.proto.fhir_original_code) = "CATOSL-1.1"];</code> */
    CATOSL_1_1(62),
    /** <code>CC_BY_1_0 = 63 [(.google.fhir.proto.fhir_original_code) = "CC-BY-1.0"];</code> */
    CC_BY_1_0(63),
    /** <code>CC_BY_2_0 = 64 [(.google.fhir.proto.fhir_original_code) = "CC-BY-2.0"];</code> */
    CC_BY_2_0(64),
    /** <code>CC_BY_2_5 = 65 [(.google.fhir.proto.fhir_original_code) = "CC-BY-2.5"];</code> */
    CC_BY_2_5(65),
    /** <code>CC_BY_3_0 = 66 [(.google.fhir.proto.fhir_original_code) = "CC-BY-3.0"];</code> */
    CC_BY_3_0(66),
    /** <code>CC_BY_4_0 = 67 [(.google.fhir.proto.fhir_original_code) = "CC-BY-4.0"];</code> */
    CC_BY_4_0(67),
    /**
     * <code>CC_BY_NC_1_0 = 68 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-1.0"];</code>
     */
    CC_BY_NC_1_0(68),
    /**
     * <code>CC_BY_NC_2_0 = 69 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-2.0"];</code>
     */
    CC_BY_NC_2_0(69),
    /**
     * <code>CC_BY_NC_2_5 = 70 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-2.5"];</code>
     */
    CC_BY_NC_2_5(70),
    /**
     * <code>CC_BY_NC_3_0 = 71 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-3.0"];</code>
     */
    CC_BY_NC_3_0(71),
    /**
     * <code>CC_BY_NC_4_0 = 72 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-4.0"];</code>
     */
    CC_BY_NC_4_0(72),
    /**
     * <code>CC_BY_NC_ND_1_0 = 73 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-ND-1.0"];
     * </code>
     */
    CC_BY_NC_ND_1_0(73),
    /**
     * <code>CC_BY_NC_ND_2_0 = 74 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-ND-2.0"];
     * </code>
     */
    CC_BY_NC_ND_2_0(74),
    /**
     * <code>CC_BY_NC_ND_2_5 = 75 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-ND-2.5"];
     * </code>
     */
    CC_BY_NC_ND_2_5(75),
    /**
     * <code>CC_BY_NC_ND_3_0 = 76 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-ND-3.0"];
     * </code>
     */
    CC_BY_NC_ND_3_0(76),
    /**
     * <code>CC_BY_NC_ND_4_0 = 77 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-ND-4.0"];
     * </code>
     */
    CC_BY_NC_ND_4_0(77),
    /**
     * <code>CC_BY_NC_SA_1_0 = 78 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-SA-1.0"];
     * </code>
     */
    CC_BY_NC_SA_1_0(78),
    /**
     * <code>CC_BY_NC_SA_2_0 = 79 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-SA-2.0"];
     * </code>
     */
    CC_BY_NC_SA_2_0(79),
    /**
     * <code>CC_BY_NC_SA_2_5 = 80 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-SA-2.5"];
     * </code>
     */
    CC_BY_NC_SA_2_5(80),
    /**
     * <code>CC_BY_NC_SA_3_0 = 81 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-SA-3.0"];
     * </code>
     */
    CC_BY_NC_SA_3_0(81),
    /**
     * <code>CC_BY_NC_SA_4_0 = 82 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-SA-4.0"];
     * </code>
     */
    CC_BY_NC_SA_4_0(82),
    /**
     * <code>CC_BY_ND_1_0 = 83 [(.google.fhir.proto.fhir_original_code) = "CC-BY-ND-1.0"];</code>
     */
    CC_BY_ND_1_0(83),
    /**
     * <code>CC_BY_ND_2_0 = 84 [(.google.fhir.proto.fhir_original_code) = "CC-BY-ND-2.0"];</code>
     */
    CC_BY_ND_2_0(84),
    /**
     * <code>CC_BY_ND_2_5 = 85 [(.google.fhir.proto.fhir_original_code) = "CC-BY-ND-2.5"];</code>
     */
    CC_BY_ND_2_5(85),
    /**
     * <code>CC_BY_ND_3_0 = 86 [(.google.fhir.proto.fhir_original_code) = "CC-BY-ND-3.0"];</code>
     */
    CC_BY_ND_3_0(86),
    /**
     * <code>CC_BY_ND_4_0 = 87 [(.google.fhir.proto.fhir_original_code) = "CC-BY-ND-4.0"];</code>
     */
    CC_BY_ND_4_0(87),
    /**
     * <code>CC_BY_SA_1_0 = 88 [(.google.fhir.proto.fhir_original_code) = "CC-BY-SA-1.0"];</code>
     */
    CC_BY_SA_1_0(88),
    /**
     * <code>CC_BY_SA_2_0 = 89 [(.google.fhir.proto.fhir_original_code) = "CC-BY-SA-2.0"];</code>
     */
    CC_BY_SA_2_0(89),
    /**
     * <code>CC_BY_SA_2_5 = 90 [(.google.fhir.proto.fhir_original_code) = "CC-BY-SA-2.5"];</code>
     */
    CC_BY_SA_2_5(90),
    /**
     * <code>CC_BY_SA_3_0 = 91 [(.google.fhir.proto.fhir_original_code) = "CC-BY-SA-3.0"];</code>
     */
    CC_BY_SA_3_0(91),
    /**
     * <code>CC_BY_SA_4_0 = 92 [(.google.fhir.proto.fhir_original_code) = "CC-BY-SA-4.0"];</code>
     */
    CC_BY_SA_4_0(92),
    /** <code>CC0_1_0 = 93 [(.google.fhir.proto.fhir_original_code) = "CC0-1.0"];</code> */
    CC0_1_0(93),
    /** <code>CDDL_1_0 = 94 [(.google.fhir.proto.fhir_original_code) = "CDDL-1.0"];</code> */
    CDDL_1_0(94),
    /** <code>CDDL_1_1 = 95 [(.google.fhir.proto.fhir_original_code) = "CDDL-1.1"];</code> */
    CDDL_1_1(95),
    /**
     * <code>
     * CDLA_PERMISSIVE_1_0 = 96 [(.google.fhir.proto.fhir_original_code) = "CDLA-Permissive-1.0"];
     * </code>
     */
    CDLA_PERMISSIVE_1_0(96),
    /**
     * <code>CDLA_SHARING_1_0 = 97 [(.google.fhir.proto.fhir_original_code) = "CDLA-Sharing-1.0"];
     * </code>
     */
    CDLA_SHARING_1_0(97),
    /** <code>CECILL_1_0 = 98 [(.google.fhir.proto.fhir_original_code) = "CECILL-1.0"];</code> */
    CECILL_1_0(98),
    /** <code>CECILL_1_1 = 99 [(.google.fhir.proto.fhir_original_code) = "CECILL-1.1"];</code> */
    CECILL_1_1(99),
    /** <code>CECILL_2_0 = 100 [(.google.fhir.proto.fhir_original_code) = "CECILL-2.0"];</code> */
    CECILL_2_0(100),
    /** <code>CECILL_2_1 = 101 [(.google.fhir.proto.fhir_original_code) = "CECILL-2.1"];</code> */
    CECILL_2_1(101),
    /** <code>CECILL_B = 102 [(.google.fhir.proto.fhir_original_code) = "CECILL-B"];</code> */
    CECILL_B(102),
    /** <code>CECILL_C = 103 [(.google.fhir.proto.fhir_original_code) = "CECILL-C"];</code> */
    CECILL_C(103),
    /** <code>CL_ARTISTIC = 104 [(.google.fhir.proto.fhir_original_code) = "ClArtistic"];</code> */
    CL_ARTISTIC(104),
    /** <code>CNRI_JYTHON = 105 [(.google.fhir.proto.fhir_original_code) = "CNRI-Jython"];</code> */
    CNRI_JYTHON(105),
    /**
     * <code>
     * CNRI_PYTHON_GPL_COMPATIBLE = 106 [(.google.fhir.proto.fhir_original_code) = "CNRI-Python-GPL-Compatible"];
     * </code>
     */
    CNRI_PYTHON_GPL_COMPATIBLE(106),
    /** <code>CNRI_PYTHON = 107 [(.google.fhir.proto.fhir_original_code) = "CNRI-Python"];</code> */
    CNRI_PYTHON(107),
    /** <code>CONDOR_1_1 = 108 [(.google.fhir.proto.fhir_original_code) = "Condor-1.1"];</code> */
    CONDOR_1_1(108),
    /** <code>CPAL_1_0 = 109 [(.google.fhir.proto.fhir_original_code) = "CPAL-1.0"];</code> */
    CPAL_1_0(109),
    /** <code>CPL_1_0 = 110 [(.google.fhir.proto.fhir_original_code) = "CPL-1.0"];</code> */
    CPL_1_0(110),
    /** <code>CPOL_1_02 = 111 [(.google.fhir.proto.fhir_original_code) = "CPOL-1.02"];</code> */
    CPOL_1_02(111),
    /** <code>CROSSWORD = 112 [(.google.fhir.proto.fhir_original_code) = "Crossword"];</code> */
    CROSSWORD(112),
    /**
     * <code>CRYSTAL_STACKER = 113 [(.google.fhir.proto.fhir_original_code) = "CrystalStacker"];
     * </code>
     */
    CRYSTAL_STACKER(113),
    /** <code>CUA_OPL_1_0 = 114 [(.google.fhir.proto.fhir_original_code) = "CUA-OPL-1.0"];</code> */
    CUA_OPL_1_0(114),
    /** <code>CUBE = 115 [(.google.fhir.proto.fhir_original_code) = "Cube"];</code> */
    CUBE(115),
    /** <code>CURL = 116;</code> */
    CURL(116),
    /** <code>D_FSL_1_0 = 117 [(.google.fhir.proto.fhir_original_code) = "D-FSL-1.0"];</code> */
    D_FSL_1_0(117),
    /** <code>DIFFMARK = 118;</code> */
    DIFFMARK(118),
    /** <code>DOC = 119 [(.google.fhir.proto.fhir_original_code) = "DOC"];</code> */
    DOC(119),
    /** <code>DOTSEQN = 120 [(.google.fhir.proto.fhir_original_code) = "Dotseqn"];</code> */
    DOTSEQN(120),
    /** <code>DSDP = 121 [(.google.fhir.proto.fhir_original_code) = "DSDP"];</code> */
    DSDP(121),
    /** <code>DVIPDFM = 122;</code> */
    DVIPDFM(122),
    /** <code>ECL_1_0 = 123 [(.google.fhir.proto.fhir_original_code) = "ECL-1.0"];</code> */
    ECL_1_0(123),
    /** <code>ECL_2_0 = 124 [(.google.fhir.proto.fhir_original_code) = "ECL-2.0"];</code> */
    ECL_2_0(124),
    /** <code>EFL_1_0 = 125 [(.google.fhir.proto.fhir_original_code) = "EFL-1.0"];</code> */
    EFL_1_0(125),
    /** <code>EFL_2_0 = 126 [(.google.fhir.proto.fhir_original_code) = "EFL-2.0"];</code> */
    EFL_2_0(126),
    /** <code>E_GENIX = 127 [(.google.fhir.proto.fhir_original_code) = "eGenix"];</code> */
    E_GENIX(127),
    /** <code>ENTESSA = 128 [(.google.fhir.proto.fhir_original_code) = "Entessa"];</code> */
    ENTESSA(128),
    /** <code>EPL_1_0 = 129 [(.google.fhir.proto.fhir_original_code) = "EPL-1.0"];</code> */
    EPL_1_0(129),
    /** <code>EPL_2_0 = 130 [(.google.fhir.proto.fhir_original_code) = "EPL-2.0"];</code> */
    EPL_2_0(130),
    /** <code>ERL_PL_1_1 = 131 [(.google.fhir.proto.fhir_original_code) = "ErlPL-1.1"];</code> */
    ERL_PL_1_1(131),
    /** <code>EU_DATAGRID = 132 [(.google.fhir.proto.fhir_original_code) = "EUDatagrid"];</code> */
    EU_DATAGRID(132),
    /** <code>EUPL_1_0 = 133 [(.google.fhir.proto.fhir_original_code) = "EUPL-1.0"];</code> */
    EUPL_1_0(133),
    /** <code>EUPL_1_1 = 134 [(.google.fhir.proto.fhir_original_code) = "EUPL-1.1"];</code> */
    EUPL_1_1(134),
    /** <code>EUPL_1_2 = 135 [(.google.fhir.proto.fhir_original_code) = "EUPL-1.2"];</code> */
    EUPL_1_2(135),
    /** <code>EUROSYM = 136 [(.google.fhir.proto.fhir_original_code) = "Eurosym"];</code> */
    EUROSYM(136),
    /** <code>FAIR = 137 [(.google.fhir.proto.fhir_original_code) = "Fair"];</code> */
    FAIR(137),
    /**
     * <code>FRAMEWORX_1_0 = 138 [(.google.fhir.proto.fhir_original_code) = "Frameworx-1.0"];</code>
     */
    FRAMEWORX_1_0(138),
    /** <code>FREE_IMAGE = 139 [(.google.fhir.proto.fhir_original_code) = "FreeImage"];</code> */
    FREE_IMAGE(139),
    /** <code>FSFAP = 140 [(.google.fhir.proto.fhir_original_code) = "FSFAP"];</code> */
    FSFAP(140),
    /** <code>FSFUL = 141 [(.google.fhir.proto.fhir_original_code) = "FSFUL"];</code> */
    FSFUL(141),
    /** <code>FSFULLR = 142 [(.google.fhir.proto.fhir_original_code) = "FSFULLR"];</code> */
    FSFULLR(142),
    /** <code>FTL = 143 [(.google.fhir.proto.fhir_original_code) = "FTL"];</code> */
    FTL(143),
    /**
     * <code>GFDL_1_1_ONLY = 144 [(.google.fhir.proto.fhir_original_code) = "GFDL-1.1-only"];</code>
     */
    GFDL_1_1_ONLY(144),
    /**
     * <code>
     * GFDL_1_1_OR_LATER = 145 [(.google.fhir.proto.fhir_original_code) = "GFDL-1.1-or-later"];
     * </code>
     */
    GFDL_1_1_OR_LATER(145),
    /**
     * <code>GFDL_1_2_ONLY = 146 [(.google.fhir.proto.fhir_original_code) = "GFDL-1.2-only"];</code>
     */
    GFDL_1_2_ONLY(146),
    /**
     * <code>
     * GFDL_1_2_OR_LATER = 147 [(.google.fhir.proto.fhir_original_code) = "GFDL-1.2-or-later"];
     * </code>
     */
    GFDL_1_2_OR_LATER(147),
    /**
     * <code>GFDL_1_3_ONLY = 148 [(.google.fhir.proto.fhir_original_code) = "GFDL-1.3-only"];</code>
     */
    GFDL_1_3_ONLY(148),
    /**
     * <code>
     * GFDL_1_3_OR_LATER = 149 [(.google.fhir.proto.fhir_original_code) = "GFDL-1.3-or-later"];
     * </code>
     */
    GFDL_1_3_OR_LATER(149),
    /** <code>GIFTWARE = 150 [(.google.fhir.proto.fhir_original_code) = "Giftware"];</code> */
    GIFTWARE(150),
    /** <code>GL2PS = 151 [(.google.fhir.proto.fhir_original_code) = "GL2PS"];</code> */
    GL2PS(151),
    /** <code>GLIDE = 152 [(.google.fhir.proto.fhir_original_code) = "Glide"];</code> */
    GLIDE(152),
    /** <code>GLULXE = 153 [(.google.fhir.proto.fhir_original_code) = "Glulxe"];</code> */
    GLULXE(153),
    /** <code>GNUPLOT = 154;</code> */
    GNUPLOT(154),
    /**
     * <code>GPL_1_0_ONLY = 155 [(.google.fhir.proto.fhir_original_code) = "GPL-1.0-only"];</code>
     */
    GPL_1_0_ONLY(155),
    /**
     * <code>GPL_1_0_OR_LATER = 156 [(.google.fhir.proto.fhir_original_code) = "GPL-1.0-or-later"];
     * </code>
     */
    GPL_1_0_OR_LATER(156),
    /**
     * <code>GPL_2_0_ONLY = 157 [(.google.fhir.proto.fhir_original_code) = "GPL-2.0-only"];</code>
     */
    GPL_2_0_ONLY(157),
    /**
     * <code>GPL_2_0_OR_LATER = 158 [(.google.fhir.proto.fhir_original_code) = "GPL-2.0-or-later"];
     * </code>
     */
    GPL_2_0_OR_LATER(158),
    /**
     * <code>GPL_3_0_ONLY = 159 [(.google.fhir.proto.fhir_original_code) = "GPL-3.0-only"];</code>
     */
    GPL_3_0_ONLY(159),
    /**
     * <code>GPL_3_0_OR_LATER = 160 [(.google.fhir.proto.fhir_original_code) = "GPL-3.0-or-later"];
     * </code>
     */
    GPL_3_0_OR_LATER(160),
    /** <code>G_SOAP_1_3B = 161 [(.google.fhir.proto.fhir_original_code) = "gSOAP-1.3b"];</code> */
    G_SOAP_1_3B(161),
    /**
     * <code>HASKELL_REPORT = 162 [(.google.fhir.proto.fhir_original_code) = "HaskellReport"];
     * </code>
     */
    HASKELL_REPORT(162),
    /** <code>HPND = 163 [(.google.fhir.proto.fhir_original_code) = "HPND"];</code> */
    HPND(163),
    /** <code>IBM_PIBS = 164 [(.google.fhir.proto.fhir_original_code) = "IBM-pibs"];</code> */
    IBM_PIBS(164),
    /** <code>ICU = 165 [(.google.fhir.proto.fhir_original_code) = "ICU"];</code> */
    ICU(165),
    /** <code>IJG = 166 [(.google.fhir.proto.fhir_original_code) = "IJG"];</code> */
    IJG(166),
    /**
     * <code>IMAGE_MAGICK = 167 [(.google.fhir.proto.fhir_original_code) = "ImageMagick"];</code>
     */
    IMAGE_MAGICK(167),
    /** <code>I_MATIX = 168 [(.google.fhir.proto.fhir_original_code) = "iMatix"];</code> */
    I_MATIX(168),
    /** <code>IMLIB2 = 169 [(.google.fhir.proto.fhir_original_code) = "Imlib2"];</code> */
    IMLIB2(169),
    /** <code>INFO_ZIP = 170 [(.google.fhir.proto.fhir_original_code) = "Info-ZIP"];</code> */
    INFO_ZIP(170),
    /** <code>INTEL_ACPI = 171 [(.google.fhir.proto.fhir_original_code) = "Intel-ACPI"];</code> */
    INTEL_ACPI(171),
    /** <code>INTEL = 172 [(.google.fhir.proto.fhir_original_code) = "Intel"];</code> */
    INTEL(172),
    /**
     * <code>INTERBASE_1_0 = 173 [(.google.fhir.proto.fhir_original_code) = "Interbase-1.0"];</code>
     */
    INTERBASE_1_0(173),
    /** <code>IPA = 174 [(.google.fhir.proto.fhir_original_code) = "IPA"];</code> */
    IPA(174),
    /** <code>IPL_1_0 = 175 [(.google.fhir.proto.fhir_original_code) = "IPL-1.0"];</code> */
    IPL_1_0(175),
    /** <code>ISC = 176 [(.google.fhir.proto.fhir_original_code) = "ISC"];</code> */
    ISC(176),
    /** <code>JAS_PER_2_0 = 177 [(.google.fhir.proto.fhir_original_code) = "JasPer-2.0"];</code> */
    JAS_PER_2_0(177),
    /** <code>JSON = 178 [(.google.fhir.proto.fhir_original_code) = "JSON"];</code> */
    JSON(178),
    /** <code>LAL_1_2 = 179 [(.google.fhir.proto.fhir_original_code) = "LAL-1.2"];</code> */
    LAL_1_2(179),
    /** <code>LAL_1_3 = 180 [(.google.fhir.proto.fhir_original_code) = "LAL-1.3"];</code> */
    LAL_1_3(180),
    /** <code>LATEX2E = 181 [(.google.fhir.proto.fhir_original_code) = "Latex2e"];</code> */
    LATEX2E(181),
    /** <code>LEPTONICA = 182 [(.google.fhir.proto.fhir_original_code) = "Leptonica"];</code> */
    LEPTONICA(182),
    /**
     * <code>LGPL_2_0_ONLY = 183 [(.google.fhir.proto.fhir_original_code) = "LGPL-2.0-only"];</code>
     */
    LGPL_2_0_ONLY(183),
    /**
     * <code>
     * LGPL_2_0_OR_LATER = 184 [(.google.fhir.proto.fhir_original_code) = "LGPL-2.0-or-later"];
     * </code>
     */
    LGPL_2_0_OR_LATER(184),
    /**
     * <code>LGPL_2_1_ONLY = 185 [(.google.fhir.proto.fhir_original_code) = "LGPL-2.1-only"];</code>
     */
    LGPL_2_1_ONLY(185),
    /**
     * <code>
     * LGPL_2_1_OR_LATER = 186 [(.google.fhir.proto.fhir_original_code) = "LGPL-2.1-or-later"];
     * </code>
     */
    LGPL_2_1_OR_LATER(186),
    /**
     * <code>LGPL_3_0_ONLY = 187 [(.google.fhir.proto.fhir_original_code) = "LGPL-3.0-only"];</code>
     */
    LGPL_3_0_ONLY(187),
    /**
     * <code>
     * LGPL_3_0_OR_LATER = 188 [(.google.fhir.proto.fhir_original_code) = "LGPL-3.0-or-later"];
     * </code>
     */
    LGPL_3_0_OR_LATER(188),
    /** <code>LGPLLR = 189 [(.google.fhir.proto.fhir_original_code) = "LGPLLR"];</code> */
    LGPLLR(189),
    /** <code>LIBPNG = 190 [(.google.fhir.proto.fhir_original_code) = "Libpng"];</code> */
    LIBPNG(190),
    /** <code>LIBTIFF = 191;</code> */
    LIBTIFF(191),
    /**
     * <code>LI_LI_Q_P_1_1 = 192 [(.google.fhir.proto.fhir_original_code) = "LiLiQ-P-1.1"];</code>
     */
    LI_LI_Q_P_1_1(192),
    /**
     * <code>LI_LI_Q_R_1_1 = 193 [(.google.fhir.proto.fhir_original_code) = "LiLiQ-R-1.1"];</code>
     */
    LI_LI_Q_R_1_1(193),
    /**
     * <code>LI_LI_Q_RPLUS_1_1 = 194 [(.google.fhir.proto.fhir_original_code) = "LiLiQ-Rplus-1.1"];
     * </code>
     */
    LI_LI_Q_RPLUS_1_1(194),
    /**
     * <code>LINUX_OPEN_IB = 195 [(.google.fhir.proto.fhir_original_code) = "Linux-OpenIB"];</code>
     */
    LINUX_OPEN_IB(195),
    /** <code>LPL_1_0 = 196 [(.google.fhir.proto.fhir_original_code) = "LPL-1.0"];</code> */
    LPL_1_0(196),
    /** <code>LPL_1_02 = 197 [(.google.fhir.proto.fhir_original_code) = "LPL-1.02"];</code> */
    LPL_1_02(197),
    /** <code>LPPL_1_0 = 198 [(.google.fhir.proto.fhir_original_code) = "LPPL-1.0"];</code> */
    LPPL_1_0(198),
    /** <code>LPPL_1_1 = 199 [(.google.fhir.proto.fhir_original_code) = "LPPL-1.1"];</code> */
    LPPL_1_1(199),
    /** <code>LPPL_1_2 = 200 [(.google.fhir.proto.fhir_original_code) = "LPPL-1.2"];</code> */
    LPPL_1_2(200),
    /** <code>LPPL_1_3A = 201 [(.google.fhir.proto.fhir_original_code) = "LPPL-1.3a"];</code> */
    LPPL_1_3A(201),
    /** <code>LPPL_1_3C = 202 [(.google.fhir.proto.fhir_original_code) = "LPPL-1.3c"];</code> */
    LPPL_1_3C(202),
    /** <code>MAKE_INDEX = 203 [(.google.fhir.proto.fhir_original_code) = "MakeIndex"];</code> */
    MAKE_INDEX(203),
    /** <code>MIR_OS = 204 [(.google.fhir.proto.fhir_original_code) = "MirOS"];</code> */
    MIR_OS(204),
    /** <code>MIT_0 = 205 [(.google.fhir.proto.fhir_original_code) = "MIT-0"];</code> */
    MIT_0(205),
    /**
     * <code>MIT_ADVERTISING = 206 [(.google.fhir.proto.fhir_original_code) = "MIT-advertising"];
     * </code>
     */
    MIT_ADVERTISING(206),
    /** <code>MIT_CMU = 207 [(.google.fhir.proto.fhir_original_code) = "MIT-CMU"];</code> */
    MIT_CMU(207),
    /** <code>MIT_ENNA = 208 [(.google.fhir.proto.fhir_original_code) = "MIT-enna"];</code> */
    MIT_ENNA(208),
    /** <code>MIT_FEH = 209 [(.google.fhir.proto.fhir_original_code) = "MIT-feh"];</code> */
    MIT_FEH(209),
    /** <code>MIT = 210 [(.google.fhir.proto.fhir_original_code) = "MIT"];</code> */
    MIT(210),
    /** <code>MITNFA = 211 [(.google.fhir.proto.fhir_original_code) = "MITNFA"];</code> */
    MITNFA(211),
    /** <code>MOTOSOTO = 212 [(.google.fhir.proto.fhir_original_code) = "Motosoto"];</code> */
    MOTOSOTO(212),
    /** <code>MPICH2 = 213;</code> */
    MPICH2(213),
    /** <code>MPL_1_0 = 214 [(.google.fhir.proto.fhir_original_code) = "MPL-1.0"];</code> */
    MPL_1_0(214),
    /** <code>MPL_1_1 = 215 [(.google.fhir.proto.fhir_original_code) = "MPL-1.1"];</code> */
    MPL_1_1(215),
    /**
     * <code>
     * MPL_2_0_NO_COPYLEFT_EXCEPTION = 216 [(.google.fhir.proto.fhir_original_code) = "MPL-2.0-no-copyleft-exception"];
     * </code>
     */
    MPL_2_0_NO_COPYLEFT_EXCEPTION(216),
    /** <code>MPL_2_0 = 217 [(.google.fhir.proto.fhir_original_code) = "MPL-2.0"];</code> */
    MPL_2_0(217),
    /** <code>MS_PL = 218 [(.google.fhir.proto.fhir_original_code) = "MS-PL"];</code> */
    MS_PL(218),
    /** <code>MS_RL = 219 [(.google.fhir.proto.fhir_original_code) = "MS-RL"];</code> */
    MS_RL(219),
    /** <code>MTLL = 220 [(.google.fhir.proto.fhir_original_code) = "MTLL"];</code> */
    MTLL(220),
    /** <code>MULTICS = 221 [(.google.fhir.proto.fhir_original_code) = "Multics"];</code> */
    MULTICS(221),
    /** <code>MUP = 222 [(.google.fhir.proto.fhir_original_code) = "Mup"];</code> */
    MUP(222),
    /** <code>NASA_1_3 = 223 [(.google.fhir.proto.fhir_original_code) = "NASA-1.3"];</code> */
    NASA_1_3(223),
    /** <code>NAUMEN = 224 [(.google.fhir.proto.fhir_original_code) = "Naumen"];</code> */
    NAUMEN(224),
    /** <code>NBPL_1_0 = 225 [(.google.fhir.proto.fhir_original_code) = "NBPL-1.0"];</code> */
    NBPL_1_0(225),
    /** <code>NCSA = 226 [(.google.fhir.proto.fhir_original_code) = "NCSA"];</code> */
    NCSA(226),
    /** <code>NET_SNMP = 227 [(.google.fhir.proto.fhir_original_code) = "Net-SNMP"];</code> */
    NET_SNMP(227),
    /** <code>NET_CDF = 228 [(.google.fhir.proto.fhir_original_code) = "NetCDF"];</code> */
    NET_CDF(228),
    /** <code>NEWSLETR = 229 [(.google.fhir.proto.fhir_original_code) = "Newsletr"];</code> */
    NEWSLETR(229),
    /** <code>NGPL = 230 [(.google.fhir.proto.fhir_original_code) = "NGPL"];</code> */
    NGPL(230),
    /** <code>NLOD_1_0 = 231 [(.google.fhir.proto.fhir_original_code) = "NLOD-1.0"];</code> */
    NLOD_1_0(231),
    /** <code>NLPL = 232 [(.google.fhir.proto.fhir_original_code) = "NLPL"];</code> */
    NLPL(232),
    /** <code>NOKIA = 233 [(.google.fhir.proto.fhir_original_code) = "Nokia"];</code> */
    NOKIA(233),
    /** <code>NOSL = 234 [(.google.fhir.proto.fhir_original_code) = "NOSL"];</code> */
    NOSL(234),
    /** <code>NOWEB = 235 [(.google.fhir.proto.fhir_original_code) = "Noweb"];</code> */
    NOWEB(235),
    /** <code>NPL_1_0 = 236 [(.google.fhir.proto.fhir_original_code) = "NPL-1.0"];</code> */
    NPL_1_0(236),
    /** <code>NPL_1_1 = 237 [(.google.fhir.proto.fhir_original_code) = "NPL-1.1"];</code> */
    NPL_1_1(237),
    /** <code>NPOSL_3_0 = 238 [(.google.fhir.proto.fhir_original_code) = "NPOSL-3.0"];</code> */
    NPOSL_3_0(238),
    /** <code>NRL = 239 [(.google.fhir.proto.fhir_original_code) = "NRL"];</code> */
    NRL(239),
    /** <code>NTP = 240 [(.google.fhir.proto.fhir_original_code) = "NTP"];</code> */
    NTP(240),
    /** <code>OCCT_PL = 241 [(.google.fhir.proto.fhir_original_code) = "OCCT-PL"];</code> */
    OCCT_PL(241),
    /** <code>OCLC_2_0 = 242 [(.google.fhir.proto.fhir_original_code) = "OCLC-2.0"];</code> */
    OCLC_2_0(242),
    /** <code>O_DB_L_1_0 = 243 [(.google.fhir.proto.fhir_original_code) = "ODbL-1.0"];</code> */
    O_DB_L_1_0(243),
    /** <code>OFL_1_0 = 244 [(.google.fhir.proto.fhir_original_code) = "OFL-1.0"];</code> */
    OFL_1_0(244),
    /** <code>OFL_1_1 = 245 [(.google.fhir.proto.fhir_original_code) = "OFL-1.1"];</code> */
    OFL_1_1(245),
    /** <code>OGTSL = 246 [(.google.fhir.proto.fhir_original_code) = "OGTSL"];</code> */
    OGTSL(246),
    /** <code>OLDAP_1_1 = 247 [(.google.fhir.proto.fhir_original_code) = "OLDAP-1.1"];</code> */
    OLDAP_1_1(247),
    /** <code>OLDAP_1_2 = 248 [(.google.fhir.proto.fhir_original_code) = "OLDAP-1.2"];</code> */
    OLDAP_1_2(248),
    /** <code>OLDAP_1_3 = 249 [(.google.fhir.proto.fhir_original_code) = "OLDAP-1.3"];</code> */
    OLDAP_1_3(249),
    /** <code>OLDAP_1_4 = 250 [(.google.fhir.proto.fhir_original_code) = "OLDAP-1.4"];</code> */
    OLDAP_1_4(250),
    /** <code>OLDAP_2_0_1 = 251 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.0.1"];</code> */
    OLDAP_2_0_1(251),
    /** <code>OLDAP_2_0 = 252 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.0"];</code> */
    OLDAP_2_0(252),
    /** <code>OLDAP_2_1 = 253 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.1"];</code> */
    OLDAP_2_1(253),
    /** <code>OLDAP_2_2_1 = 254 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.2.1"];</code> */
    OLDAP_2_2_1(254),
    /** <code>OLDAP_2_2_2 = 255 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.2.2"];</code> */
    OLDAP_2_2_2(255),
    /** <code>OLDAP_2_2 = 256 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.2"];</code> */
    OLDAP_2_2(256),
    /** <code>OLDAP_2_3 = 257 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.3"];</code> */
    OLDAP_2_3(257),
    /** <code>OLDAP_2_4 = 258 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.4"];</code> */
    OLDAP_2_4(258),
    /** <code>OLDAP_2_5 = 259 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.5"];</code> */
    OLDAP_2_5(259),
    /** <code>OLDAP_2_6 = 260 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.6"];</code> */
    OLDAP_2_6(260),
    /** <code>OLDAP_2_7 = 261 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.7"];</code> */
    OLDAP_2_7(261),
    /** <code>OLDAP_2_8 = 262 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.8"];</code> */
    OLDAP_2_8(262),
    /** <code>OML = 263 [(.google.fhir.proto.fhir_original_code) = "OML"];</code> */
    OML(263),
    /** <code>OPEN_SSL = 264 [(.google.fhir.proto.fhir_original_code) = "OpenSSL"];</code> */
    OPEN_SSL(264),
    /** <code>OPL_1_0 = 265 [(.google.fhir.proto.fhir_original_code) = "OPL-1.0"];</code> */
    OPL_1_0(265),
    /** <code>OSET_PL_2_1 = 266 [(.google.fhir.proto.fhir_original_code) = "OSET-PL-2.1"];</code> */
    OSET_PL_2_1(266),
    /** <code>OSL_1_0 = 267 [(.google.fhir.proto.fhir_original_code) = "OSL-1.0"];</code> */
    OSL_1_0(267),
    /** <code>OSL_1_1 = 268 [(.google.fhir.proto.fhir_original_code) = "OSL-1.1"];</code> */
    OSL_1_1(268),
    /** <code>OSL_2_0 = 269 [(.google.fhir.proto.fhir_original_code) = "OSL-2.0"];</code> */
    OSL_2_0(269),
    /** <code>OSL_2_1 = 270 [(.google.fhir.proto.fhir_original_code) = "OSL-2.1"];</code> */
    OSL_2_1(270),
    /** <code>OSL_3_0 = 271 [(.google.fhir.proto.fhir_original_code) = "OSL-3.0"];</code> */
    OSL_3_0(271),
    /** <code>PDDL_1_0 = 272 [(.google.fhir.proto.fhir_original_code) = "PDDL-1.0"];</code> */
    PDDL_1_0(272),
    /** <code>PHP_3_0 = 273 [(.google.fhir.proto.fhir_original_code) = "PHP-3.0"];</code> */
    PHP_3_0(273),
    /** <code>PHP_3_01 = 274 [(.google.fhir.proto.fhir_original_code) = "PHP-3.01"];</code> */
    PHP_3_01(274),
    /** <code>PLEXUS = 275 [(.google.fhir.proto.fhir_original_code) = "Plexus"];</code> */
    PLEXUS(275),
    /** <code>POSTGRE_SQL = 276 [(.google.fhir.proto.fhir_original_code) = "PostgreSQL"];</code> */
    POSTGRE_SQL(276),
    /** <code>PSFRAG = 277;</code> */
    PSFRAG(277),
    /** <code>PSUTILS = 278;</code> */
    PSUTILS(278),
    /** <code>PYTHON_2_0 = 279 [(.google.fhir.proto.fhir_original_code) = "Python-2.0"];</code> */
    PYTHON_2_0(279),
    /** <code>QHULL = 280 [(.google.fhir.proto.fhir_original_code) = "Qhull"];</code> */
    QHULL(280),
    /** <code>QPL_1_0 = 281 [(.google.fhir.proto.fhir_original_code) = "QPL-1.0"];</code> */
    QPL_1_0(281),
    /** <code>RDISC = 282 [(.google.fhir.proto.fhir_original_code) = "Rdisc"];</code> */
    RDISC(282),
    /** <code>R_HE_COS_1_1 = 283 [(.google.fhir.proto.fhir_original_code) = "RHeCos-1.1"];</code> */
    R_HE_COS_1_1(283),
    /** <code>RPL_1_1 = 284 [(.google.fhir.proto.fhir_original_code) = "RPL-1.1"];</code> */
    RPL_1_1(284),
    /** <code>RPL_1_5 = 285 [(.google.fhir.proto.fhir_original_code) = "RPL-1.5"];</code> */
    RPL_1_5(285),
    /** <code>RPSL_1_0 = 286 [(.google.fhir.proto.fhir_original_code) = "RPSL-1.0"];</code> */
    RPSL_1_0(286),
    /** <code>RSA_MD = 287 [(.google.fhir.proto.fhir_original_code) = "RSA-MD"];</code> */
    RSA_MD(287),
    /** <code>RSCPL = 288 [(.google.fhir.proto.fhir_original_code) = "RSCPL"];</code> */
    RSCPL(288),
    /** <code>RUBY = 289 [(.google.fhir.proto.fhir_original_code) = "Ruby"];</code> */
    RUBY(289),
    /** <code>SAX_PD = 290 [(.google.fhir.proto.fhir_original_code) = "SAX-PD"];</code> */
    SAX_PD(290),
    /** <code>SAXPATH = 291 [(.google.fhir.proto.fhir_original_code) = "Saxpath"];</code> */
    SAXPATH(291),
    /** <code>SCEA = 292 [(.google.fhir.proto.fhir_original_code) = "SCEA"];</code> */
    SCEA(292),
    /** <code>SENDMAIL = 293 [(.google.fhir.proto.fhir_original_code) = "Sendmail"];</code> */
    SENDMAIL(293),
    /** <code>SGI_B_1_0 = 294 [(.google.fhir.proto.fhir_original_code) = "SGI-B-1.0"];</code> */
    SGI_B_1_0(294),
    /** <code>SGI_B_1_1 = 295 [(.google.fhir.proto.fhir_original_code) = "SGI-B-1.1"];</code> */
    SGI_B_1_1(295),
    /** <code>SGI_B_2_0 = 296 [(.google.fhir.proto.fhir_original_code) = "SGI-B-2.0"];</code> */
    SGI_B_2_0(296),
    /** <code>SIM_PL_2_0 = 297 [(.google.fhir.proto.fhir_original_code) = "SimPL-2.0"];</code> */
    SIM_PL_2_0(297),
    /** <code>SISSL_1_2 = 298 [(.google.fhir.proto.fhir_original_code) = "SISSL-1.2"];</code> */
    SISSL_1_2(298),
    /** <code>SISSL = 299 [(.google.fhir.proto.fhir_original_code) = "SISSL"];</code> */
    SISSL(299),
    /** <code>SLEEPYCAT = 300 [(.google.fhir.proto.fhir_original_code) = "Sleepycat"];</code> */
    SLEEPYCAT(300),
    /** <code>SMLNJ = 301 [(.google.fhir.proto.fhir_original_code) = "SMLNJ"];</code> */
    SMLNJ(301),
    /** <code>SMPPL = 302 [(.google.fhir.proto.fhir_original_code) = "SMPPL"];</code> */
    SMPPL(302),
    /** <code>SNIA = 303 [(.google.fhir.proto.fhir_original_code) = "SNIA"];</code> */
    SNIA(303),
    /** <code>SPENCER_86 = 304 [(.google.fhir.proto.fhir_original_code) = "Spencer-86"];</code> */
    SPENCER_86(304),
    /** <code>SPENCER_94 = 305 [(.google.fhir.proto.fhir_original_code) = "Spencer-94"];</code> */
    SPENCER_94(305),
    /** <code>SPENCER_99 = 306 [(.google.fhir.proto.fhir_original_code) = "Spencer-99"];</code> */
    SPENCER_99(306),
    /** <code>SPL_1_0 = 307 [(.google.fhir.proto.fhir_original_code) = "SPL-1.0"];</code> */
    SPL_1_0(307),
    /**
     * <code>SUGAR_CRM_1_1_3 = 308 [(.google.fhir.proto.fhir_original_code) = "SugarCRM-1.1.3"];
     * </code>
     */
    SUGAR_CRM_1_1_3(308),
    /** <code>SWL = 309 [(.google.fhir.proto.fhir_original_code) = "SWL"];</code> */
    SWL(309),
    /** <code>TCL = 310 [(.google.fhir.proto.fhir_original_code) = "TCL"];</code> */
    TCL(310),
    /**
     * <code>TCP_WRAPPERS = 311 [(.google.fhir.proto.fhir_original_code) = "TCP-wrappers"];</code>
     */
    TCP_WRAPPERS(311),
    /** <code>T_MATE = 312 [(.google.fhir.proto.fhir_original_code) = "TMate"];</code> */
    T_MATE(312),
    /** <code>TORQUE_1_1 = 313 [(.google.fhir.proto.fhir_original_code) = "TORQUE-1.1"];</code> */
    TORQUE_1_1(313),
    /** <code>TOSL = 314 [(.google.fhir.proto.fhir_original_code) = "TOSL"];</code> */
    TOSL(314),
    /**
     * <code>UNICODE_DFS_2015 = 315 [(.google.fhir.proto.fhir_original_code) = "Unicode-DFS-2015"];
     * </code>
     */
    UNICODE_DFS_2015(315),
    /**
     * <code>UNICODE_DFS_2016 = 316 [(.google.fhir.proto.fhir_original_code) = "Unicode-DFS-2016"];
     * </code>
     */
    UNICODE_DFS_2016(316),
    /** <code>UNICODE_TOU = 317 [(.google.fhir.proto.fhir_original_code) = "Unicode-TOU"];</code> */
    UNICODE_TOU(317),
    /** <code>UNLICENSE = 318 [(.google.fhir.proto.fhir_original_code) = "Unlicense"];</code> */
    UNLICENSE(318),
    /** <code>UPL_1_0 = 319 [(.google.fhir.proto.fhir_original_code) = "UPL-1.0"];</code> */
    UPL_1_0(319),
    /** <code>VIM = 320 [(.google.fhir.proto.fhir_original_code) = "Vim"];</code> */
    VIM(320),
    /** <code>VOSTROM = 321 [(.google.fhir.proto.fhir_original_code) = "VOSTROM"];</code> */
    VOSTROM(321),
    /** <code>VSL_1_0 = 322 [(.google.fhir.proto.fhir_original_code) = "VSL-1.0"];</code> */
    VSL_1_0(322),
    /**
     * <code>W3C_19980720 = 323 [(.google.fhir.proto.fhir_original_code) = "W3C-19980720"];</code>
     */
    W3C_19980720(323),
    /**
     * <code>W3C_20150513 = 324 [(.google.fhir.proto.fhir_original_code) = "W3C-20150513"];</code>
     */
    W3C_20150513(324),
    /** <code>W3C = 325 [(.google.fhir.proto.fhir_original_code) = "W3C"];</code> */
    W3C(325),
    /** <code>WATCOM_1_0 = 326 [(.google.fhir.proto.fhir_original_code) = "Watcom-1.0"];</code> */
    WATCOM_1_0(326),
    /** <code>WSUIPA = 327 [(.google.fhir.proto.fhir_original_code) = "Wsuipa"];</code> */
    WSUIPA(327),
    /** <code>WTFPL = 328 [(.google.fhir.proto.fhir_original_code) = "WTFPL"];</code> */
    WTFPL(328),
    /** <code>X11 = 329 [(.google.fhir.proto.fhir_original_code) = "X11"];</code> */
    X11(329),
    /** <code>XEROX = 330 [(.google.fhir.proto.fhir_original_code) = "Xerox"];</code> */
    XEROX(330),
    /**
     * <code>X_FREE86_1_1 = 331 [(.google.fhir.proto.fhir_original_code) = "XFree86-1.1"];</code>
     */
    X_FREE86_1_1(331),
    /** <code>XINETD = 332;</code> */
    XINETD(332),
    /** <code>XNET = 333 [(.google.fhir.proto.fhir_original_code) = "Xnet"];</code> */
    XNET(333),
    /** <code>XPP = 334;</code> */
    XPP(334),
    /** <code>X_SKAT = 335 [(.google.fhir.proto.fhir_original_code) = "XSkat"];</code> */
    X_SKAT(335),
    /** <code>YPL_1_0 = 336 [(.google.fhir.proto.fhir_original_code) = "YPL-1.0"];</code> */
    YPL_1_0(336),
    /** <code>YPL_1_1 = 337 [(.google.fhir.proto.fhir_original_code) = "YPL-1.1"];</code> */
    YPL_1_1(337),
    /** <code>ZED = 338 [(.google.fhir.proto.fhir_original_code) = "Zed"];</code> */
    ZED(338),
    /** <code>ZEND_2_0 = 339 [(.google.fhir.proto.fhir_original_code) = "Zend-2.0"];</code> */
    ZEND_2_0(339),
    /** <code>ZIMBRA_1_3 = 340 [(.google.fhir.proto.fhir_original_code) = "Zimbra-1.3"];</code> */
    ZIMBRA_1_3(340),
    /** <code>ZIMBRA_1_4 = 341 [(.google.fhir.proto.fhir_original_code) = "Zimbra-1.4"];</code> */
    ZIMBRA_1_4(341),
    /** <code>ZLIB_ACKNOWLEDGEMENT = 342;</code> */
    ZLIB_ACKNOWLEDGEMENT(342),
    /** <code>ZLIB = 343 [(.google.fhir.proto.fhir_original_code) = "Zlib"];</code> */
    ZLIB(343),
    /** <code>ZPL_1_1 = 344 [(.google.fhir.proto.fhir_original_code) = "ZPL-1.1"];</code> */
    ZPL_1_1(344),
    /** <code>ZPL_2_0 = 345 [(.google.fhir.proto.fhir_original_code) = "ZPL-2.0"];</code> */
    ZPL_2_0(345),
    /** <code>ZPL_2_1 = 346 [(.google.fhir.proto.fhir_original_code) = "ZPL-2.1"];</code> */
    ZPL_2_1(346),
    UNRECOGNIZED(-1),
    ;

    /** <code>INVALID_UNINITIALIZED = 0;</code> */
    public static final int INVALID_UNINITIALIZED_VALUE = 0;
    /** <code>NOT_OPEN_SOURCE = 1;</code> */
    public static final int NOT_OPEN_SOURCE_VALUE = 1;
    /**
     * <code>BSD_ZERO_CLAUSE_LICENSE = 2 [(.google.fhir.proto.fhir_original_code) = "0BSD"];</code>
     */
    public static final int BSD_ZERO_CLAUSE_LICENSE_VALUE = 2;
    /** <code>AAL = 3 [(.google.fhir.proto.fhir_original_code) = "AAL"];</code> */
    public static final int AAL_VALUE = 3;
    /** <code>ABSTYLES = 4 [(.google.fhir.proto.fhir_original_code) = "Abstyles"];</code> */
    public static final int ABSTYLES_VALUE = 4;
    /** <code>ADOBE_2006 = 5 [(.google.fhir.proto.fhir_original_code) = "Adobe-2006"];</code> */
    public static final int ADOBE_2006_VALUE = 5;
    /** <code>ADOBE_GLYPH = 6 [(.google.fhir.proto.fhir_original_code) = "Adobe-Glyph"];</code> */
    public static final int ADOBE_GLYPH_VALUE = 6;
    /** <code>ADSL = 7 [(.google.fhir.proto.fhir_original_code) = "ADSL"];</code> */
    public static final int ADSL_VALUE = 7;
    /** <code>AFL_1_1 = 8 [(.google.fhir.proto.fhir_original_code) = "AFL-1.1"];</code> */
    public static final int AFL_1_1_VALUE = 8;
    /** <code>AFL_1_2 = 9 [(.google.fhir.proto.fhir_original_code) = "AFL-1.2"];</code> */
    public static final int AFL_1_2_VALUE = 9;
    /** <code>AFL_2_0 = 10 [(.google.fhir.proto.fhir_original_code) = "AFL-2.0"];</code> */
    public static final int AFL_2_0_VALUE = 10;
    /** <code>AFL_2_1 = 11 [(.google.fhir.proto.fhir_original_code) = "AFL-2.1"];</code> */
    public static final int AFL_2_1_VALUE = 11;
    /** <code>AFL_3_0 = 12 [(.google.fhir.proto.fhir_original_code) = "AFL-3.0"];</code> */
    public static final int AFL_3_0_VALUE = 12;
    /** <code>AFMPARSE = 13 [(.google.fhir.proto.fhir_original_code) = "Afmparse"];</code> */
    public static final int AFMPARSE_VALUE = 13;
    /**
     * <code>AGPL_1_0_ONLY = 14 [(.google.fhir.proto.fhir_original_code) = "AGPL-1.0-only"];</code>
     */
    public static final int AGPL_1_0_ONLY_VALUE = 14;
    /**
     * <code>AGPL_1_0_OR_LATER = 15 [(.google.fhir.proto.fhir_original_code) = "AGPL-1.0-or-later"];
     * </code>
     */
    public static final int AGPL_1_0_OR_LATER_VALUE = 15;
    /**
     * <code>AGPL_3_0_ONLY = 16 [(.google.fhir.proto.fhir_original_code) = "AGPL-3.0-only"];</code>
     */
    public static final int AGPL_3_0_ONLY_VALUE = 16;
    /**
     * <code>AGPL_3_0_OR_LATER = 17 [(.google.fhir.proto.fhir_original_code) = "AGPL-3.0-or-later"];
     * </code>
     */
    public static final int AGPL_3_0_OR_LATER_VALUE = 17;
    /** <code>ALADDIN = 18 [(.google.fhir.proto.fhir_original_code) = "Aladdin"];</code> */
    public static final int ALADDIN_VALUE = 18;
    /** <code>AMDPLPA = 19 [(.google.fhir.proto.fhir_original_code) = "AMDPLPA"];</code> */
    public static final int AMDPLPA_VALUE = 19;
    /** <code>AML = 20 [(.google.fhir.proto.fhir_original_code) = "AML"];</code> */
    public static final int AML_VALUE = 20;
    /** <code>AMPAS = 21 [(.google.fhir.proto.fhir_original_code) = "AMPAS"];</code> */
    public static final int AMPAS_VALUE = 21;
    /** <code>ANTLR_PD = 22 [(.google.fhir.proto.fhir_original_code) = "ANTLR-PD"];</code> */
    public static final int ANTLR_PD_VALUE = 22;
    /** <code>APACHE_1_0 = 23 [(.google.fhir.proto.fhir_original_code) = "Apache-1.0"];</code> */
    public static final int APACHE_1_0_VALUE = 23;
    /** <code>APACHE_1_1 = 24 [(.google.fhir.proto.fhir_original_code) = "Apache-1.1"];</code> */
    public static final int APACHE_1_1_VALUE = 24;
    /** <code>APACHE_2_0 = 25 [(.google.fhir.proto.fhir_original_code) = "Apache-2.0"];</code> */
    public static final int APACHE_2_0_VALUE = 25;
    /** <code>APAFML = 26 [(.google.fhir.proto.fhir_original_code) = "APAFML"];</code> */
    public static final int APAFML_VALUE = 26;
    /** <code>APL_1_0 = 27 [(.google.fhir.proto.fhir_original_code) = "APL-1.0"];</code> */
    public static final int APL_1_0_VALUE = 27;
    /** <code>APSL_1_0 = 28 [(.google.fhir.proto.fhir_original_code) = "APSL-1.0"];</code> */
    public static final int APSL_1_0_VALUE = 28;
    /** <code>APSL_1_1 = 29 [(.google.fhir.proto.fhir_original_code) = "APSL-1.1"];</code> */
    public static final int APSL_1_1_VALUE = 29;
    /** <code>APSL_1_2 = 30 [(.google.fhir.proto.fhir_original_code) = "APSL-1.2"];</code> */
    public static final int APSL_1_2_VALUE = 30;
    /** <code>APSL_2_0 = 31 [(.google.fhir.proto.fhir_original_code) = "APSL-2.0"];</code> */
    public static final int APSL_2_0_VALUE = 31;
    /**
     * <code>ARTISTIC_1_0_CL8 = 32 [(.google.fhir.proto.fhir_original_code) = "Artistic-1.0-cl8"];
     * </code>
     */
    public static final int ARTISTIC_1_0_CL8_VALUE = 32;
    /**
     * <code>ARTISTIC_1_0_PERL = 33 [(.google.fhir.proto.fhir_original_code) = "Artistic-1.0-Perl"];
     * </code>
     */
    public static final int ARTISTIC_1_0_PERL_VALUE = 33;
    /**
     * <code>ARTISTIC_1_0 = 34 [(.google.fhir.proto.fhir_original_code) = "Artistic-1.0"];</code>
     */
    public static final int ARTISTIC_1_0_VALUE = 34;
    /**
     * <code>ARTISTIC_2_0 = 35 [(.google.fhir.proto.fhir_original_code) = "Artistic-2.0"];</code>
     */
    public static final int ARTISTIC_2_0_VALUE = 35;
    /** <code>BAHYPH = 36 [(.google.fhir.proto.fhir_original_code) = "Bahyph"];</code> */
    public static final int BAHYPH_VALUE = 36;
    /** <code>BARR = 37 [(.google.fhir.proto.fhir_original_code) = "Barr"];</code> */
    public static final int BARR_VALUE = 37;
    /** <code>BEERWARE = 38 [(.google.fhir.proto.fhir_original_code) = "Beerware"];</code> */
    public static final int BEERWARE_VALUE = 38;
    /**
     * <code>BIT_TORRENT_1_0 = 39 [(.google.fhir.proto.fhir_original_code) = "BitTorrent-1.0"];
     * </code>
     */
    public static final int BIT_TORRENT_1_0_VALUE = 39;
    /**
     * <code>BIT_TORRENT_1_1 = 40 [(.google.fhir.proto.fhir_original_code) = "BitTorrent-1.1"];
     * </code>
     */
    public static final int BIT_TORRENT_1_1_VALUE = 40;
    /** <code>BORCEUX = 41 [(.google.fhir.proto.fhir_original_code) = "Borceux"];</code> */
    public static final int BORCEUX_VALUE = 41;
    /**
     * <code>BSD_1_CLAUSE = 42 [(.google.fhir.proto.fhir_original_code) = "BSD-1-Clause"];</code>
     */
    public static final int BSD_1_CLAUSE_VALUE = 42;
    /**
     * <code>
     * BSD_2_CLAUSE_FREE_BSD = 43 [(.google.fhir.proto.fhir_original_code) = "BSD-2-Clause-FreeBSD"];
     * </code>
     */
    public static final int BSD_2_CLAUSE_FREE_BSD_VALUE = 43;
    /**
     * <code>
     * BSD_2_CLAUSE_NET_BSD = 44 [(.google.fhir.proto.fhir_original_code) = "BSD-2-Clause-NetBSD"];
     * </code>
     */
    public static final int BSD_2_CLAUSE_NET_BSD_VALUE = 44;
    /**
     * <code>
     * BSD_2_CLAUSE_PATENT = 45 [(.google.fhir.proto.fhir_original_code) = "BSD-2-Clause-Patent"];
     * </code>
     */
    public static final int BSD_2_CLAUSE_PATENT_VALUE = 45;
    /**
     * <code>BSD_2_CLAUSE = 46 [(.google.fhir.proto.fhir_original_code) = "BSD-2-Clause"];</code>
     */
    public static final int BSD_2_CLAUSE_VALUE = 46;
    /**
     * <code>
     * BSD_3_CLAUSE_ATTRIBUTION = 47 [(.google.fhir.proto.fhir_original_code) = "BSD-3-Clause-Attribution"];
     * </code>
     */
    public static final int BSD_3_CLAUSE_ATTRIBUTION_VALUE = 47;
    /**
     * <code>
     * BSD_3_CLAUSE_CLEAR = 48 [(.google.fhir.proto.fhir_original_code) = "BSD-3-Clause-Clear"];
     * </code>
     */
    public static final int BSD_3_CLAUSE_CLEAR_VALUE = 48;
    /**
     * <code>BSD_3_CLAUSE_LBNL = 49 [(.google.fhir.proto.fhir_original_code) = "BSD-3-Clause-LBNL"];
     * </code>
     */
    public static final int BSD_3_CLAUSE_LBNL_VALUE = 49;
    /**
     * <code>
     * BSD_3_CLAUSE_NO_NUCLEAR_LICENSE_2014 = 50 [(.google.fhir.proto.fhir_original_code) = "BSD-3-Clause-No-Nuclear-License-2014"];
     * </code>
     */
    public static final int BSD_3_CLAUSE_NO_NUCLEAR_LICENSE_2014_VALUE = 50;
    /**
     * <code>
     * BSD_3_CLAUSE_NO_NUCLEAR_LICENSE = 51 [(.google.fhir.proto.fhir_original_code) = "BSD-3-Clause-No-Nuclear-License"];
     * </code>
     */
    public static final int BSD_3_CLAUSE_NO_NUCLEAR_LICENSE_VALUE = 51;
    /**
     * <code>
     * BSD_3_CLAUSE_NO_NUCLEAR_WARRANTY = 52 [(.google.fhir.proto.fhir_original_code) = "BSD-3-Clause-No-Nuclear-Warranty"];
     * </code>
     */
    public static final int BSD_3_CLAUSE_NO_NUCLEAR_WARRANTY_VALUE = 52;
    /**
     * <code>BSD_3_CLAUSE = 53 [(.google.fhir.proto.fhir_original_code) = "BSD-3-Clause"];</code>
     */
    public static final int BSD_3_CLAUSE_VALUE = 53;
    /**
     * <code>BSD_4_CLAUSE_UC = 54 [(.google.fhir.proto.fhir_original_code) = "BSD-4-Clause-UC"];
     * </code>
     */
    public static final int BSD_4_CLAUSE_UC_VALUE = 54;
    /**
     * <code>BSD_4_CLAUSE = 55 [(.google.fhir.proto.fhir_original_code) = "BSD-4-Clause"];</code>
     */
    public static final int BSD_4_CLAUSE_VALUE = 55;
    /**
     * <code>BSD_PROTECTION = 56 [(.google.fhir.proto.fhir_original_code) = "BSD-Protection"];
     * </code>
     */
    public static final int BSD_PROTECTION_VALUE = 56;
    /**
     * <code>BSD_SOURCE_CODE = 57 [(.google.fhir.proto.fhir_original_code) = "BSD-Source-Code"];
     * </code>
     */
    public static final int BSD_SOURCE_CODE_VALUE = 57;
    /** <code>BSL_1_0 = 58 [(.google.fhir.proto.fhir_original_code) = "BSL-1.0"];</code> */
    public static final int BSL_1_0_VALUE = 58;
    /** <code>BZIP2_1_0_5 = 59 [(.google.fhir.proto.fhir_original_code) = "bzip2-1.0.5"];</code> */
    public static final int BZIP2_1_0_5_VALUE = 59;
    /** <code>BZIP2_1_0_6 = 60 [(.google.fhir.proto.fhir_original_code) = "bzip2-1.0.6"];</code> */
    public static final int BZIP2_1_0_6_VALUE = 60;
    /** <code>CALDERA = 61 [(.google.fhir.proto.fhir_original_code) = "Caldera"];</code> */
    public static final int CALDERA_VALUE = 61;
    /** <code>CATOSL_1_1 = 62 [(.google.fhir.proto.fhir_original_code) = "CATOSL-1.1"];</code> */
    public static final int CATOSL_1_1_VALUE = 62;
    /** <code>CC_BY_1_0 = 63 [(.google.fhir.proto.fhir_original_code) = "CC-BY-1.0"];</code> */
    public static final int CC_BY_1_0_VALUE = 63;
    /** <code>CC_BY_2_0 = 64 [(.google.fhir.proto.fhir_original_code) = "CC-BY-2.0"];</code> */
    public static final int CC_BY_2_0_VALUE = 64;
    /** <code>CC_BY_2_5 = 65 [(.google.fhir.proto.fhir_original_code) = "CC-BY-2.5"];</code> */
    public static final int CC_BY_2_5_VALUE = 65;
    /** <code>CC_BY_3_0 = 66 [(.google.fhir.proto.fhir_original_code) = "CC-BY-3.0"];</code> */
    public static final int CC_BY_3_0_VALUE = 66;
    /** <code>CC_BY_4_0 = 67 [(.google.fhir.proto.fhir_original_code) = "CC-BY-4.0"];</code> */
    public static final int CC_BY_4_0_VALUE = 67;
    /**
     * <code>CC_BY_NC_1_0 = 68 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-1.0"];</code>
     */
    public static final int CC_BY_NC_1_0_VALUE = 68;
    /**
     * <code>CC_BY_NC_2_0 = 69 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-2.0"];</code>
     */
    public static final int CC_BY_NC_2_0_VALUE = 69;
    /**
     * <code>CC_BY_NC_2_5 = 70 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-2.5"];</code>
     */
    public static final int CC_BY_NC_2_5_VALUE = 70;
    /**
     * <code>CC_BY_NC_3_0 = 71 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-3.0"];</code>
     */
    public static final int CC_BY_NC_3_0_VALUE = 71;
    /**
     * <code>CC_BY_NC_4_0 = 72 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-4.0"];</code>
     */
    public static final int CC_BY_NC_4_0_VALUE = 72;
    /**
     * <code>CC_BY_NC_ND_1_0 = 73 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-ND-1.0"];
     * </code>
     */
    public static final int CC_BY_NC_ND_1_0_VALUE = 73;
    /**
     * <code>CC_BY_NC_ND_2_0 = 74 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-ND-2.0"];
     * </code>
     */
    public static final int CC_BY_NC_ND_2_0_VALUE = 74;
    /**
     * <code>CC_BY_NC_ND_2_5 = 75 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-ND-2.5"];
     * </code>
     */
    public static final int CC_BY_NC_ND_2_5_VALUE = 75;
    /**
     * <code>CC_BY_NC_ND_3_0 = 76 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-ND-3.0"];
     * </code>
     */
    public static final int CC_BY_NC_ND_3_0_VALUE = 76;
    /**
     * <code>CC_BY_NC_ND_4_0 = 77 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-ND-4.0"];
     * </code>
     */
    public static final int CC_BY_NC_ND_4_0_VALUE = 77;
    /**
     * <code>CC_BY_NC_SA_1_0 = 78 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-SA-1.0"];
     * </code>
     */
    public static final int CC_BY_NC_SA_1_0_VALUE = 78;
    /**
     * <code>CC_BY_NC_SA_2_0 = 79 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-SA-2.0"];
     * </code>
     */
    public static final int CC_BY_NC_SA_2_0_VALUE = 79;
    /**
     * <code>CC_BY_NC_SA_2_5 = 80 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-SA-2.5"];
     * </code>
     */
    public static final int CC_BY_NC_SA_2_5_VALUE = 80;
    /**
     * <code>CC_BY_NC_SA_3_0 = 81 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-SA-3.0"];
     * </code>
     */
    public static final int CC_BY_NC_SA_3_0_VALUE = 81;
    /**
     * <code>CC_BY_NC_SA_4_0 = 82 [(.google.fhir.proto.fhir_original_code) = "CC-BY-NC-SA-4.0"];
     * </code>
     */
    public static final int CC_BY_NC_SA_4_0_VALUE = 82;
    /**
     * <code>CC_BY_ND_1_0 = 83 [(.google.fhir.proto.fhir_original_code) = "CC-BY-ND-1.0"];</code>
     */
    public static final int CC_BY_ND_1_0_VALUE = 83;
    /**
     * <code>CC_BY_ND_2_0 = 84 [(.google.fhir.proto.fhir_original_code) = "CC-BY-ND-2.0"];</code>
     */
    public static final int CC_BY_ND_2_0_VALUE = 84;
    /**
     * <code>CC_BY_ND_2_5 = 85 [(.google.fhir.proto.fhir_original_code) = "CC-BY-ND-2.5"];</code>
     */
    public static final int CC_BY_ND_2_5_VALUE = 85;
    /**
     * <code>CC_BY_ND_3_0 = 86 [(.google.fhir.proto.fhir_original_code) = "CC-BY-ND-3.0"];</code>
     */
    public static final int CC_BY_ND_3_0_VALUE = 86;
    /**
     * <code>CC_BY_ND_4_0 = 87 [(.google.fhir.proto.fhir_original_code) = "CC-BY-ND-4.0"];</code>
     */
    public static final int CC_BY_ND_4_0_VALUE = 87;
    /**
     * <code>CC_BY_SA_1_0 = 88 [(.google.fhir.proto.fhir_original_code) = "CC-BY-SA-1.0"];</code>
     */
    public static final int CC_BY_SA_1_0_VALUE = 88;
    /**
     * <code>CC_BY_SA_2_0 = 89 [(.google.fhir.proto.fhir_original_code) = "CC-BY-SA-2.0"];</code>
     */
    public static final int CC_BY_SA_2_0_VALUE = 89;
    /**
     * <code>CC_BY_SA_2_5 = 90 [(.google.fhir.proto.fhir_original_code) = "CC-BY-SA-2.5"];</code>
     */
    public static final int CC_BY_SA_2_5_VALUE = 90;
    /**
     * <code>CC_BY_SA_3_0 = 91 [(.google.fhir.proto.fhir_original_code) = "CC-BY-SA-3.0"];</code>
     */
    public static final int CC_BY_SA_3_0_VALUE = 91;
    /**
     * <code>CC_BY_SA_4_0 = 92 [(.google.fhir.proto.fhir_original_code) = "CC-BY-SA-4.0"];</code>
     */
    public static final int CC_BY_SA_4_0_VALUE = 92;
    /** <code>CC0_1_0 = 93 [(.google.fhir.proto.fhir_original_code) = "CC0-1.0"];</code> */
    public static final int CC0_1_0_VALUE = 93;
    /** <code>CDDL_1_0 = 94 [(.google.fhir.proto.fhir_original_code) = "CDDL-1.0"];</code> */
    public static final int CDDL_1_0_VALUE = 94;
    /** <code>CDDL_1_1 = 95 [(.google.fhir.proto.fhir_original_code) = "CDDL-1.1"];</code> */
    public static final int CDDL_1_1_VALUE = 95;
    /**
     * <code>
     * CDLA_PERMISSIVE_1_0 = 96 [(.google.fhir.proto.fhir_original_code) = "CDLA-Permissive-1.0"];
     * </code>
     */
    public static final int CDLA_PERMISSIVE_1_0_VALUE = 96;
    /**
     * <code>CDLA_SHARING_1_0 = 97 [(.google.fhir.proto.fhir_original_code) = "CDLA-Sharing-1.0"];
     * </code>
     */
    public static final int CDLA_SHARING_1_0_VALUE = 97;
    /** <code>CECILL_1_0 = 98 [(.google.fhir.proto.fhir_original_code) = "CECILL-1.0"];</code> */
    public static final int CECILL_1_0_VALUE = 98;
    /** <code>CECILL_1_1 = 99 [(.google.fhir.proto.fhir_original_code) = "CECILL-1.1"];</code> */
    public static final int CECILL_1_1_VALUE = 99;
    /** <code>CECILL_2_0 = 100 [(.google.fhir.proto.fhir_original_code) = "CECILL-2.0"];</code> */
    public static final int CECILL_2_0_VALUE = 100;
    /** <code>CECILL_2_1 = 101 [(.google.fhir.proto.fhir_original_code) = "CECILL-2.1"];</code> */
    public static final int CECILL_2_1_VALUE = 101;
    /** <code>CECILL_B = 102 [(.google.fhir.proto.fhir_original_code) = "CECILL-B"];</code> */
    public static final int CECILL_B_VALUE = 102;
    /** <code>CECILL_C = 103 [(.google.fhir.proto.fhir_original_code) = "CECILL-C"];</code> */
    public static final int CECILL_C_VALUE = 103;
    /** <code>CL_ARTISTIC = 104 [(.google.fhir.proto.fhir_original_code) = "ClArtistic"];</code> */
    public static final int CL_ARTISTIC_VALUE = 104;
    /** <code>CNRI_JYTHON = 105 [(.google.fhir.proto.fhir_original_code) = "CNRI-Jython"];</code> */
    public static final int CNRI_JYTHON_VALUE = 105;
    /**
     * <code>
     * CNRI_PYTHON_GPL_COMPATIBLE = 106 [(.google.fhir.proto.fhir_original_code) = "CNRI-Python-GPL-Compatible"];
     * </code>
     */
    public static final int CNRI_PYTHON_GPL_COMPATIBLE_VALUE = 106;
    /** <code>CNRI_PYTHON = 107 [(.google.fhir.proto.fhir_original_code) = "CNRI-Python"];</code> */
    public static final int CNRI_PYTHON_VALUE = 107;
    /** <code>CONDOR_1_1 = 108 [(.google.fhir.proto.fhir_original_code) = "Condor-1.1"];</code> */
    public static final int CONDOR_1_1_VALUE = 108;
    /** <code>CPAL_1_0 = 109 [(.google.fhir.proto.fhir_original_code) = "CPAL-1.0"];</code> */
    public static final int CPAL_1_0_VALUE = 109;
    /** <code>CPL_1_0 = 110 [(.google.fhir.proto.fhir_original_code) = "CPL-1.0"];</code> */
    public static final int CPL_1_0_VALUE = 110;
    /** <code>CPOL_1_02 = 111 [(.google.fhir.proto.fhir_original_code) = "CPOL-1.02"];</code> */
    public static final int CPOL_1_02_VALUE = 111;
    /** <code>CROSSWORD = 112 [(.google.fhir.proto.fhir_original_code) = "Crossword"];</code> */
    public static final int CROSSWORD_VALUE = 112;
    /**
     * <code>CRYSTAL_STACKER = 113 [(.google.fhir.proto.fhir_original_code) = "CrystalStacker"];
     * </code>
     */
    public static final int CRYSTAL_STACKER_VALUE = 113;
    /** <code>CUA_OPL_1_0 = 114 [(.google.fhir.proto.fhir_original_code) = "CUA-OPL-1.0"];</code> */
    public static final int CUA_OPL_1_0_VALUE = 114;
    /** <code>CUBE = 115 [(.google.fhir.proto.fhir_original_code) = "Cube"];</code> */
    public static final int CUBE_VALUE = 115;
    /** <code>CURL = 116;</code> */
    public static final int CURL_VALUE = 116;
    /** <code>D_FSL_1_0 = 117 [(.google.fhir.proto.fhir_original_code) = "D-FSL-1.0"];</code> */
    public static final int D_FSL_1_0_VALUE = 117;
    /** <code>DIFFMARK = 118;</code> */
    public static final int DIFFMARK_VALUE = 118;
    /** <code>DOC = 119 [(.google.fhir.proto.fhir_original_code) = "DOC"];</code> */
    public static final int DOC_VALUE = 119;
    /** <code>DOTSEQN = 120 [(.google.fhir.proto.fhir_original_code) = "Dotseqn"];</code> */
    public static final int DOTSEQN_VALUE = 120;
    /** <code>DSDP = 121 [(.google.fhir.proto.fhir_original_code) = "DSDP"];</code> */
    public static final int DSDP_VALUE = 121;
    /** <code>DVIPDFM = 122;</code> */
    public static final int DVIPDFM_VALUE = 122;
    /** <code>ECL_1_0 = 123 [(.google.fhir.proto.fhir_original_code) = "ECL-1.0"];</code> */
    public static final int ECL_1_0_VALUE = 123;
    /** <code>ECL_2_0 = 124 [(.google.fhir.proto.fhir_original_code) = "ECL-2.0"];</code> */
    public static final int ECL_2_0_VALUE = 124;
    /** <code>EFL_1_0 = 125 [(.google.fhir.proto.fhir_original_code) = "EFL-1.0"];</code> */
    public static final int EFL_1_0_VALUE = 125;
    /** <code>EFL_2_0 = 126 [(.google.fhir.proto.fhir_original_code) = "EFL-2.0"];</code> */
    public static final int EFL_2_0_VALUE = 126;
    /** <code>E_GENIX = 127 [(.google.fhir.proto.fhir_original_code) = "eGenix"];</code> */
    public static final int E_GENIX_VALUE = 127;
    /** <code>ENTESSA = 128 [(.google.fhir.proto.fhir_original_code) = "Entessa"];</code> */
    public static final int ENTESSA_VALUE = 128;
    /** <code>EPL_1_0 = 129 [(.google.fhir.proto.fhir_original_code) = "EPL-1.0"];</code> */
    public static final int EPL_1_0_VALUE = 129;
    /** <code>EPL_2_0 = 130 [(.google.fhir.proto.fhir_original_code) = "EPL-2.0"];</code> */
    public static final int EPL_2_0_VALUE = 130;
    /** <code>ERL_PL_1_1 = 131 [(.google.fhir.proto.fhir_original_code) = "ErlPL-1.1"];</code> */
    public static final int ERL_PL_1_1_VALUE = 131;
    /** <code>EU_DATAGRID = 132 [(.google.fhir.proto.fhir_original_code) = "EUDatagrid"];</code> */
    public static final int EU_DATAGRID_VALUE = 132;
    /** <code>EUPL_1_0 = 133 [(.google.fhir.proto.fhir_original_code) = "EUPL-1.0"];</code> */
    public static final int EUPL_1_0_VALUE = 133;
    /** <code>EUPL_1_1 = 134 [(.google.fhir.proto.fhir_original_code) = "EUPL-1.1"];</code> */
    public static final int EUPL_1_1_VALUE = 134;
    /** <code>EUPL_1_2 = 135 [(.google.fhir.proto.fhir_original_code) = "EUPL-1.2"];</code> */
    public static final int EUPL_1_2_VALUE = 135;
    /** <code>EUROSYM = 136 [(.google.fhir.proto.fhir_original_code) = "Eurosym"];</code> */
    public static final int EUROSYM_VALUE = 136;
    /** <code>FAIR = 137 [(.google.fhir.proto.fhir_original_code) = "Fair"];</code> */
    public static final int FAIR_VALUE = 137;
    /**
     * <code>FRAMEWORX_1_0 = 138 [(.google.fhir.proto.fhir_original_code) = "Frameworx-1.0"];</code>
     */
    public static final int FRAMEWORX_1_0_VALUE = 138;
    /** <code>FREE_IMAGE = 139 [(.google.fhir.proto.fhir_original_code) = "FreeImage"];</code> */
    public static final int FREE_IMAGE_VALUE = 139;
    /** <code>FSFAP = 140 [(.google.fhir.proto.fhir_original_code) = "FSFAP"];</code> */
    public static final int FSFAP_VALUE = 140;
    /** <code>FSFUL = 141 [(.google.fhir.proto.fhir_original_code) = "FSFUL"];</code> */
    public static final int FSFUL_VALUE = 141;
    /** <code>FSFULLR = 142 [(.google.fhir.proto.fhir_original_code) = "FSFULLR"];</code> */
    public static final int FSFULLR_VALUE = 142;
    /** <code>FTL = 143 [(.google.fhir.proto.fhir_original_code) = "FTL"];</code> */
    public static final int FTL_VALUE = 143;
    /**
     * <code>GFDL_1_1_ONLY = 144 [(.google.fhir.proto.fhir_original_code) = "GFDL-1.1-only"];</code>
     */
    public static final int GFDL_1_1_ONLY_VALUE = 144;
    /**
     * <code>
     * GFDL_1_1_OR_LATER = 145 [(.google.fhir.proto.fhir_original_code) = "GFDL-1.1-or-later"];
     * </code>
     */
    public static final int GFDL_1_1_OR_LATER_VALUE = 145;
    /**
     * <code>GFDL_1_2_ONLY = 146 [(.google.fhir.proto.fhir_original_code) = "GFDL-1.2-only"];</code>
     */
    public static final int GFDL_1_2_ONLY_VALUE = 146;
    /**
     * <code>
     * GFDL_1_2_OR_LATER = 147 [(.google.fhir.proto.fhir_original_code) = "GFDL-1.2-or-later"];
     * </code>
     */
    public static final int GFDL_1_2_OR_LATER_VALUE = 147;
    /**
     * <code>GFDL_1_3_ONLY = 148 [(.google.fhir.proto.fhir_original_code) = "GFDL-1.3-only"];</code>
     */
    public static final int GFDL_1_3_ONLY_VALUE = 148;
    /**
     * <code>
     * GFDL_1_3_OR_LATER = 149 [(.google.fhir.proto.fhir_original_code) = "GFDL-1.3-or-later"];
     * </code>
     */
    public static final int GFDL_1_3_OR_LATER_VALUE = 149;
    /** <code>GIFTWARE = 150 [(.google.fhir.proto.fhir_original_code) = "Giftware"];</code> */
    public static final int GIFTWARE_VALUE = 150;
    /** <code>GL2PS = 151 [(.google.fhir.proto.fhir_original_code) = "GL2PS"];</code> */
    public static final int GL2PS_VALUE = 151;
    /** <code>GLIDE = 152 [(.google.fhir.proto.fhir_original_code) = "Glide"];</code> */
    public static final int GLIDE_VALUE = 152;
    /** <code>GLULXE = 153 [(.google.fhir.proto.fhir_original_code) = "Glulxe"];</code> */
    public static final int GLULXE_VALUE = 153;
    /** <code>GNUPLOT = 154;</code> */
    public static final int GNUPLOT_VALUE = 154;
    /**
     * <code>GPL_1_0_ONLY = 155 [(.google.fhir.proto.fhir_original_code) = "GPL-1.0-only"];</code>
     */
    public static final int GPL_1_0_ONLY_VALUE = 155;
    /**
     * <code>GPL_1_0_OR_LATER = 156 [(.google.fhir.proto.fhir_original_code) = "GPL-1.0-or-later"];
     * </code>
     */
    public static final int GPL_1_0_OR_LATER_VALUE = 156;
    /**
     * <code>GPL_2_0_ONLY = 157 [(.google.fhir.proto.fhir_original_code) = "GPL-2.0-only"];</code>
     */
    public static final int GPL_2_0_ONLY_VALUE = 157;
    /**
     * <code>GPL_2_0_OR_LATER = 158 [(.google.fhir.proto.fhir_original_code) = "GPL-2.0-or-later"];
     * </code>
     */
    public static final int GPL_2_0_OR_LATER_VALUE = 158;
    /**
     * <code>GPL_3_0_ONLY = 159 [(.google.fhir.proto.fhir_original_code) = "GPL-3.0-only"];</code>
     */
    public static final int GPL_3_0_ONLY_VALUE = 159;
    /**
     * <code>GPL_3_0_OR_LATER = 160 [(.google.fhir.proto.fhir_original_code) = "GPL-3.0-or-later"];
     * </code>
     */
    public static final int GPL_3_0_OR_LATER_VALUE = 160;
    /** <code>G_SOAP_1_3B = 161 [(.google.fhir.proto.fhir_original_code) = "gSOAP-1.3b"];</code> */
    public static final int G_SOAP_1_3B_VALUE = 161;
    /**
     * <code>HASKELL_REPORT = 162 [(.google.fhir.proto.fhir_original_code) = "HaskellReport"];
     * </code>
     */
    public static final int HASKELL_REPORT_VALUE = 162;
    /** <code>HPND = 163 [(.google.fhir.proto.fhir_original_code) = "HPND"];</code> */
    public static final int HPND_VALUE = 163;
    /** <code>IBM_PIBS = 164 [(.google.fhir.proto.fhir_original_code) = "IBM-pibs"];</code> */
    public static final int IBM_PIBS_VALUE = 164;
    /** <code>ICU = 165 [(.google.fhir.proto.fhir_original_code) = "ICU"];</code> */
    public static final int ICU_VALUE = 165;
    /** <code>IJG = 166 [(.google.fhir.proto.fhir_original_code) = "IJG"];</code> */
    public static final int IJG_VALUE = 166;
    /**
     * <code>IMAGE_MAGICK = 167 [(.google.fhir.proto.fhir_original_code) = "ImageMagick"];</code>
     */
    public static final int IMAGE_MAGICK_VALUE = 167;
    /** <code>I_MATIX = 168 [(.google.fhir.proto.fhir_original_code) = "iMatix"];</code> */
    public static final int I_MATIX_VALUE = 168;
    /** <code>IMLIB2 = 169 [(.google.fhir.proto.fhir_original_code) = "Imlib2"];</code> */
    public static final int IMLIB2_VALUE = 169;
    /** <code>INFO_ZIP = 170 [(.google.fhir.proto.fhir_original_code) = "Info-ZIP"];</code> */
    public static final int INFO_ZIP_VALUE = 170;
    /** <code>INTEL_ACPI = 171 [(.google.fhir.proto.fhir_original_code) = "Intel-ACPI"];</code> */
    public static final int INTEL_ACPI_VALUE = 171;
    /** <code>INTEL = 172 [(.google.fhir.proto.fhir_original_code) = "Intel"];</code> */
    public static final int INTEL_VALUE = 172;
    /**
     * <code>INTERBASE_1_0 = 173 [(.google.fhir.proto.fhir_original_code) = "Interbase-1.0"];</code>
     */
    public static final int INTERBASE_1_0_VALUE = 173;
    /** <code>IPA = 174 [(.google.fhir.proto.fhir_original_code) = "IPA"];</code> */
    public static final int IPA_VALUE = 174;
    /** <code>IPL_1_0 = 175 [(.google.fhir.proto.fhir_original_code) = "IPL-1.0"];</code> */
    public static final int IPL_1_0_VALUE = 175;
    /** <code>ISC = 176 [(.google.fhir.proto.fhir_original_code) = "ISC"];</code> */
    public static final int ISC_VALUE = 176;
    /** <code>JAS_PER_2_0 = 177 [(.google.fhir.proto.fhir_original_code) = "JasPer-2.0"];</code> */
    public static final int JAS_PER_2_0_VALUE = 177;
    /** <code>JSON = 178 [(.google.fhir.proto.fhir_original_code) = "JSON"];</code> */
    public static final int JSON_VALUE = 178;
    /** <code>LAL_1_2 = 179 [(.google.fhir.proto.fhir_original_code) = "LAL-1.2"];</code> */
    public static final int LAL_1_2_VALUE = 179;
    /** <code>LAL_1_3 = 180 [(.google.fhir.proto.fhir_original_code) = "LAL-1.3"];</code> */
    public static final int LAL_1_3_VALUE = 180;
    /** <code>LATEX2E = 181 [(.google.fhir.proto.fhir_original_code) = "Latex2e"];</code> */
    public static final int LATEX2E_VALUE = 181;
    /** <code>LEPTONICA = 182 [(.google.fhir.proto.fhir_original_code) = "Leptonica"];</code> */
    public static final int LEPTONICA_VALUE = 182;
    /**
     * <code>LGPL_2_0_ONLY = 183 [(.google.fhir.proto.fhir_original_code) = "LGPL-2.0-only"];</code>
     */
    public static final int LGPL_2_0_ONLY_VALUE = 183;
    /**
     * <code>
     * LGPL_2_0_OR_LATER = 184 [(.google.fhir.proto.fhir_original_code) = "LGPL-2.0-or-later"];
     * </code>
     */
    public static final int LGPL_2_0_OR_LATER_VALUE = 184;
    /**
     * <code>LGPL_2_1_ONLY = 185 [(.google.fhir.proto.fhir_original_code) = "LGPL-2.1-only"];</code>
     */
    public static final int LGPL_2_1_ONLY_VALUE = 185;
    /**
     * <code>
     * LGPL_2_1_OR_LATER = 186 [(.google.fhir.proto.fhir_original_code) = "LGPL-2.1-or-later"];
     * </code>
     */
    public static final int LGPL_2_1_OR_LATER_VALUE = 186;
    /**
     * <code>LGPL_3_0_ONLY = 187 [(.google.fhir.proto.fhir_original_code) = "LGPL-3.0-only"];</code>
     */
    public static final int LGPL_3_0_ONLY_VALUE = 187;
    /**
     * <code>
     * LGPL_3_0_OR_LATER = 188 [(.google.fhir.proto.fhir_original_code) = "LGPL-3.0-or-later"];
     * </code>
     */
    public static final int LGPL_3_0_OR_LATER_VALUE = 188;
    /** <code>LGPLLR = 189 [(.google.fhir.proto.fhir_original_code) = "LGPLLR"];</code> */
    public static final int LGPLLR_VALUE = 189;
    /** <code>LIBPNG = 190 [(.google.fhir.proto.fhir_original_code) = "Libpng"];</code> */
    public static final int LIBPNG_VALUE = 190;
    /** <code>LIBTIFF = 191;</code> */
    public static final int LIBTIFF_VALUE = 191;
    /**
     * <code>LI_LI_Q_P_1_1 = 192 [(.google.fhir.proto.fhir_original_code) = "LiLiQ-P-1.1"];</code>
     */
    public static final int LI_LI_Q_P_1_1_VALUE = 192;
    /**
     * <code>LI_LI_Q_R_1_1 = 193 [(.google.fhir.proto.fhir_original_code) = "LiLiQ-R-1.1"];</code>
     */
    public static final int LI_LI_Q_R_1_1_VALUE = 193;
    /**
     * <code>LI_LI_Q_RPLUS_1_1 = 194 [(.google.fhir.proto.fhir_original_code) = "LiLiQ-Rplus-1.1"];
     * </code>
     */
    public static final int LI_LI_Q_RPLUS_1_1_VALUE = 194;
    /**
     * <code>LINUX_OPEN_IB = 195 [(.google.fhir.proto.fhir_original_code) = "Linux-OpenIB"];</code>
     */
    public static final int LINUX_OPEN_IB_VALUE = 195;
    /** <code>LPL_1_0 = 196 [(.google.fhir.proto.fhir_original_code) = "LPL-1.0"];</code> */
    public static final int LPL_1_0_VALUE = 196;
    /** <code>LPL_1_02 = 197 [(.google.fhir.proto.fhir_original_code) = "LPL-1.02"];</code> */
    public static final int LPL_1_02_VALUE = 197;
    /** <code>LPPL_1_0 = 198 [(.google.fhir.proto.fhir_original_code) = "LPPL-1.0"];</code> */
    public static final int LPPL_1_0_VALUE = 198;
    /** <code>LPPL_1_1 = 199 [(.google.fhir.proto.fhir_original_code) = "LPPL-1.1"];</code> */
    public static final int LPPL_1_1_VALUE = 199;
    /** <code>LPPL_1_2 = 200 [(.google.fhir.proto.fhir_original_code) = "LPPL-1.2"];</code> */
    public static final int LPPL_1_2_VALUE = 200;
    /** <code>LPPL_1_3A = 201 [(.google.fhir.proto.fhir_original_code) = "LPPL-1.3a"];</code> */
    public static final int LPPL_1_3A_VALUE = 201;
    /** <code>LPPL_1_3C = 202 [(.google.fhir.proto.fhir_original_code) = "LPPL-1.3c"];</code> */
    public static final int LPPL_1_3C_VALUE = 202;
    /** <code>MAKE_INDEX = 203 [(.google.fhir.proto.fhir_original_code) = "MakeIndex"];</code> */
    public static final int MAKE_INDEX_VALUE = 203;
    /** <code>MIR_OS = 204 [(.google.fhir.proto.fhir_original_code) = "MirOS"];</code> */
    public static final int MIR_OS_VALUE = 204;
    /** <code>MIT_0 = 205 [(.google.fhir.proto.fhir_original_code) = "MIT-0"];</code> */
    public static final int MIT_0_VALUE = 205;
    /**
     * <code>MIT_ADVERTISING = 206 [(.google.fhir.proto.fhir_original_code) = "MIT-advertising"];
     * </code>
     */
    public static final int MIT_ADVERTISING_VALUE = 206;
    /** <code>MIT_CMU = 207 [(.google.fhir.proto.fhir_original_code) = "MIT-CMU"];</code> */
    public static final int MIT_CMU_VALUE = 207;
    /** <code>MIT_ENNA = 208 [(.google.fhir.proto.fhir_original_code) = "MIT-enna"];</code> */
    public static final int MIT_ENNA_VALUE = 208;
    /** <code>MIT_FEH = 209 [(.google.fhir.proto.fhir_original_code) = "MIT-feh"];</code> */
    public static final int MIT_FEH_VALUE = 209;
    /** <code>MIT = 210 [(.google.fhir.proto.fhir_original_code) = "MIT"];</code> */
    public static final int MIT_VALUE = 210;
    /** <code>MITNFA = 211 [(.google.fhir.proto.fhir_original_code) = "MITNFA"];</code> */
    public static final int MITNFA_VALUE = 211;
    /** <code>MOTOSOTO = 212 [(.google.fhir.proto.fhir_original_code) = "Motosoto"];</code> */
    public static final int MOTOSOTO_VALUE = 212;
    /** <code>MPICH2 = 213;</code> */
    public static final int MPICH2_VALUE = 213;
    /** <code>MPL_1_0 = 214 [(.google.fhir.proto.fhir_original_code) = "MPL-1.0"];</code> */
    public static final int MPL_1_0_VALUE = 214;
    /** <code>MPL_1_1 = 215 [(.google.fhir.proto.fhir_original_code) = "MPL-1.1"];</code> */
    public static final int MPL_1_1_VALUE = 215;
    /**
     * <code>
     * MPL_2_0_NO_COPYLEFT_EXCEPTION = 216 [(.google.fhir.proto.fhir_original_code) = "MPL-2.0-no-copyleft-exception"];
     * </code>
     */
    public static final int MPL_2_0_NO_COPYLEFT_EXCEPTION_VALUE = 216;
    /** <code>MPL_2_0 = 217 [(.google.fhir.proto.fhir_original_code) = "MPL-2.0"];</code> */
    public static final int MPL_2_0_VALUE = 217;
    /** <code>MS_PL = 218 [(.google.fhir.proto.fhir_original_code) = "MS-PL"];</code> */
    public static final int MS_PL_VALUE = 218;
    /** <code>MS_RL = 219 [(.google.fhir.proto.fhir_original_code) = "MS-RL"];</code> */
    public static final int MS_RL_VALUE = 219;
    /** <code>MTLL = 220 [(.google.fhir.proto.fhir_original_code) = "MTLL"];</code> */
    public static final int MTLL_VALUE = 220;
    /** <code>MULTICS = 221 [(.google.fhir.proto.fhir_original_code) = "Multics"];</code> */
    public static final int MULTICS_VALUE = 221;
    /** <code>MUP = 222 [(.google.fhir.proto.fhir_original_code) = "Mup"];</code> */
    public static final int MUP_VALUE = 222;
    /** <code>NASA_1_3 = 223 [(.google.fhir.proto.fhir_original_code) = "NASA-1.3"];</code> */
    public static final int NASA_1_3_VALUE = 223;
    /** <code>NAUMEN = 224 [(.google.fhir.proto.fhir_original_code) = "Naumen"];</code> */
    public static final int NAUMEN_VALUE = 224;
    /** <code>NBPL_1_0 = 225 [(.google.fhir.proto.fhir_original_code) = "NBPL-1.0"];</code> */
    public static final int NBPL_1_0_VALUE = 225;
    /** <code>NCSA = 226 [(.google.fhir.proto.fhir_original_code) = "NCSA"];</code> */
    public static final int NCSA_VALUE = 226;
    /** <code>NET_SNMP = 227 [(.google.fhir.proto.fhir_original_code) = "Net-SNMP"];</code> */
    public static final int NET_SNMP_VALUE = 227;
    /** <code>NET_CDF = 228 [(.google.fhir.proto.fhir_original_code) = "NetCDF"];</code> */
    public static final int NET_CDF_VALUE = 228;
    /** <code>NEWSLETR = 229 [(.google.fhir.proto.fhir_original_code) = "Newsletr"];</code> */
    public static final int NEWSLETR_VALUE = 229;
    /** <code>NGPL = 230 [(.google.fhir.proto.fhir_original_code) = "NGPL"];</code> */
    public static final int NGPL_VALUE = 230;
    /** <code>NLOD_1_0 = 231 [(.google.fhir.proto.fhir_original_code) = "NLOD-1.0"];</code> */
    public static final int NLOD_1_0_VALUE = 231;
    /** <code>NLPL = 232 [(.google.fhir.proto.fhir_original_code) = "NLPL"];</code> */
    public static final int NLPL_VALUE = 232;
    /** <code>NOKIA = 233 [(.google.fhir.proto.fhir_original_code) = "Nokia"];</code> */
    public static final int NOKIA_VALUE = 233;
    /** <code>NOSL = 234 [(.google.fhir.proto.fhir_original_code) = "NOSL"];</code> */
    public static final int NOSL_VALUE = 234;
    /** <code>NOWEB = 235 [(.google.fhir.proto.fhir_original_code) = "Noweb"];</code> */
    public static final int NOWEB_VALUE = 235;
    /** <code>NPL_1_0 = 236 [(.google.fhir.proto.fhir_original_code) = "NPL-1.0"];</code> */
    public static final int NPL_1_0_VALUE = 236;
    /** <code>NPL_1_1 = 237 [(.google.fhir.proto.fhir_original_code) = "NPL-1.1"];</code> */
    public static final int NPL_1_1_VALUE = 237;
    /** <code>NPOSL_3_0 = 238 [(.google.fhir.proto.fhir_original_code) = "NPOSL-3.0"];</code> */
    public static final int NPOSL_3_0_VALUE = 238;
    /** <code>NRL = 239 [(.google.fhir.proto.fhir_original_code) = "NRL"];</code> */
    public static final int NRL_VALUE = 239;
    /** <code>NTP = 240 [(.google.fhir.proto.fhir_original_code) = "NTP"];</code> */
    public static final int NTP_VALUE = 240;
    /** <code>OCCT_PL = 241 [(.google.fhir.proto.fhir_original_code) = "OCCT-PL"];</code> */
    public static final int OCCT_PL_VALUE = 241;
    /** <code>OCLC_2_0 = 242 [(.google.fhir.proto.fhir_original_code) = "OCLC-2.0"];</code> */
    public static final int OCLC_2_0_VALUE = 242;
    /** <code>O_DB_L_1_0 = 243 [(.google.fhir.proto.fhir_original_code) = "ODbL-1.0"];</code> */
    public static final int O_DB_L_1_0_VALUE = 243;
    /** <code>OFL_1_0 = 244 [(.google.fhir.proto.fhir_original_code) = "OFL-1.0"];</code> */
    public static final int OFL_1_0_VALUE = 244;
    /** <code>OFL_1_1 = 245 [(.google.fhir.proto.fhir_original_code) = "OFL-1.1"];</code> */
    public static final int OFL_1_1_VALUE = 245;
    /** <code>OGTSL = 246 [(.google.fhir.proto.fhir_original_code) = "OGTSL"];</code> */
    public static final int OGTSL_VALUE = 246;
    /** <code>OLDAP_1_1 = 247 [(.google.fhir.proto.fhir_original_code) = "OLDAP-1.1"];</code> */
    public static final int OLDAP_1_1_VALUE = 247;
    /** <code>OLDAP_1_2 = 248 [(.google.fhir.proto.fhir_original_code) = "OLDAP-1.2"];</code> */
    public static final int OLDAP_1_2_VALUE = 248;
    /** <code>OLDAP_1_3 = 249 [(.google.fhir.proto.fhir_original_code) = "OLDAP-1.3"];</code> */
    public static final int OLDAP_1_3_VALUE = 249;
    /** <code>OLDAP_1_4 = 250 [(.google.fhir.proto.fhir_original_code) = "OLDAP-1.4"];</code> */
    public static final int OLDAP_1_4_VALUE = 250;
    /** <code>OLDAP_2_0_1 = 251 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.0.1"];</code> */
    public static final int OLDAP_2_0_1_VALUE = 251;
    /** <code>OLDAP_2_0 = 252 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.0"];</code> */
    public static final int OLDAP_2_0_VALUE = 252;
    /** <code>OLDAP_2_1 = 253 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.1"];</code> */
    public static final int OLDAP_2_1_VALUE = 253;
    /** <code>OLDAP_2_2_1 = 254 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.2.1"];</code> */
    public static final int OLDAP_2_2_1_VALUE = 254;
    /** <code>OLDAP_2_2_2 = 255 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.2.2"];</code> */
    public static final int OLDAP_2_2_2_VALUE = 255;
    /** <code>OLDAP_2_2 = 256 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.2"];</code> */
    public static final int OLDAP_2_2_VALUE = 256;
    /** <code>OLDAP_2_3 = 257 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.3"];</code> */
    public static final int OLDAP_2_3_VALUE = 257;
    /** <code>OLDAP_2_4 = 258 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.4"];</code> */
    public static final int OLDAP_2_4_VALUE = 258;
    /** <code>OLDAP_2_5 = 259 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.5"];</code> */
    public static final int OLDAP_2_5_VALUE = 259;
    /** <code>OLDAP_2_6 = 260 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.6"];</code> */
    public static final int OLDAP_2_6_VALUE = 260;
    /** <code>OLDAP_2_7 = 261 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.7"];</code> */
    public static final int OLDAP_2_7_VALUE = 261;
    /** <code>OLDAP_2_8 = 262 [(.google.fhir.proto.fhir_original_code) = "OLDAP-2.8"];</code> */
    public static final int OLDAP_2_8_VALUE = 262;
    /** <code>OML = 263 [(.google.fhir.proto.fhir_original_code) = "OML"];</code> */
    public static final int OML_VALUE = 263;
    /** <code>OPEN_SSL = 264 [(.google.fhir.proto.fhir_original_code) = "OpenSSL"];</code> */
    public static final int OPEN_SSL_VALUE = 264;
    /** <code>OPL_1_0 = 265 [(.google.fhir.proto.fhir_original_code) = "OPL-1.0"];</code> */
    public static final int OPL_1_0_VALUE = 265;
    /** <code>OSET_PL_2_1 = 266 [(.google.fhir.proto.fhir_original_code) = "OSET-PL-2.1"];</code> */
    public static final int OSET_PL_2_1_VALUE = 266;
    /** <code>OSL_1_0 = 267 [(.google.fhir.proto.fhir_original_code) = "OSL-1.0"];</code> */
    public static final int OSL_1_0_VALUE = 267;
    /** <code>OSL_1_1 = 268 [(.google.fhir.proto.fhir_original_code) = "OSL-1.1"];</code> */
    public static final int OSL_1_1_VALUE = 268;
    /** <code>OSL_2_0 = 269 [(.google.fhir.proto.fhir_original_code) = "OSL-2.0"];</code> */
    public static final int OSL_2_0_VALUE = 269;
    /** <code>OSL_2_1 = 270 [(.google.fhir.proto.fhir_original_code) = "OSL-2.1"];</code> */
    public static final int OSL_2_1_VALUE = 270;
    /** <code>OSL_3_0 = 271 [(.google.fhir.proto.fhir_original_code) = "OSL-3.0"];</code> */
    public static final int OSL_3_0_VALUE = 271;
    /** <code>PDDL_1_0 = 272 [(.google.fhir.proto.fhir_original_code) = "PDDL-1.0"];</code> */
    public static final int PDDL_1_0_VALUE = 272;
    /** <code>PHP_3_0 = 273 [(.google.fhir.proto.fhir_original_code) = "PHP-3.0"];</code> */
    public static final int PHP_3_0_VALUE = 273;
    /** <code>PHP_3_01 = 274 [(.google.fhir.proto.fhir_original_code) = "PHP-3.01"];</code> */
    public static final int PHP_3_01_VALUE = 274;
    /** <code>PLEXUS = 275 [(.google.fhir.proto.fhir_original_code) = "Plexus"];</code> */
    public static final int PLEXUS_VALUE = 275;
    /** <code>POSTGRE_SQL = 276 [(.google.fhir.proto.fhir_original_code) = "PostgreSQL"];</code> */
    public static final int POSTGRE_SQL_VALUE = 276;
    /** <code>PSFRAG = 277;</code> */
    public static final int PSFRAG_VALUE = 277;
    /** <code>PSUTILS = 278;</code> */
    public static final int PSUTILS_VALUE = 278;
    /** <code>PYTHON_2_0 = 279 [(.google.fhir.proto.fhir_original_code) = "Python-2.0"];</code> */
    public static final int PYTHON_2_0_VALUE = 279;
    /** <code>QHULL = 280 [(.google.fhir.proto.fhir_original_code) = "Qhull"];</code> */
    public static final int QHULL_VALUE = 280;
    /** <code>QPL_1_0 = 281 [(.google.fhir.proto.fhir_original_code) = "QPL-1.0"];</code> */
    public static final int QPL_1_0_VALUE = 281;
    /** <code>RDISC = 282 [(.google.fhir.proto.fhir_original_code) = "Rdisc"];</code> */
    public static final int RDISC_VALUE = 282;
    /** <code>R_HE_COS_1_1 = 283 [(.google.fhir.proto.fhir_original_code) = "RHeCos-1.1"];</code> */
    public static final int R_HE_COS_1_1_VALUE = 283;
    /** <code>RPL_1_1 = 284 [(.google.fhir.proto.fhir_original_code) = "RPL-1.1"];</code> */
    public static final int RPL_1_1_VALUE = 284;
    /** <code>RPL_1_5 = 285 [(.google.fhir.proto.fhir_original_code) = "RPL-1.5"];</code> */
    public static final int RPL_1_5_VALUE = 285;
    /** <code>RPSL_1_0 = 286 [(.google.fhir.proto.fhir_original_code) = "RPSL-1.0"];</code> */
    public static final int RPSL_1_0_VALUE = 286;
    /** <code>RSA_MD = 287 [(.google.fhir.proto.fhir_original_code) = "RSA-MD"];</code> */
    public static final int RSA_MD_VALUE = 287;
    /** <code>RSCPL = 288 [(.google.fhir.proto.fhir_original_code) = "RSCPL"];</code> */
    public static final int RSCPL_VALUE = 288;
    /** <code>RUBY = 289 [(.google.fhir.proto.fhir_original_code) = "Ruby"];</code> */
    public static final int RUBY_VALUE = 289;
    /** <code>SAX_PD = 290 [(.google.fhir.proto.fhir_original_code) = "SAX-PD"];</code> */
    public static final int SAX_PD_VALUE = 290;
    /** <code>SAXPATH = 291 [(.google.fhir.proto.fhir_original_code) = "Saxpath"];</code> */
    public static final int SAXPATH_VALUE = 291;
    /** <code>SCEA = 292 [(.google.fhir.proto.fhir_original_code) = "SCEA"];</code> */
    public static final int SCEA_VALUE = 292;
    /** <code>SENDMAIL = 293 [(.google.fhir.proto.fhir_original_code) = "Sendmail"];</code> */
    public static final int SENDMAIL_VALUE = 293;
    /** <code>SGI_B_1_0 = 294 [(.google.fhir.proto.fhir_original_code) = "SGI-B-1.0"];</code> */
    public static final int SGI_B_1_0_VALUE = 294;
    /** <code>SGI_B_1_1 = 295 [(.google.fhir.proto.fhir_original_code) = "SGI-B-1.1"];</code> */
    public static final int SGI_B_1_1_VALUE = 295;
    /** <code>SGI_B_2_0 = 296 [(.google.fhir.proto.fhir_original_code) = "SGI-B-2.0"];</code> */
    public static final int SGI_B_2_0_VALUE = 296;
    /** <code>SIM_PL_2_0 = 297 [(.google.fhir.proto.fhir_original_code) = "SimPL-2.0"];</code> */
    public static final int SIM_PL_2_0_VALUE = 297;
    /** <code>SISSL_1_2 = 298 [(.google.fhir.proto.fhir_original_code) = "SISSL-1.2"];</code> */
    public static final int SISSL_1_2_VALUE = 298;
    /** <code>SISSL = 299 [(.google.fhir.proto.fhir_original_code) = "SISSL"];</code> */
    public static final int SISSL_VALUE = 299;
    /** <code>SLEEPYCAT = 300 [(.google.fhir.proto.fhir_original_code) = "Sleepycat"];</code> */
    public static final int SLEEPYCAT_VALUE = 300;
    /** <code>SMLNJ = 301 [(.google.fhir.proto.fhir_original_code) = "SMLNJ"];</code> */
    public static final int SMLNJ_VALUE = 301;
    /** <code>SMPPL = 302 [(.google.fhir.proto.fhir_original_code) = "SMPPL"];</code> */
    public static final int SMPPL_VALUE = 302;
    /** <code>SNIA = 303 [(.google.fhir.proto.fhir_original_code) = "SNIA"];</code> */
    public static final int SNIA_VALUE = 303;
    /** <code>SPENCER_86 = 304 [(.google.fhir.proto.fhir_original_code) = "Spencer-86"];</code> */
    public static final int SPENCER_86_VALUE = 304;
    /** <code>SPENCER_94 = 305 [(.google.fhir.proto.fhir_original_code) = "Spencer-94"];</code> */
    public static final int SPENCER_94_VALUE = 305;
    /** <code>SPENCER_99 = 306 [(.google.fhir.proto.fhir_original_code) = "Spencer-99"];</code> */
    public static final int SPENCER_99_VALUE = 306;
    /** <code>SPL_1_0 = 307 [(.google.fhir.proto.fhir_original_code) = "SPL-1.0"];</code> */
    public static final int SPL_1_0_VALUE = 307;
    /**
     * <code>SUGAR_CRM_1_1_3 = 308 [(.google.fhir.proto.fhir_original_code) = "SugarCRM-1.1.3"];
     * </code>
     */
    public static final int SUGAR_CRM_1_1_3_VALUE = 308;
    /** <code>SWL = 309 [(.google.fhir.proto.fhir_original_code) = "SWL"];</code> */
    public static final int SWL_VALUE = 309;
    /** <code>TCL = 310 [(.google.fhir.proto.fhir_original_code) = "TCL"];</code> */
    public static final int TCL_VALUE = 310;
    /**
     * <code>TCP_WRAPPERS = 311 [(.google.fhir.proto.fhir_original_code) = "TCP-wrappers"];</code>
     */
    public static final int TCP_WRAPPERS_VALUE = 311;
    /** <code>T_MATE = 312 [(.google.fhir.proto.fhir_original_code) = "TMate"];</code> */
    public static final int T_MATE_VALUE = 312;
    /** <code>TORQUE_1_1 = 313 [(.google.fhir.proto.fhir_original_code) = "TORQUE-1.1"];</code> */
    public static final int TORQUE_1_1_VALUE = 313;
    /** <code>TOSL = 314 [(.google.fhir.proto.fhir_original_code) = "TOSL"];</code> */
    public static final int TOSL_VALUE = 314;
    /**
     * <code>UNICODE_DFS_2015 = 315 [(.google.fhir.proto.fhir_original_code) = "Unicode-DFS-2015"];
     * </code>
     */
    public static final int UNICODE_DFS_2015_VALUE = 315;
    /**
     * <code>UNICODE_DFS_2016 = 316 [(.google.fhir.proto.fhir_original_code) = "Unicode-DFS-2016"];
     * </code>
     */
    public static final int UNICODE_DFS_2016_VALUE = 316;
    /** <code>UNICODE_TOU = 317 [(.google.fhir.proto.fhir_original_code) = "Unicode-TOU"];</code> */
    public static final int UNICODE_TOU_VALUE = 317;
    /** <code>UNLICENSE = 318 [(.google.fhir.proto.fhir_original_code) = "Unlicense"];</code> */
    public static final int UNLICENSE_VALUE = 318;
    /** <code>UPL_1_0 = 319 [(.google.fhir.proto.fhir_original_code) = "UPL-1.0"];</code> */
    public static final int UPL_1_0_VALUE = 319;
    /** <code>VIM = 320 [(.google.fhir.proto.fhir_original_code) = "Vim"];</code> */
    public static final int VIM_VALUE = 320;
    /** <code>VOSTROM = 321 [(.google.fhir.proto.fhir_original_code) = "VOSTROM"];</code> */
    public static final int VOSTROM_VALUE = 321;
    /** <code>VSL_1_0 = 322 [(.google.fhir.proto.fhir_original_code) = "VSL-1.0"];</code> */
    public static final int VSL_1_0_VALUE = 322;
    /**
     * <code>W3C_19980720 = 323 [(.google.fhir.proto.fhir_original_code) = "W3C-19980720"];</code>
     */
    public static final int W3C_19980720_VALUE = 323;
    /**
     * <code>W3C_20150513 = 324 [(.google.fhir.proto.fhir_original_code) = "W3C-20150513"];</code>
     */
    public static final int W3C_20150513_VALUE = 324;
    /** <code>W3C = 325 [(.google.fhir.proto.fhir_original_code) = "W3C"];</code> */
    public static final int W3C_VALUE = 325;
    /** <code>WATCOM_1_0 = 326 [(.google.fhir.proto.fhir_original_code) = "Watcom-1.0"];</code> */
    public static final int WATCOM_1_0_VALUE = 326;
    /** <code>WSUIPA = 327 [(.google.fhir.proto.fhir_original_code) = "Wsuipa"];</code> */
    public static final int WSUIPA_VALUE = 327;
    /** <code>WTFPL = 328 [(.google.fhir.proto.fhir_original_code) = "WTFPL"];</code> */
    public static final int WTFPL_VALUE = 328;
    /** <code>X11 = 329 [(.google.fhir.proto.fhir_original_code) = "X11"];</code> */
    public static final int X11_VALUE = 329;
    /** <code>XEROX = 330 [(.google.fhir.proto.fhir_original_code) = "Xerox"];</code> */
    public static final int XEROX_VALUE = 330;
    /**
     * <code>X_FREE86_1_1 = 331 [(.google.fhir.proto.fhir_original_code) = "XFree86-1.1"];</code>
     */
    public static final int X_FREE86_1_1_VALUE = 331;
    /** <code>XINETD = 332;</code> */
    public static final int XINETD_VALUE = 332;
    /** <code>XNET = 333 [(.google.fhir.proto.fhir_original_code) = "Xnet"];</code> */
    public static final int XNET_VALUE = 333;
    /** <code>XPP = 334;</code> */
    public static final int XPP_VALUE = 334;
    /** <code>X_SKAT = 335 [(.google.fhir.proto.fhir_original_code) = "XSkat"];</code> */
    public static final int X_SKAT_VALUE = 335;
    /** <code>YPL_1_0 = 336 [(.google.fhir.proto.fhir_original_code) = "YPL-1.0"];</code> */
    public static final int YPL_1_0_VALUE = 336;
    /** <code>YPL_1_1 = 337 [(.google.fhir.proto.fhir_original_code) = "YPL-1.1"];</code> */
    public static final int YPL_1_1_VALUE = 337;
    /** <code>ZED = 338 [(.google.fhir.proto.fhir_original_code) = "Zed"];</code> */
    public static final int ZED_VALUE = 338;
    /** <code>ZEND_2_0 = 339 [(.google.fhir.proto.fhir_original_code) = "Zend-2.0"];</code> */
    public static final int ZEND_2_0_VALUE = 339;
    /** <code>ZIMBRA_1_3 = 340 [(.google.fhir.proto.fhir_original_code) = "Zimbra-1.3"];</code> */
    public static final int ZIMBRA_1_3_VALUE = 340;
    /** <code>ZIMBRA_1_4 = 341 [(.google.fhir.proto.fhir_original_code) = "Zimbra-1.4"];</code> */
    public static final int ZIMBRA_1_4_VALUE = 341;
    /** <code>ZLIB_ACKNOWLEDGEMENT = 342;</code> */
    public static final int ZLIB_ACKNOWLEDGEMENT_VALUE = 342;
    /** <code>ZLIB = 343 [(.google.fhir.proto.fhir_original_code) = "Zlib"];</code> */
    public static final int ZLIB_VALUE = 343;
    /** <code>ZPL_1_1 = 344 [(.google.fhir.proto.fhir_original_code) = "ZPL-1.1"];</code> */
    public static final int ZPL_1_1_VALUE = 344;
    /** <code>ZPL_2_0 = 345 [(.google.fhir.proto.fhir_original_code) = "ZPL-2.0"];</code> */
    public static final int ZPL_2_0_VALUE = 345;
    /** <code>ZPL_2_1 = 346 [(.google.fhir.proto.fhir_original_code) = "ZPL-2.1"];</code> */
    public static final int ZPL_2_1_VALUE = 346;

    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Value valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Value forNumber(int value) {
      switch (value) {
        case 0:
          return INVALID_UNINITIALIZED;
        case 1:
          return NOT_OPEN_SOURCE;
        case 2:
          return BSD_ZERO_CLAUSE_LICENSE;
        case 3:
          return AAL;
        case 4:
          return ABSTYLES;
        case 5:
          return ADOBE_2006;
        case 6:
          return ADOBE_GLYPH;
        case 7:
          return ADSL;
        case 8:
          return AFL_1_1;
        case 9:
          return AFL_1_2;
        case 10:
          return AFL_2_0;
        case 11:
          return AFL_2_1;
        case 12:
          return AFL_3_0;
        case 13:
          return AFMPARSE;
        case 14:
          return AGPL_1_0_ONLY;
        case 15:
          return AGPL_1_0_OR_LATER;
        case 16:
          return AGPL_3_0_ONLY;
        case 17:
          return AGPL_3_0_OR_LATER;
        case 18:
          return ALADDIN;
        case 19:
          return AMDPLPA;
        case 20:
          return AML;
        case 21:
          return AMPAS;
        case 22:
          return ANTLR_PD;
        case 23:
          return APACHE_1_0;
        case 24:
          return APACHE_1_1;
        case 25:
          return APACHE_2_0;
        case 26:
          return APAFML;
        case 27:
          return APL_1_0;
        case 28:
          return APSL_1_0;
        case 29:
          return APSL_1_1;
        case 30:
          return APSL_1_2;
        case 31:
          return APSL_2_0;
        case 32:
          return ARTISTIC_1_0_CL8;
        case 33:
          return ARTISTIC_1_0_PERL;
        case 34:
          return ARTISTIC_1_0;
        case 35:
          return ARTISTIC_2_0;
        case 36:
          return BAHYPH;
        case 37:
          return BARR;
        case 38:
          return BEERWARE;
        case 39:
          return BIT_TORRENT_1_0;
        case 40:
          return BIT_TORRENT_1_1;
        case 41:
          return BORCEUX;
        case 42:
          return BSD_1_CLAUSE;
        case 43:
          return BSD_2_CLAUSE_FREE_BSD;
        case 44:
          return BSD_2_CLAUSE_NET_BSD;
        case 45:
          return BSD_2_CLAUSE_PATENT;
        case 46:
          return BSD_2_CLAUSE;
        case 47:
          return BSD_3_CLAUSE_ATTRIBUTION;
        case 48:
          return BSD_3_CLAUSE_CLEAR;
        case 49:
          return BSD_3_CLAUSE_LBNL;
        case 50:
          return BSD_3_CLAUSE_NO_NUCLEAR_LICENSE_2014;
        case 51:
          return BSD_3_CLAUSE_NO_NUCLEAR_LICENSE;
        case 52:
          return BSD_3_CLAUSE_NO_NUCLEAR_WARRANTY;
        case 53:
          return BSD_3_CLAUSE;
        case 54:
          return BSD_4_CLAUSE_UC;
        case 55:
          return BSD_4_CLAUSE;
        case 56:
          return BSD_PROTECTION;
        case 57:
          return BSD_SOURCE_CODE;
        case 58:
          return BSL_1_0;
        case 59:
          return BZIP2_1_0_5;
        case 60:
          return BZIP2_1_0_6;
        case 61:
          return CALDERA;
        case 62:
          return CATOSL_1_1;
        case 63:
          return CC_BY_1_0;
        case 64:
          return CC_BY_2_0;
        case 65:
          return CC_BY_2_5;
        case 66:
          return CC_BY_3_0;
        case 67:
          return CC_BY_4_0;
        case 68:
          return CC_BY_NC_1_0;
        case 69:
          return CC_BY_NC_2_0;
        case 70:
          return CC_BY_NC_2_5;
        case 71:
          return CC_BY_NC_3_0;
        case 72:
          return CC_BY_NC_4_0;
        case 73:
          return CC_BY_NC_ND_1_0;
        case 74:
          return CC_BY_NC_ND_2_0;
        case 75:
          return CC_BY_NC_ND_2_5;
        case 76:
          return CC_BY_NC_ND_3_0;
        case 77:
          return CC_BY_NC_ND_4_0;
        case 78:
          return CC_BY_NC_SA_1_0;
        case 79:
          return CC_BY_NC_SA_2_0;
        case 80:
          return CC_BY_NC_SA_2_5;
        case 81:
          return CC_BY_NC_SA_3_0;
        case 82:
          return CC_BY_NC_SA_4_0;
        case 83:
          return CC_BY_ND_1_0;
        case 84:
          return CC_BY_ND_2_0;
        case 85:
          return CC_BY_ND_2_5;
        case 86:
          return CC_BY_ND_3_0;
        case 87:
          return CC_BY_ND_4_0;
        case 88:
          return CC_BY_SA_1_0;
        case 89:
          return CC_BY_SA_2_0;
        case 90:
          return CC_BY_SA_2_5;
        case 91:
          return CC_BY_SA_3_0;
        case 92:
          return CC_BY_SA_4_0;
        case 93:
          return CC0_1_0;
        case 94:
          return CDDL_1_0;
        case 95:
          return CDDL_1_1;
        case 96:
          return CDLA_PERMISSIVE_1_0;
        case 97:
          return CDLA_SHARING_1_0;
        case 98:
          return CECILL_1_0;
        case 99:
          return CECILL_1_1;
        case 100:
          return CECILL_2_0;
        case 101:
          return CECILL_2_1;
        case 102:
          return CECILL_B;
        case 103:
          return CECILL_C;
        case 104:
          return CL_ARTISTIC;
        case 105:
          return CNRI_JYTHON;
        case 106:
          return CNRI_PYTHON_GPL_COMPATIBLE;
        case 107:
          return CNRI_PYTHON;
        case 108:
          return CONDOR_1_1;
        case 109:
          return CPAL_1_0;
        case 110:
          return CPL_1_0;
        case 111:
          return CPOL_1_02;
        case 112:
          return CROSSWORD;
        case 113:
          return CRYSTAL_STACKER;
        case 114:
          return CUA_OPL_1_0;
        case 115:
          return CUBE;
        case 116:
          return CURL;
        case 117:
          return D_FSL_1_0;
        case 118:
          return DIFFMARK;
        case 119:
          return DOC;
        case 120:
          return DOTSEQN;
        case 121:
          return DSDP;
        case 122:
          return DVIPDFM;
        case 123:
          return ECL_1_0;
        case 124:
          return ECL_2_0;
        case 125:
          return EFL_1_0;
        case 126:
          return EFL_2_0;
        case 127:
          return E_GENIX;
        case 128:
          return ENTESSA;
        case 129:
          return EPL_1_0;
        case 130:
          return EPL_2_0;
        case 131:
          return ERL_PL_1_1;
        case 132:
          return EU_DATAGRID;
        case 133:
          return EUPL_1_0;
        case 134:
          return EUPL_1_1;
        case 135:
          return EUPL_1_2;
        case 136:
          return EUROSYM;
        case 137:
          return FAIR;
        case 138:
          return FRAMEWORX_1_0;
        case 139:
          return FREE_IMAGE;
        case 140:
          return FSFAP;
        case 141:
          return FSFUL;
        case 142:
          return FSFULLR;
        case 143:
          return FTL;
        case 144:
          return GFDL_1_1_ONLY;
        case 145:
          return GFDL_1_1_OR_LATER;
        case 146:
          return GFDL_1_2_ONLY;
        case 147:
          return GFDL_1_2_OR_LATER;
        case 148:
          return GFDL_1_3_ONLY;
        case 149:
          return GFDL_1_3_OR_LATER;
        case 150:
          return GIFTWARE;
        case 151:
          return GL2PS;
        case 152:
          return GLIDE;
        case 153:
          return GLULXE;
        case 154:
          return GNUPLOT;
        case 155:
          return GPL_1_0_ONLY;
        case 156:
          return GPL_1_0_OR_LATER;
        case 157:
          return GPL_2_0_ONLY;
        case 158:
          return GPL_2_0_OR_LATER;
        case 159:
          return GPL_3_0_ONLY;
        case 160:
          return GPL_3_0_OR_LATER;
        case 161:
          return G_SOAP_1_3B;
        case 162:
          return HASKELL_REPORT;
        case 163:
          return HPND;
        case 164:
          return IBM_PIBS;
        case 165:
          return ICU;
        case 166:
          return IJG;
        case 167:
          return IMAGE_MAGICK;
        case 168:
          return I_MATIX;
        case 169:
          return IMLIB2;
        case 170:
          return INFO_ZIP;
        case 171:
          return INTEL_ACPI;
        case 172:
          return INTEL;
        case 173:
          return INTERBASE_1_0;
        case 174:
          return IPA;
        case 175:
          return IPL_1_0;
        case 176:
          return ISC;
        case 177:
          return JAS_PER_2_0;
        case 178:
          return JSON;
        case 179:
          return LAL_1_2;
        case 180:
          return LAL_1_3;
        case 181:
          return LATEX2E;
        case 182:
          return LEPTONICA;
        case 183:
          return LGPL_2_0_ONLY;
        case 184:
          return LGPL_2_0_OR_LATER;
        case 185:
          return LGPL_2_1_ONLY;
        case 186:
          return LGPL_2_1_OR_LATER;
        case 187:
          return LGPL_3_0_ONLY;
        case 188:
          return LGPL_3_0_OR_LATER;
        case 189:
          return LGPLLR;
        case 190:
          return LIBPNG;
        case 191:
          return LIBTIFF;
        case 192:
          return LI_LI_Q_P_1_1;
        case 193:
          return LI_LI_Q_R_1_1;
        case 194:
          return LI_LI_Q_RPLUS_1_1;
        case 195:
          return LINUX_OPEN_IB;
        case 196:
          return LPL_1_0;
        case 197:
          return LPL_1_02;
        case 198:
          return LPPL_1_0;
        case 199:
          return LPPL_1_1;
        case 200:
          return LPPL_1_2;
        case 201:
          return LPPL_1_3A;
        case 202:
          return LPPL_1_3C;
        case 203:
          return MAKE_INDEX;
        case 204:
          return MIR_OS;
        case 205:
          return MIT_0;
        case 206:
          return MIT_ADVERTISING;
        case 207:
          return MIT_CMU;
        case 208:
          return MIT_ENNA;
        case 209:
          return MIT_FEH;
        case 210:
          return MIT;
        case 211:
          return MITNFA;
        case 212:
          return MOTOSOTO;
        case 213:
          return MPICH2;
        case 214:
          return MPL_1_0;
        case 215:
          return MPL_1_1;
        case 216:
          return MPL_2_0_NO_COPYLEFT_EXCEPTION;
        case 217:
          return MPL_2_0;
        case 218:
          return MS_PL;
        case 219:
          return MS_RL;
        case 220:
          return MTLL;
        case 221:
          return MULTICS;
        case 222:
          return MUP;
        case 223:
          return NASA_1_3;
        case 224:
          return NAUMEN;
        case 225:
          return NBPL_1_0;
        case 226:
          return NCSA;
        case 227:
          return NET_SNMP;
        case 228:
          return NET_CDF;
        case 229:
          return NEWSLETR;
        case 230:
          return NGPL;
        case 231:
          return NLOD_1_0;
        case 232:
          return NLPL;
        case 233:
          return NOKIA;
        case 234:
          return NOSL;
        case 235:
          return NOWEB;
        case 236:
          return NPL_1_0;
        case 237:
          return NPL_1_1;
        case 238:
          return NPOSL_3_0;
        case 239:
          return NRL;
        case 240:
          return NTP;
        case 241:
          return OCCT_PL;
        case 242:
          return OCLC_2_0;
        case 243:
          return O_DB_L_1_0;
        case 244:
          return OFL_1_0;
        case 245:
          return OFL_1_1;
        case 246:
          return OGTSL;
        case 247:
          return OLDAP_1_1;
        case 248:
          return OLDAP_1_2;
        case 249:
          return OLDAP_1_3;
        case 250:
          return OLDAP_1_4;
        case 251:
          return OLDAP_2_0_1;
        case 252:
          return OLDAP_2_0;
        case 253:
          return OLDAP_2_1;
        case 254:
          return OLDAP_2_2_1;
        case 255:
          return OLDAP_2_2_2;
        case 256:
          return OLDAP_2_2;
        case 257:
          return OLDAP_2_3;
        case 258:
          return OLDAP_2_4;
        case 259:
          return OLDAP_2_5;
        case 260:
          return OLDAP_2_6;
        case 261:
          return OLDAP_2_7;
        case 262:
          return OLDAP_2_8;
        case 263:
          return OML;
        case 264:
          return OPEN_SSL;
        case 265:
          return OPL_1_0;
        case 266:
          return OSET_PL_2_1;
        case 267:
          return OSL_1_0;
        case 268:
          return OSL_1_1;
        case 269:
          return OSL_2_0;
        case 270:
          return OSL_2_1;
        case 271:
          return OSL_3_0;
        case 272:
          return PDDL_1_0;
        case 273:
          return PHP_3_0;
        case 274:
          return PHP_3_01;
        case 275:
          return PLEXUS;
        case 276:
          return POSTGRE_SQL;
        case 277:
          return PSFRAG;
        case 278:
          return PSUTILS;
        case 279:
          return PYTHON_2_0;
        case 280:
          return QHULL;
        case 281:
          return QPL_1_0;
        case 282:
          return RDISC;
        case 283:
          return R_HE_COS_1_1;
        case 284:
          return RPL_1_1;
        case 285:
          return RPL_1_5;
        case 286:
          return RPSL_1_0;
        case 287:
          return RSA_MD;
        case 288:
          return RSCPL;
        case 289:
          return RUBY;
        case 290:
          return SAX_PD;
        case 291:
          return SAXPATH;
        case 292:
          return SCEA;
        case 293:
          return SENDMAIL;
        case 294:
          return SGI_B_1_0;
        case 295:
          return SGI_B_1_1;
        case 296:
          return SGI_B_2_0;
        case 297:
          return SIM_PL_2_0;
        case 298:
          return SISSL_1_2;
        case 299:
          return SISSL;
        case 300:
          return SLEEPYCAT;
        case 301:
          return SMLNJ;
        case 302:
          return SMPPL;
        case 303:
          return SNIA;
        case 304:
          return SPENCER_86;
        case 305:
          return SPENCER_94;
        case 306:
          return SPENCER_99;
        case 307:
          return SPL_1_0;
        case 308:
          return SUGAR_CRM_1_1_3;
        case 309:
          return SWL;
        case 310:
          return TCL;
        case 311:
          return TCP_WRAPPERS;
        case 312:
          return T_MATE;
        case 313:
          return TORQUE_1_1;
        case 314:
          return TOSL;
        case 315:
          return UNICODE_DFS_2015;
        case 316:
          return UNICODE_DFS_2016;
        case 317:
          return UNICODE_TOU;
        case 318:
          return UNLICENSE;
        case 319:
          return UPL_1_0;
        case 320:
          return VIM;
        case 321:
          return VOSTROM;
        case 322:
          return VSL_1_0;
        case 323:
          return W3C_19980720;
        case 324:
          return W3C_20150513;
        case 325:
          return W3C;
        case 326:
          return WATCOM_1_0;
        case 327:
          return WSUIPA;
        case 328:
          return WTFPL;
        case 329:
          return X11;
        case 330:
          return XEROX;
        case 331:
          return X_FREE86_1_1;
        case 332:
          return XINETD;
        case 333:
          return XNET;
        case 334:
          return XPP;
        case 335:
          return X_SKAT;
        case 336:
          return YPL_1_0;
        case 337:
          return YPL_1_1;
        case 338:
          return ZED;
        case 339:
          return ZEND_2_0;
        case 340:
          return ZIMBRA_1_3;
        case 341:
          return ZIMBRA_1_4;
        case 342:
          return ZLIB_ACKNOWLEDGEMENT;
        case 343:
          return ZLIB;
        case 344:
          return ZPL_1_1;
        case 345:
          return ZPL_2_0;
        case 346:
          return ZPL_2_1;
        default:
          return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Value> internalGetValueMap() {
      return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<Value> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Value>() {
          public Value findValueByNumber(int number) {
            return Value.forNumber(number);
          }
        };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
      return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
      return com.google.fhir.r4.core.SPDXLicenseCode.getDescriptor().getEnumTypes().get(0);
    }

    private static final Value[] VALUES = values();

    public static Value valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Value(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.fhir.r4.core.SPDXLicenseCode.Value)
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.fhir.r4.core.SPDXLicenseCode)) {
      return super.equals(obj);
    }
    com.google.fhir.r4.core.SPDXLicenseCode other = (com.google.fhir.r4.core.SPDXLicenseCode) obj;

    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.fhir.r4.core.SPDXLicenseCode parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.fhir.r4.core.SPDXLicenseCode parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.fhir.r4.core.SPDXLicenseCode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.fhir.r4.core.SPDXLicenseCode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.fhir.r4.core.SPDXLicenseCode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.fhir.r4.core.SPDXLicenseCode parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.fhir.r4.core.SPDXLicenseCode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.fhir.r4.core.SPDXLicenseCode parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.fhir.r4.core.SPDXLicenseCode parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.fhir.r4.core.SPDXLicenseCode parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.fhir.r4.core.SPDXLicenseCode parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.fhir.r4.core.SPDXLicenseCode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.fhir.r4.core.SPDXLicenseCode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * The license that applies to an Implementation Guide (using an SPDX license
   * Identifiers, or 'not-open-source'). The binding is required but new SPDX
   * license Identifiers are allowed to be used (https://spdx.org/licenses/). See
   * http://hl7.org/fhir/spdx-license
   * </pre>
   *
   * Protobuf type {@code google.fhir.r4.core.SPDXLicenseCode}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.fhir.r4.core.SPDXLicenseCode)
      com.google.fhir.r4.core.SPDXLicenseCodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.fhir.r4.core.Codes
          .internal_static_google_fhir_r4_core_SPDXLicenseCode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.fhir.r4.core.Codes
          .internal_static_google_fhir_r4_core_SPDXLicenseCode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.fhir.r4.core.SPDXLicenseCode.class,
              com.google.fhir.r4.core.SPDXLicenseCode.Builder.class);
    }

    // Construct using com.google.fhir.r4.core.SPDXLicenseCode.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.fhir.r4.core.Codes
          .internal_static_google_fhir_r4_core_SPDXLicenseCode_descriptor;
    }

    @java.lang.Override
    public com.google.fhir.r4.core.SPDXLicenseCode getDefaultInstanceForType() {
      return com.google.fhir.r4.core.SPDXLicenseCode.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.fhir.r4.core.SPDXLicenseCode build() {
      com.google.fhir.r4.core.SPDXLicenseCode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.fhir.r4.core.SPDXLicenseCode buildPartial() {
      com.google.fhir.r4.core.SPDXLicenseCode result =
          new com.google.fhir.r4.core.SPDXLicenseCode(this);
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.fhir.r4.core.SPDXLicenseCode) {
        return mergeFrom((com.google.fhir.r4.core.SPDXLicenseCode) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.fhir.r4.core.SPDXLicenseCode other) {
      if (other == com.google.fhir.r4.core.SPDXLicenseCode.getDefaultInstance()) return this;
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.fhir.r4.core.SPDXLicenseCode parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.fhir.r4.core.SPDXLicenseCode) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.fhir.r4.core.SPDXLicenseCode)
  }

  // @@protoc_insertion_point(class_scope:google.fhir.r4.core.SPDXLicenseCode)
  private static final com.google.fhir.r4.core.SPDXLicenseCode DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.fhir.r4.core.SPDXLicenseCode();
  }

  public static com.google.fhir.r4.core.SPDXLicenseCode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SPDXLicenseCode> PARSER =
      new com.google.protobuf.AbstractParser<SPDXLicenseCode>() {
        @java.lang.Override
        public SPDXLicenseCode parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SPDXLicenseCode(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<SPDXLicenseCode> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SPDXLicenseCode> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.fhir.r4.core.SPDXLicenseCode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
