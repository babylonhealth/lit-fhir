// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/google/fhir/proto/r4/core/profiles/ldl_cholesterol.proto

package com.google.fhir.r4.core;

public final class LdlCholesterolOuterClass {
  private LdlCholesterolOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_LdlCholesterol_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_LdlCholesterol_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_LdlCholesterol_StatusCode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_LdlCholesterol_StatusCode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_LdlCholesterol_EffectiveX_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_LdlCholesterol_EffectiveX_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_LdlCholesterol_ValueX_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_LdlCholesterol_ValueX_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_LdlCholesterol_ReferenceRange_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_LdlCholesterol_ReferenceRange_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_LdlCholesterol_Component_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_LdlCholesterol_Component_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_LdlCholesterol_Component_ValueX_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_LdlCholesterol_Component_ValueX_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n>proto/google/fhir/proto/r4/core/profil" +
      "es/ldl_cholesterol.proto\022\023google.fhir.r4" +
      ".core\032\031google/protobuf/any.proto\032)proto/" +
      "google/fhir/proto/annotations.proto\032+pro" +
      "to/google/fhir/proto/r4/core/codes.proto" +
      "\032/proto/google/fhir/proto/r4/core/dataty" +
      "pes.proto\"\324T\n\016LdlCholesterol\022#\n\002id\030\001 \001(\013" +
      "2\027.google.fhir.r4.core.Id\022\'\n\004meta\030\002 \001(\0132" +
      "\031.google.fhir.r4.core.Meta\0220\n\016implicit_r" +
      "ules\030\003 \001(\0132\030.google.fhir.r4.core.Uri\022+\n\010" +
      "language\030\004 \001(\0132\031.google.fhir.r4.core.Cod" +
      "e\022,\n\004text\030\005 \001(\0132\036.google.fhir.r4.core.Na" +
      "rrative\022\'\n\tcontained\030\006 \003(\0132\024.google.prot" +
      "obuf.Any\0221\n\textension\030\010 \003(\0132\036.google.fhi" +
      "r.r4.core.Extension\022:\n\022modifier_extensio" +
      "n\030\t \003(\0132\036.google.fhir.r4.core.Extension\022" +
      "3\n\nidentifier\030\n \003(\0132\037.google.fhir.r4.cor" +
      "e.Identifier\022\263\001\n\010based_on\030\013 \003(\0132\036.google" +
      ".fhir.r4.core.ReferenceB\200\001\362\377\374\302\006\010CarePlan" +
      "\362\377\374\302\006\rDeviceRequest\362\377\374\302\006\032ImmunizationRec" +
      "ommendation\362\377\374\302\006\021MedicationRequest\362\377\374\302\006\016" +
      "NutritionOrder\362\377\374\302\006\016ServiceRequest\022\264\001\n\007p" +
      "art_of\030\014 \003(\0132\036.google.fhir.r4.core.Refer" +
      "enceB\202\001\362\377\374\302\006\030MedicationAdministration\362\377\374" +
      "\302\006\022MedicationDispense\362\377\374\302\006\023MedicationSta" +
      "tement\362\377\374\302\006\tProcedure\362\377\374\302\006\014Immunization\362" +
      "\377\374\302\006\014ImagingStudy\022F\n\006status\030\r \001(\0132..goog" +
      "le.fhir.r4.core.LdlCholesterol.StatusCod" +
      "eB\006\360\320\207\353\004\001\0226\n\010category\030\016 \003(\0132$.google.fhi" +
      "r.r4.core.CodeableConcept\022:\n\004code\030\017 \001(\0132" +
      "$.google.fhir.r4.core.CodeableConceptB\006\360" +
      "\320\207\353\004\001\022c\n\007subject\030\020 \001(\0132\036.google.fhir.r4." +
      "core.ReferenceB2\362\377\374\302\006\007Patient\362\377\374\302\006\005Group" +
      "\362\377\374\302\006\006Device\362\377\374\302\006\010Location\022=\n\005focus\030\021 \003(" +
      "\0132\036.google.fhir.r4.core.ReferenceB\016\362\377\374\302\006" +
      "\010Resource\022B\n\tencounter\030\022 \001(\0132\036.google.fh" +
      "ir.r4.core.ReferenceB\017\362\377\374\302\006\tEncounter\022A\n" +
      "\teffective\030\023 \001(\0132..google.fhir.r4.core.L" +
      "dlCholesterol.EffectiveX\022,\n\006issued\030\024 \001(\013" +
      "2\034.google.fhir.r4.core.Instant\022\233\001\n\tperfo" +
      "rmer\030\025 \003(\0132\036.google.fhir.r4.core.Referen" +
      "ceBh\362\377\374\302\006\014Practitioner\362\377\374\302\006\020Practitioner" +
      "Role\362\377\374\302\006\014Organization\362\377\374\302\006\010CareTeam\362\377\374\302" +
      "\006\007Patient\362\377\374\302\006\rRelatedPerson\0229\n\005value\030\026 " +
      "\001(\0132*.google.fhir.r4.core.LdlCholesterol" +
      ".ValueX\022@\n\022data_absent_reason\030\027 \001(\0132$.go" +
      "ogle.fhir.r4.core.CodeableConcept\022<\n\016int" +
      "erpretation\030\030 \001(\0132$.google.fhir.r4.core." +
      "CodeableConcept\022-\n\004note\030\031 \003(\0132\037.google.f" +
      "hir.r4.core.Annotation\0227\n\tbody_site\030\032 \001(" +
      "\0132$.google.fhir.r4.core.CodeableConcept\022" +
      "4\n\006method\030\033 \001(\0132$.google.fhir.r4.core.Co" +
      "deableConcept\022@\n\010specimen\030\034 \001(\0132\036.google" +
      ".fhir.r4.core.ReferenceB\016\362\377\374\302\006\010Specimen\022" +
      "N\n\006device\030\035 \001(\0132\036.google.fhir.r4.core.Re" +
      "ferenceB\036\362\377\374\302\006\006Device\362\377\374\302\006\014DeviceMetric\022" +
      "S\n\017reference_range\030\036 \001(\01322.google.fhir.r" +
      "4.core.LdlCholesterol.ReferenceRangeB\006\360\320" +
      "\207\353\004\001\022@\n\tcomponent\030! \003(\0132-.google.fhir.r4" +
      ".core.LdlCholesterol.Component\032\230\002\n\nStatu" +
      "sCode\022?\n\005value\030\001 \001(\01620.google.fhir.r4.co" +
      "re.ObservationStatusCode.Value\022\'\n\002id\030\002 \001" +
      "(\0132\033.google.fhir.r4.core.String\0221\n\texten" +
      "sion\030\003 \003(\0132\036.google.fhir.r4.core.Extensi" +
      "on:m\300\237\343\266\005\001\212\371\203\262\005/http://hl7.org/fhir/Valu" +
      "eSet/observation-status\232\265\216\223\006,http://hl7." +
      "org/fhir/StructureDefinition/code\032\341\001\n\nEf" +
      "fectiveX\0222\n\tdate_time\030\001 \001(\0132\035.google.fhi" +
      "r.r4.core.DateTimeH\000\022-\n\006period\030\002 \001(\0132\033.g" +
      "oogle.fhir.r4.core.PeriodH\000\022-\n\006timing\030\003 " +
      "\001(\0132\033.google.fhir.r4.core.TimingH\000\022/\n\007in" +
      "stant\030\004 \001(\0132\034.google.fhir.r4.core.Instan" +
      "tH\000:\006\240\203\203\350\006\001B\010\n\006choice\032M\n\006ValueX\0221\n\010quant" +
      "ity\030\001 \001(\0132\035.google.fhir.r4.core.Quantity" +
      "H\000:\006\240\203\203\350\006\001B\010\n\006choice\032\231\003\n\016ReferenceRange\022" +
      "\'\n\002id\030\001 \001(\0132\033.google.fhir.r4.core.String" +
      "\0221\n\textension\030\002 \003(\0132\036.google.fhir.r4.cor" +
      "e.Extension\022:\n\022modifier_extension\030\003 \003(\0132" +
      "\036.google.fhir.r4.core.Extension\022v\n\004high\030" +
      "\005 \001(\0132#.google.fhir.r4.core.SimpleQuanti" +
      "tyBC\360\320\207\353\004\001\362\276\300\244\007\037code.empty() or system.e" +
      "xists()\362\276\300\244\007\022comparator.empty()\022)\n\004text\030" +
      "\t \001(\0132\033.google.fhir.r4.core.String:4\232\206\223\240" +
      "\010.low.exists() or high.exists() or text." +
      "exists()J\004\010\004\020\005J\004\010\006\020\007J\004\010\007\020\010J\004\010\010\020\t\032\304\010\n\tCom" +
      "ponent\022\'\n\002id\030\001 \001(\0132\033.google.fhir.r4.core" +
      ".String\0221\n\textension\030\002 \003(\0132\036.google.fhir" +
      ".r4.core.Extension\022:\n\022modifier_extension" +
      "\030\003 \003(\0132\036.google.fhir.r4.core.Extension\022:" +
      "\n\004code\030\004 \001(\0132$.google.fhir.r4.core.Codea" +
      "bleConceptB\006\360\320\207\353\004\001\022C\n\005value\030\005 \001(\01324.goog" +
      "le.fhir.r4.core.LdlCholesterol.Component" +
      ".ValueX\022@\n\022data_absent_reason\030\006 \001(\0132$.go" +
      "ogle.fhir.r4.core.CodeableConcept\022<\n\016int" +
      "erpretation\030\007 \003(\0132$.google.fhir.r4.core." +
      "CodeableConcept\022K\n\017reference_range\030\010 \003(\013" +
      "22.google.fhir.r4.core.LdlCholesterol.Re" +
      "ferenceRange\032\320\004\n\006ValueX\0221\n\010quantity\030\001 \001(" +
      "\0132\035.google.fhir.r4.core.QuantityH\000\022@\n\020co" +
      "deable_concept\030\002 \001(\0132$.google.fhir.r4.co" +
      "re.CodeableConceptH\000\022;\n\014string_value\030\003 \001" +
      "(\0132\033.google.fhir.r4.core.StringH\000R\006strin" +
      "g\022/\n\007boolean\030\004 \001(\0132\034.google.fhir.r4.core" +
      ".BooleanH\000\022/\n\007integer\030\005 \001(\0132\034.google.fhi" +
      "r.r4.core.IntegerH\000\022+\n\005range\030\006 \001(\0132\032.goo" +
      "gle.fhir.r4.core.RangeH\000\022+\n\005ratio\030\007 \001(\0132" +
      "\032.google.fhir.r4.core.RatioH\000\0228\n\014sampled" +
      "_data\030\010 \001(\0132 .google.fhir.r4.core.Sample" +
      "dDataH\000\022)\n\004time\030\t \001(\0132\031.google.fhir.r4.c" +
      "ore.TimeH\000\0222\n\tdate_time\030\n \001(\0132\035.google.f" +
      "hir.r4.core.DateTimeH\000\022-\n\006period\030\013 \001(\0132\033" +
      ".google.fhir.r4.core.PeriodH\000:\006\240\203\203\350\006\001B\010\n" +
      "\006choice:\2643\300\237\343\266\005\003\232\265\216\223\0063http://hl7.org/fhi" +
      "r/StructureDefinition/Observation\262\376\344\227\0066h" +
      "ttp://hl7.org/fhir/StructureDefinition/l" +
      "dlcholesterol\232\206\223\240\010)dataAbsentReason.empt" +
      "y() or value.empty()\232\206\223\240\010_value.empty() " +
      "or component.code.where(coding.intersect" +
      "(%resource.code.coding).exists()).empty(" +
      ")\262\365\365\327\t\177\n\021amino-acid-change\020\003\032hObservatio" +
      "n.extension(\'http://hl7.org/fhir/Structu" +
      "reDefinition/observation-geneticsAminoAc" +
      "idChangeName\')\262\365\365\327\t!\n\010based-on\020\005\032\023Observ" +
      "ation.basedOn\262\365\365\327\t\"\n\010category\020\004\032\024Observa" +
      "tion.category\262\365\365\327\t\364\003\n\004code\020\004\032\351\003AllergyIn" +
      "tolerance.code | AllergyIntolerance.reac" +
      "tion.substance | Condition.code | (Devic" +
      "eRequest.code as CodeableConcept) | Diag" +
      "nosticReport.code | FamilyMemberHistory." +
      "condition.code | List.code | Medication." +
      "code | (MedicationAdministration.medicat" +
      "ion as CodeableConcept) | (MedicationDis" +
      "pense.medication as CodeableConcept) | (" +
      "MedicationRequest.medication as Codeable" +
      "Concept) | (MedicationStatement.medicati" +
      "on as CodeableConcept) | Observation.cod" +
      "e | Procedure.code | ServiceRequest.code" +
      "\262\365\365\327\t#\n\022code-value-concept\020\006\032\013Observatio" +
      "n\262\365\365\327\t \n\017code-value-date\020\006\032\013Observation\262" +
      "\365\365\327\t$\n\023code-value-quantity\020\006\032\013Observatio" +
      "n\262\365\365\327\t\"\n\021code-value-string\020\006\032\013Observatio" +
      "n\262\365\365\327\t=\n\ncombo-code\020\004\032-Observation.code " +
      "| Observation.component.code\262\365\365\327\tA\n\030comb" +
      "o-code-value-concept\020\006\032#Observation | Ob" +
      "servation.component\262\365\365\327\tB\n\031combo-code-va" +
      "lue-quantity\020\006\032#Observation | Observatio" +
      "n.component\262\365\365\327\tc\n\030combo-data-absent-rea" +
      "son\020\004\032EObservation.dataAbsentReason | Ob" +
      "servation.component.dataAbsentReason\262\365\365\327" +
      "\tr\n\023combo-value-concept\020\004\032Y(Observation." +
      "value as CodeableConcept) | (Observation" +
      ".component.value as CodeableConcept)\262\365\365\327" +
      "\t\272\001\n\024combo-value-quantity\020\007\032\237\001(Observati" +
      "on.value as Quantity) | (Observation.val" +
      "ue as SampledData) | (Observation.compon" +
      "ent.value as Quantity) | (Observation.co" +
      "mponent.value as SampledData)\262\365\365\327\t.\n\016com" +
      "ponent-code\020\004\032\032Observation.component.cod" +
      "e\262\365\365\327\t7\n\034component-code-value-concept\020\006\032" +
      "\025Observation.component\262\365\365\327\t8\n\035component-" +
      "code-value-quantity\020\006\032\025Observation.compo" +
      "nent\262\365\365\327\tH\n\034component-data-absent-reason" +
      "\020\004\032&Observation.component.dataAbsentReas" +
      "on\262\365\365\327\tM\n\027component-value-concept\020\004\0320(Ob" +
      "servation.component.value as CodeableCon" +
      "cept)\262\365\365\327\tv\n\030component-value-quantity\020\007\032" +
      "X(Observation.component.value as Quantit" +
      "y) | (Observation.component.value as Sam" +
      "pledData)\262\365\365\327\t4\n\022data-absent-reason\020\004\032\034O" +
      "bservation.dataAbsentReason\262\365\365\327\t\227\003\n\004date" +
      "\020\002\032\214\003AllergyIntolerance.recordedDate | C" +
      "arePlan.period | CareTeam.period | Clini" +
      "calImpression.date | Composition.date | " +
      "Consent.dateTime | DiagnosticReport.effe" +
      "ctive | Encounter.period | EpisodeOfCare" +
      ".period | FamilyMemberHistory.date | Fla" +
      "g.period | Immunization.occurrence | Lis" +
      "t.date | Observation.effective | Procedu" +
      "re.performed | (RiskAssessment.occurrenc" +
      "e as dateTime) | SupplyRequest.authoredO" +
      "n\262\365\365\327\t)\n\014derived-from\020\005\032\027Observation.der" +
      "ivedFrom\262\365\365\327\t\036\n\006device\020\005\032\022Observation.de" +
      "vice\262\365\365\327\tp\n\013dna-variant\020\003\032_Observation.e" +
      "xtension(\'http://hl7.org/fhir/StructureD" +
      "efinition/observation-geneticsDnaVariant" +
      "\')\262\365\365\327\t\302\002\n\tencounter\020\005\032\262\002Composition.enc" +
      "ounter | DeviceRequest.encounter | Diagn" +
      "osticReport.encounter | DocumentReferenc" +
      "e.context.encounter | Flag.encounter | L" +
      "ist.encounter | NutritionOrder.encounter" +
      " | Observation.encounter | Procedure.enc" +
      "ounter | RiskAssessment.encounter | Serv" +
      "iceRequest.encounter | VisionPrescriptio" +
      "n.encounter\262\365\365\327\t\034\n\005focus\020\005\032\021Observation." +
      "focus\262\365\365\327\t\204\001\n\026gene-amino-acid-change\020\003\032h" +
      "Observation.extension(\'http://hl7.org/fh" +
      "ir/StructureDefinition/observation-genet" +
      "icsAminoAcidChangeName\')\262\365\365\327\tt\n\017gene-dna" +
      "variant\020\003\032_Observation.extension(\'http:/" +
      "/hl7.org/fhir/StructureDefinition/observ" +
      "ation-geneticsDnaVariant\')\262\365\365\327\tn\n\017gene-i" +
      "dentifier\020\004\032YObservation.extension(\'http" +
      "://hl7.org/fhir/StructureDefinition/obse" +
      "rvation-geneticsGene\')\262\365\365\327\t%\n\nhas-member" +
      "\020\005\032\025Observation.hasMember\262\365\365\327\t\205\007\n\nidenti" +
      "fier\020\004\032\364\006AllergyIntolerance.identifier |" +
      " CarePlan.identifier | CareTeam.identifi" +
      "er | Composition.identifier | Condition." +
      "identifier | Consent.identifier | Detect" +
      "edIssue.identifier | DeviceRequest.ident" +
      "ifier | DiagnosticReport.identifier | Do" +
      "cumentManifest.masterIdentifier | Docume" +
      "ntManifest.identifier | DocumentReferenc" +
      "e.masterIdentifier | DocumentReference.i" +
      "dentifier | Encounter.identifier | Episo" +
      "deOfCare.identifier | FamilyMemberHistor" +
      "y.identifier | Goal.identifier | Imaging" +
      "Study.identifier | Immunization.identifi" +
      "er | List.identifier | MedicationAdminis" +
      "tration.identifier | MedicationDispense." +
      "identifier | MedicationRequest.identifie" +
      "r | MedicationStatement.identifier | Nut" +
      "ritionOrder.identifier | Observation.ide" +
      "ntifier | Procedure.identifier | RiskAss" +
      "essment.identifier | ServiceRequest.iden" +
      "tifier | SupplyDelivery.identifier | Sup" +
      "plyRequest.identifier | VisionPrescripti" +
      "on.identifier\262\365\365\327\t\036\n\006method\020\004\032\022Observati" +
      "on.method\262\365\365\327\t\037\n\007part-of\020\005\032\022Observation." +
      "partOf\262\365\365\327\t\370\n\n\007patient\020\005\032\352\nAllergyIntole" +
      "rance.patient | CarePlan.subject.where(r" +
      "esolve() is Patient) | CareTeam.subject." +
      "where(resolve() is Patient) | ClinicalIm" +
      "pression.subject.where(resolve() is Pati" +
      "ent) | Composition.subject.where(resolve" +
      "() is Patient) | Condition.subject.where" +
      "(resolve() is Patient) | Consent.patient" +
      " | DetectedIssue.patient | DeviceRequest" +
      ".subject.where(resolve() is Patient) | D" +
      "eviceUseStatement.subject | DiagnosticRe" +
      "port.subject.where(resolve() is Patient)" +
      " | DocumentManifest.subject.where(resolv" +
      "e() is Patient) | DocumentReference.subj" +
      "ect.where(resolve() is Patient) | Encoun" +
      "ter.subject.where(resolve() is Patient) " +
      "| EpisodeOfCare.patient | FamilyMemberHi" +
      "story.patient | Flag.subject.where(resol" +
      "ve() is Patient) | Goal.subject.where(re" +
      "solve() is Patient) | ImagingStudy.subje" +
      "ct.where(resolve() is Patient) | Immuniz" +
      "ation.patient | List.subject.where(resol" +
      "ve() is Patient) | MedicationAdministrat" +
      "ion.subject.where(resolve() is Patient) " +
      "| MedicationDispense.subject.where(resol" +
      "ve() is Patient) | MedicationRequest.sub" +
      "ject.where(resolve() is Patient) | Medic" +
      "ationStatement.subject.where(resolve() i" +
      "s Patient) | NutritionOrder.patient | Ob" +
      "servation.subject.where(resolve() is Pat" +
      "ient) | Procedure.subject.where(resolve(" +
      ") is Patient) | RiskAssessment.subject.w" +
      "here(resolve() is Patient) | ServiceRequ" +
      "est.subject.where(resolve() is Patient) " +
      "| SupplyDelivery.patient | VisionPrescri" +
      "ption.patient\262\365\365\327\t$\n\tperformer\020\005\032\025Observ" +
      "ation.performer\262\365\365\327\t\"\n\010specimen\020\005\032\024Obser" +
      "vation.specimen\262\365\365\327\t\036\n\006status\020\004\032\022Observa" +
      "tion.status\262\365\365\327\t \n\007subject\020\005\032\023Observatio" +
      "n.subject\262\365\365\327\t9\n\rvalue-concept\020\004\032&(Obser" +
      "vation.value as CodeableConcept)\262\365\365\327\tO\n\n" +
      "value-date\020\002\032?(Observation.value as date" +
      "Time) | (Observation.value as Period)\262\365\365" +
      "\327\tX\n\016value-quantity\020\007\032D(Observation.valu" +
      "e as Quantity) | (Observation.value as S" +
      "ampledData)\262\365\365\327\t]\n\014value-string\020\003\032K(Obse" +
      "rvation.value as string) | (Observation." +
      "value as CodeableConcept).textJ\004\010\007\020\010J\004\010\037" +
      "\020 J\004\010 \020!B!\n\027com.google.fhir.r4.coreP\001\230\306\260" +
      "\265\007\004b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
          com.google.fhir.proto.Annotations.getDescriptor(),
          com.google.fhir.r4.core.Codes.getDescriptor(),
          com.google.fhir.r4.core.Datatypes.getDescriptor(),
        });
    internal_static_google_fhir_r4_core_LdlCholesterol_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_google_fhir_r4_core_LdlCholesterol_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_LdlCholesterol_descriptor,
        new java.lang.String[] { "Id", "Meta", "ImplicitRules", "Language", "Text", "Contained", "Extension", "ModifierExtension", "Identifier", "BasedOn", "PartOf", "Status", "Category", "Code", "Subject", "Focus", "Encounter", "Effective", "Issued", "Performer", "Value", "DataAbsentReason", "Interpretation", "Note", "BodySite", "Method", "Specimen", "Device", "ReferenceRange", "Component", });
    internal_static_google_fhir_r4_core_LdlCholesterol_StatusCode_descriptor =
      internal_static_google_fhir_r4_core_LdlCholesterol_descriptor.getNestedTypes().get(0);
    internal_static_google_fhir_r4_core_LdlCholesterol_StatusCode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_LdlCholesterol_StatusCode_descriptor,
        new java.lang.String[] { "Value", "Id", "Extension", });
    internal_static_google_fhir_r4_core_LdlCholesterol_EffectiveX_descriptor =
      internal_static_google_fhir_r4_core_LdlCholesterol_descriptor.getNestedTypes().get(1);
    internal_static_google_fhir_r4_core_LdlCholesterol_EffectiveX_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_LdlCholesterol_EffectiveX_descriptor,
        new java.lang.String[] { "DateTime", "Period", "Timing", "Instant", "Choice", });
    internal_static_google_fhir_r4_core_LdlCholesterol_ValueX_descriptor =
      internal_static_google_fhir_r4_core_LdlCholesterol_descriptor.getNestedTypes().get(2);
    internal_static_google_fhir_r4_core_LdlCholesterol_ValueX_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_LdlCholesterol_ValueX_descriptor,
        new java.lang.String[] { "Quantity", "Choice", });
    internal_static_google_fhir_r4_core_LdlCholesterol_ReferenceRange_descriptor =
      internal_static_google_fhir_r4_core_LdlCholesterol_descriptor.getNestedTypes().get(3);
    internal_static_google_fhir_r4_core_LdlCholesterol_ReferenceRange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_LdlCholesterol_ReferenceRange_descriptor,
        new java.lang.String[] { "Id", "Extension", "ModifierExtension", "High", "Text", });
    internal_static_google_fhir_r4_core_LdlCholesterol_Component_descriptor =
      internal_static_google_fhir_r4_core_LdlCholesterol_descriptor.getNestedTypes().get(4);
    internal_static_google_fhir_r4_core_LdlCholesterol_Component_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_LdlCholesterol_Component_descriptor,
        new java.lang.String[] { "Id", "Extension", "ModifierExtension", "Code", "Value", "DataAbsentReason", "Interpretation", "ReferenceRange", });
    internal_static_google_fhir_r4_core_LdlCholesterol_Component_ValueX_descriptor =
      internal_static_google_fhir_r4_core_LdlCholesterol_Component_descriptor.getNestedTypes().get(0);
    internal_static_google_fhir_r4_core_LdlCholesterol_Component_ValueX_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_LdlCholesterol_Component_ValueX_descriptor,
        new java.lang.String[] { "Quantity", "CodeableConcept", "StringValue", "Boolean", "Integer", "Range", "Ratio", "SampledData", "Time", "DateTime", "Period", "Choice", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.fhir.proto.Annotations.fhirPathConstraint);
    registry.add(com.google.fhir.proto.Annotations.fhirPathMessageConstraint);
    registry.add(com.google.fhir.proto.Annotations.fhirProfileBase);
    registry.add(com.google.fhir.proto.Annotations.fhirStructureDefinitionUrl);
    registry.add(com.google.fhir.proto.Annotations.fhirValuesetUrl);
    registry.add(com.google.fhir.proto.Annotations.fhirVersion);
    registry.add(com.google.fhir.proto.Annotations.isChoiceType);
    registry.add(com.google.fhir.proto.Annotations.searchParameter);
    registry.add(com.google.fhir.proto.Annotations.structureDefinitionKind);
    registry.add(com.google.fhir.proto.Annotations.validReferenceType);
    registry.add(com.google.fhir.proto.Annotations.validationRequirement);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.AnyProto.getDescriptor();
    com.google.fhir.proto.Annotations.getDescriptor();
    com.google.fhir.r4.core.Codes.getDescriptor();
    com.google.fhir.r4.core.Datatypes.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
