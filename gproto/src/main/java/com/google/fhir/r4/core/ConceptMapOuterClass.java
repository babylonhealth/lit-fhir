// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/google/fhir/proto/r4/core/resources/concept_map.proto

package com.google.fhir.r4.core;

public final class ConceptMapOuterClass {
  private ConceptMapOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_ConceptMap_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_ConceptMap_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_ConceptMap_StatusCode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_ConceptMap_StatusCode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_ConceptMap_SourceX_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_ConceptMap_SourceX_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_ConceptMap_TargetX_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_ConceptMap_TargetX_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_ConceptMap_Group_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_ConceptMap_Group_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_EquivalenceCode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_EquivalenceCode_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_OtherElement_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_OtherElement_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_ConceptMap_Group_Unmapped_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_ConceptMap_Group_Unmapped_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_fhir_r4_core_ConceptMap_Group_Unmapped_ModeCode_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_fhir_r4_core_ConceptMap_Group_Unmapped_ModeCode_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;proto/google/fhir/proto/r4/core/resour" +
      "ces/concept_map.proto\022\023google.fhir.r4.co" +
      "re\032\031google/protobuf/any.proto\032)proto/goo" +
      "gle/fhir/proto/annotations.proto\032+proto/" +
      "google/fhir/proto/r4/core/codes.proto\032/p" +
      "roto/google/fhir/proto/r4/core/datatypes" +
      ".proto\"\221b\n\nConceptMap\022#\n\002id\030\001 \001(\0132\027.goog" +
      "le.fhir.r4.core.Id\022\'\n\004meta\030\002 \001(\0132\031.googl" +
      "e.fhir.r4.core.Meta\0220\n\016implicit_rules\030\003 " +
      "\001(\0132\030.google.fhir.r4.core.Uri\022+\n\010languag" +
      "e\030\004 \001(\0132\031.google.fhir.r4.core.Code\022,\n\004te" +
      "xt\030\005 \001(\0132\036.google.fhir.r4.core.Narrative" +
      "\022\'\n\tcontained\030\006 \003(\0132\024.google.protobuf.An" +
      "y\0221\n\textension\030\010 \003(\0132\036.google.fhir.r4.co" +
      "re.Extension\022:\n\022modifier_extension\030\t \003(\013" +
      "2\036.google.fhir.r4.core.Extension\022%\n\003url\030" +
      "\n \001(\0132\030.google.fhir.r4.core.Uri\0223\n\nident" +
      "ifier\030\013 \001(\0132\037.google.fhir.r4.core.Identi" +
      "fier\022,\n\007version\030\014 \001(\0132\033.google.fhir.r4.c" +
      "ore.String\022)\n\004name\030\r \001(\0132\033.google.fhir.r" +
      "4.core.String\022*\n\005title\030\016 \001(\0132\033.google.fh" +
      "ir.r4.core.String\022B\n\006status\030\017 \001(\0132*.goog" +
      "le.fhir.r4.core.ConceptMap.StatusCodeB\006\360" +
      "\320\207\353\004\001\0222\n\014experimental\030\020 \001(\0132\034.google.fhi" +
      "r.r4.core.Boolean\022+\n\004date\030\021 \001(\0132\035.google" +
      ".fhir.r4.core.DateTime\022.\n\tpublisher\030\022 \001(" +
      "\0132\033.google.fhir.r4.core.String\0223\n\007contac" +
      "t\030\023 \003(\0132\".google.fhir.r4.core.ContactDet" +
      "ail\0222\n\013description\030\024 \001(\0132\035.google.fhir.r" +
      "4.core.Markdown\0226\n\013use_context\030\025 \003(\0132!.g" +
      "oogle.fhir.r4.core.UsageContext\022:\n\014juris" +
      "diction\030\026 \003(\0132$.google.fhir.r4.core.Code" +
      "ableConcept\022.\n\007purpose\030\027 \001(\0132\035.google.fh" +
      "ir.r4.core.Markdown\0220\n\tcopyright\030\030 \001(\0132\035" +
      ".google.fhir.r4.core.Markdown\0227\n\006source\030" +
      "\031 \001(\0132\'.google.fhir.r4.core.ConceptMap.S" +
      "ourceX\0227\n\006target\030\032 \001(\0132\'.google.fhir.r4." +
      "core.ConceptMap.TargetX\0224\n\005group\030\033 \003(\0132%" +
      ".google.fhir.r4.core.ConceptMap.Group\032\230\002" +
      "\n\nStatusCode\022?\n\005value\030\001 \001(\01620.google.fhi" +
      "r.r4.core.PublicationStatusCode.Value\022\'\n" +
      "\002id\030\002 \001(\0132\033.google.fhir.r4.core.String\0221" +
      "\n\textension\030\003 \003(\0132\036.google.fhir.r4.core." +
      "Extension:m\300\237\343\266\005\001\212\371\203\262\005/http://hl7.org/fh" +
      "ir/ValueSet/publication-status\232\265\216\223\006,http" +
      "://hl7.org/fhir/StructureDefinition/code" +
      "\032y\n\007SourceX\022\'\n\003uri\030\001 \001(\0132\030.google.fhir.r" +
      "4.core.UriH\000\0223\n\tcanonical\030\002 \001(\0132\036.google" +
      ".fhir.r4.core.CanonicalH\000:\006\240\203\203\350\006\001B\010\n\006cho" +
      "ice\032y\n\007TargetX\022\'\n\003uri\030\001 \001(\0132\030.google.fhi" +
      "r.r4.core.UriH\000\0223\n\tcanonical\030\002 \001(\0132\036.goo" +
      "gle.fhir.r4.core.CanonicalH\000:\006\240\203\203\350\006\001B\010\n\006" +
      "choice\032\252\027\n\005Group\022\'\n\002id\030\001 \001(\0132\033.google.fh" +
      "ir.r4.core.String\0221\n\textension\030\002 \003(\0132\036.g" +
      "oogle.fhir.r4.core.Extension\022:\n\022modifier" +
      "_extension\030\003 \003(\0132\036.google.fhir.r4.core.E" +
      "xtension\022(\n\006source\030\004 \001(\0132\030.google.fhir.r" +
      "4.core.Uri\0223\n\016source_version\030\005 \001(\0132\033.goo" +
      "gle.fhir.r4.core.String\022(\n\006target\030\006 \001(\0132" +
      "\030.google.fhir.r4.core.Uri\0223\n\016target_vers" +
      "ion\030\007 \001(\0132\033.google.fhir.r4.core.String\022L" +
      "\n\007element\030\010 \003(\01323.google.fhir.r4.core.Co" +
      "nceptMap.Group.SourceElementB\006\360\320\207\353\004\001\022@\n\010" +
      "unmapped\030\t \001(\0132..google.fhir.r4.core.Con" +
      "ceptMap.Group.Unmapped\032\274\r\n\rSourceElement" +
      "\022\'\n\002id\030\001 \001(\0132\033.google.fhir.r4.core.Strin" +
      "g\0221\n\textension\030\002 \003(\0132\036.google.fhir.r4.co" +
      "re.Extension\022:\n\022modifier_extension\030\003 \003(\013" +
      "2\036.google.fhir.r4.core.Extension\022\'\n\004code" +
      "\030\004 \001(\0132\031.google.fhir.r4.core.Code\022,\n\007dis" +
      "play\030\005 \001(\0132\033.google.fhir.r4.core.String\022" +
      "Q\n\006target\030\006 \003(\0132A.google.fhir.r4.core.Co" +
      "nceptMap.Group.SourceElement.TargetEleme" +
      "nt\032\350\n\n\rTargetElement\022\'\n\002id\030\001 \001(\0132\033.googl" +
      "e.fhir.r4.core.String\0221\n\textension\030\002 \003(\013" +
      "2\036.google.fhir.r4.core.Extension\022:\n\022modi" +
      "fier_extension\030\003 \003(\0132\036.google.fhir.r4.co" +
      "re.Extension\022\'\n\004code\030\004 \001(\0132\031.google.fhir" +
      ".r4.core.Code\022,\n\007display\030\005 \001(\0132\033.google." +
      "fhir.r4.core.String\022n\n\013equivalence\030\006 \001(\013" +
      "2Q.google.fhir.r4.core.ConceptMap.Group." +
      "SourceElement.TargetElement.EquivalenceC" +
      "odeB\006\360\320\207\353\004\001\022,\n\007comment\030\007 \001(\0132\033.google.fh" +
      "ir.r4.core.String\022b\n\ndepends_on\030\010 \003(\0132N." +
      "google.fhir.r4.core.ConceptMap.Group.Sou" +
      "rceElement.TargetElement.OtherElement\022_\n" +
      "\007product\030\t \003(\0132N.google.fhir.r4.core.Con" +
      "ceptMap.Group.SourceElement.TargetElemen" +
      "t.OtherElement\032\246\002\n\017EquivalenceCode\022C\n\005va" +
      "lue\030\001 \001(\01624.google.fhir.r4.core.ConceptM" +
      "apEquivalenceCode.Value\022\'\n\002id\030\002 \001(\0132\033.go" +
      "ogle.fhir.r4.core.String\0221\n\textension\030\003 " +
      "\003(\0132\036.google.fhir.r4.core.Extension:r\300\237\343" +
      "\266\005\001\212\371\203\262\0054http://hl7.org/fhir/ValueSet/co" +
      "ncept-map-equivalence\232\265\216\223\006,http://hl7.or" +
      "g/fhir/StructureDefinition/code\032\354\002\n\014Othe" +
      "rElement\022\'\n\002id\030\001 \001(\0132\033.google.fhir.r4.co" +
      "re.String\0221\n\textension\030\002 \003(\0132\036.google.fh" +
      "ir.r4.core.Extension\022:\n\022modifier_extensi" +
      "on\030\003 \003(\0132\036.google.fhir.r4.core.Extension" +
      "\0222\n\010property\030\004 \001(\0132\030.google.fhir.r4.core" +
      ".UriB\006\360\320\207\353\004\001\022.\n\006system\030\005 \001(\0132\036.google.fh" +
      "ir.r4.core.Canonical\0222\n\005value\030\006 \001(\0132\033.go" +
      "ogle.fhir.r4.core.StringB\006\360\320\207\353\004\001\022,\n\007disp" +
      "lay\030\007 \001(\0132\033.google.fhir.r4.core.String:m" +
      "\232\206\223\240\010gcomment.exists() or equivalence.em" +
      "pty() or ((equivalence != \'narrower\') an" +
      "d (equivalence != \'inexact\'))\032\373\005\n\010Unmapp" +
      "ed\022\'\n\002id\030\001 \001(\0132\033.google.fhir.r4.core.Str" +
      "ing\0221\n\textension\030\002 \003(\0132\036.google.fhir.r4." +
      "core.Extension\022:\n\022modifier_extension\030\003 \003" +
      "(\0132\036.google.fhir.r4.core.Extension\022M\n\004mo" +
      "de\030\004 \001(\01327.google.fhir.r4.core.ConceptMa" +
      "p.Group.Unmapped.ModeCodeB\006\360\320\207\353\004\001\022\'\n\004cod" +
      "e\030\005 \001(\0132\031.google.fhir.r4.core.Code\022,\n\007di" +
      "splay\030\006 \001(\0132\033.google.fhir.r4.core.String" +
      "\022+\n\003url\030\007 \001(\0132\036.google.fhir.r4.core.Cano" +
      "nical\032\246\002\n\010ModeCode\022I\n\005value\030\001 \001(\0162:.goog" +
      "le.fhir.r4.core.ConceptMapGroupUnmappedM" +
      "odeCode.Value\022\'\n\002id\030\002 \001(\0132\033.google.fhir." +
      "r4.core.String\0221\n\textension\030\003 \003(\0132\036.goog" +
      "le.fhir.r4.core.Extension:s\300\237\343\266\005\001\212\371\203\262\0055h" +
      "ttp://hl7.org/fhir/ValueSet/conceptmap-u" +
      "nmapped-mode\232\265\216\223\006,http://hl7.org/fhir/St" +
      "ructureDefinition/code:[\232\206\223\240\010&(mode = \'f" +
      "ixed\') implies code.exists()\232\206\223\240\010)(mode " +
      "= \'other-map\') implies url.exists():\256<\300\237" +
      "\343\266\005\003\262\376\344\227\0062http://hl7.org/fhir/StructureD" +
      "efinition/ConceptMap\262\365\365\327\t\244\006\n\007context\020\004\032\226" +
      "\006(CapabilityStatement.useContext.value a" +
      "s CodeableConcept) | (CodeSystem.useCont" +
      "ext.value as CodeableConcept) | (Compart" +
      "mentDefinition.useContext.value as Codea" +
      "bleConcept) | (ConceptMap.useContext.val" +
      "ue as CodeableConcept) | (GraphDefinitio" +
      "n.useContext.value as CodeableConcept) |" +
      " (ImplementationGuide.useContext.value a" +
      "s CodeableConcept) | (MessageDefinition." +
      "useContext.value as CodeableConcept) | (" +
      "NamingSystem.useContext.value as Codeabl" +
      "eConcept) | (OperationDefinition.useCont" +
      "ext.value as CodeableConcept) | (SearchP" +
      "arameter.useContext.value as CodeableCon" +
      "cept) | (StructureDefinition.useContext." +
      "value as CodeableConcept) | (StructureMa" +
      "p.useContext.value as CodeableConcept) |" +
      " (TerminologyCapabilities.useContext.val" +
      "ue as CodeableConcept) | (ValueSet.useCo" +
      "ntext.value as CodeableConcept)\262\365\365\327\t\330\n\n\020" +
      "context-quantity\020\007\032\301\n(CapabilityStatemen" +
      "t.useContext.value as Quantity) | (Capab" +
      "ilityStatement.useContext.value as Range" +
      ") | (CodeSystem.useContext.value as Quan" +
      "tity) | (CodeSystem.useContext.value as " +
      "Range) | (CompartmentDefinition.useConte" +
      "xt.value as Quantity) | (CompartmentDefi" +
      "nition.useContext.value as Range) | (Con" +
      "ceptMap.useContext.value as Quantity) | " +
      "(ConceptMap.useContext.value as Range) |" +
      " (GraphDefinition.useContext.value as Qu" +
      "antity) | (GraphDefinition.useContext.va" +
      "lue as Range) | (ImplementationGuide.use" +
      "Context.value as Quantity) | (Implementa" +
      "tionGuide.useContext.value as Range) | (" +
      "MessageDefinition.useContext.value as Qu" +
      "antity) | (MessageDefinition.useContext." +
      "value as Range) | (NamingSystem.useConte" +
      "xt.value as Quantity) | (NamingSystem.us" +
      "eContext.value as Range) | (OperationDef" +
      "inition.useContext.value as Quantity) | " +
      "(OperationDefinition.useContext.value as" +
      " Range) | (SearchParameter.useContext.va" +
      "lue as Quantity) | (SearchParameter.useC" +
      "ontext.value as Range) | (StructureDefin" +
      "ition.useContext.value as Quantity) | (S" +
      "tructureDefinition.useContext.value as R" +
      "ange) | (StructureMap.useContext.value a" +
      "s Quantity) | (StructureMap.useContext.v" +
      "alue as Range) | (TerminologyCapabilitie" +
      "s.useContext.value as Quantity) | (Termi" +
      "nologyCapabilities.useContext.value as R" +
      "ange) | (ValueSet.useContext.value as Qu" +
      "antity) | (ValueSet.useContext.value as " +
      "Range)\262\365\365\327\t\365\003\n\014context-type\020\004\032\342\003Capabili" +
      "tyStatement.useContext.code | CodeSystem" +
      ".useContext.code | CompartmentDefinition" +
      ".useContext.code | ConceptMap.useContext" +
      ".code | GraphDefinition.useContext.code " +
      "| ImplementationGuide.useContext.code | " +
      "MessageDefinition.useContext.code | Nami" +
      "ngSystem.useContext.code | OperationDefi" +
      "nition.useContext.code | SearchParameter" +
      ".useContext.code | StructureDefinition.u" +
      "seContext.code | StructureMap.useContext" +
      ".code | TerminologyCapabilities.useConte" +
      "xt.code | ValueSet.useContext.code\262\365\365\327\t\270" +
      "\003\n\025context-type-quantity\020\006\032\234\003CapabilityS" +
      "tatement.useContext | CodeSystem.useCont" +
      "ext | CompartmentDefinition.useContext |" +
      " ConceptMap.useContext | GraphDefinition" +
      ".useContext | ImplementationGuide.useCon" +
      "text | MessageDefinition.useContext | Na" +
      "mingSystem.useContext | OperationDefinit" +
      "ion.useContext | SearchParameter.useCont" +
      "ext | StructureDefinition.useContext | S" +
      "tructureMap.useContext | TerminologyCapa" +
      "bilities.useContext | ValueSet.useContex" +
      "t\262\365\365\327\t\265\003\n\022context-type-value\020\006\032\234\003Capabil" +
      "ityStatement.useContext | CodeSystem.use" +
      "Context | CompartmentDefinition.useConte" +
      "xt | ConceptMap.useContext | GraphDefini" +
      "tion.useContext | ImplementationGuide.us" +
      "eContext | MessageDefinition.useContext " +
      "| NamingSystem.useContext | OperationDef" +
      "inition.useContext | SearchParameter.use" +
      "Context | StructureDefinition.useContext" +
      " | StructureMap.useContext | Terminology" +
      "Capabilities.useContext | ValueSet.useCo" +
      "ntext\262\365\365\327\t\323\002\n\004date\020\002\032\310\002CapabilityStateme" +
      "nt.date | CodeSystem.date | CompartmentD" +
      "efinition.date | ConceptMap.date | Graph" +
      "Definition.date | ImplementationGuide.da" +
      "te | MessageDefinition.date | NamingSyst" +
      "em.date | OperationDefinition.date | Sea" +
      "rchParameter.date | StructureDefinition." +
      "date | StructureMap.date | TerminologyCa" +
      "pabilities.date | ValueSet.date\262\365\365\327\tA\n\td" +
      "ependson\020\010\0322ConceptMap.group.element.tar" +
      "get.dependsOn.property\262\365\365\327\t\274\003\n\013descripti" +
      "on\020\003\032\252\003CapabilityStatement.description |" +
      " CodeSystem.description | CompartmentDef" +
      "inition.description | ConceptMap.descrip" +
      "tion | GraphDefinition.description | Imp" +
      "lementationGuide.description | MessageDe" +
      "finition.description | NamingSystem.desc" +
      "ription | OperationDefinition.descriptio" +
      "n | SearchParameter.description | Struct" +
      "ureDefinition.description | StructureMap" +
      ".description | TerminologyCapabilities.d" +
      "escription | ValueSet.description\262\365\365\327\t\256\001" +
      "\n\nidentifier\020\004\032\235\001CodeSystem.identifier |" +
      " ConceptMap.identifier | MessageDefiniti" +
      "on.identifier | StructureDefinition.iden" +
      "tifier | StructureMap.identifier | Value" +
      "Set.identifier\262\365\365\327\t\246\003\n\014jurisdiction\020\004\032\223\003" +
      "CapabilityStatement.jurisdiction | CodeS" +
      "ystem.jurisdiction | ConceptMap.jurisdic" +
      "tion | GraphDefinition.jurisdiction | Im" +
      "plementationGuide.jurisdiction | Message" +
      "Definition.jurisdiction | NamingSystem.j" +
      "urisdiction | OperationDefinition.jurisd" +
      "iction | SearchParameter.jurisdiction | " +
      "StructureDefinition.jurisdiction | Struc" +
      "tureMap.jurisdiction | TerminologyCapabi" +
      "lities.jurisdiction | ValueSet.jurisdict" +
      "ion\262\365\365\327\t\323\002\n\004name\020\003\032\310\002CapabilityStatement" +
      ".name | CodeSystem.name | CompartmentDef" +
      "inition.name | ConceptMap.name | GraphDe" +
      "finition.name | ImplementationGuide.name" +
      " | MessageDefinition.name | NamingSystem" +
      ".name | OperationDefinition.name | Searc" +
      "hParameter.name | StructureDefinition.na" +
      "me | StructureMap.name | TerminologyCapa" +
      "bilities.name | ValueSet.name\262\365\365\327\t(\n\005oth" +
      "er\020\005\032\035ConceptMap.group.unmapped.url\262\365\365\327\t" +
      "=\n\007product\020\010\0320ConceptMap.group.element.t" +
      "arget.product.property\262\365\365\327\t\236\003\n\tpublisher" +
      "\020\003\032\216\003CapabilityStatement.publisher | Cod" +
      "eSystem.publisher | CompartmentDefinitio" +
      "n.publisher | ConceptMap.publisher | Gra" +
      "phDefinition.publisher | ImplementationG" +
      "uide.publisher | MessageDefinition.publi" +
      "sher | NamingSystem.publisher | Operatio" +
      "nDefinition.publisher | SearchParameter." +
      "publisher | StructureDefinition.publishe" +
      "r | StructureMap.publisher | Terminology" +
      "Capabilities.publisher | ValueSet.publis" +
      "her\262\365\365\327\t,\n\006source\020\005\032 (ConceptMap.source " +
      "as canonical)\262\365\365\327\t.\n\013source-code\020\004\032\035Conc" +
      "eptMap.group.element.code\262\365\365\327\t*\n\rsource-" +
      "system\020\010\032\027ConceptMap.group.source\262\365\365\327\t*\n" +
      "\nsource-uri\020\005\032\032(ConceptMap.source as uri" +
      ")\262\365\365\327\t\361\002\n\006status\020\004\032\344\002CapabilityStatement" +
      ".status | CodeSystem.status | Compartmen" +
      "tDefinition.status | ConceptMap.status |" +
      " GraphDefinition.status | Implementation" +
      "Guide.status | MessageDefinition.status " +
      "| NamingSystem.status | OperationDefinit" +
      "ion.status | SearchParameter.status | St" +
      "ructureDefinition.status | StructureMap." +
      "status | TerminologyCapabilities.status " +
      "| ValueSet.status\262\365\365\327\t,\n\006target\020\005\032 (Conc" +
      "eptMap.target as canonical)\262\365\365\327\t5\n\013targe" +
      "t-code\020\004\032$ConceptMap.group.element.targe" +
      "t.code\262\365\365\327\t*\n\rtarget-system\020\010\032\027ConceptMa" +
      "p.group.target\262\365\365\327\t*\n\ntarget-uri\020\005\032\032(Con" +
      "ceptMap.target as uri)\262\365\365\327\t\377\001\n\005title\020\003\032\363" +
      "\001CapabilityStatement.title | CodeSystem." +
      "title | ConceptMap.title | Implementatio" +
      "nGuide.title | MessageDefinition.title |" +
      " OperationDefinition.title | StructureDe" +
      "finition.title | StructureMap.title | Te" +
      "rminologyCapabilities.title | ValueSet.t" +
      "itle\262\365\365\327\t\261\002\n\003url\020\010\032\247\002CapabilityStatement" +
      ".url | CodeSystem.url | CompartmentDefin" +
      "ition.url | ConceptMap.url | GraphDefini" +
      "tion.url | ImplementationGuide.url | Mes" +
      "sageDefinition.url | OperationDefinition" +
      ".url | SearchParameter.url | StructureDe" +
      "finition.url | StructureMap.url | Termin" +
      "ologyCapabilities.url | ValueSet.url\262\365\365\327" +
      "\t\351\002\n\007version\020\004\032\333\002CapabilityStatement.ver" +
      "sion | CodeSystem.version | CompartmentD" +
      "efinition.version | ConceptMap.version |" +
      " GraphDefinition.version | Implementatio" +
      "nGuide.version | MessageDefinition.versi" +
      "on | OperationDefinition.version | Searc" +
      "hParameter.version | StructureDefinition" +
      ".version | StructureMap.version | Termin" +
      "ologyCapabilities.version | ValueSet.ver" +
      "sionJ\004\010\007\020\010B!\n\027com.google.fhir.r4.coreP\001\230" +
      "\306\260\265\007\004b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
          com.google.fhir.proto.Annotations.getDescriptor(),
          com.google.fhir.r4.core.Codes.getDescriptor(),
          com.google.fhir.r4.core.Datatypes.getDescriptor(),
        });
    internal_static_google_fhir_r4_core_ConceptMap_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_google_fhir_r4_core_ConceptMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_ConceptMap_descriptor,
        new java.lang.String[] { "Id", "Meta", "ImplicitRules", "Language", "Text", "Contained", "Extension", "ModifierExtension", "Url", "Identifier", "Version", "Name", "Title", "Status", "Experimental", "Date", "Publisher", "Contact", "Description", "UseContext", "Jurisdiction", "Purpose", "Copyright", "Source", "Target", "Group", });
    internal_static_google_fhir_r4_core_ConceptMap_StatusCode_descriptor =
      internal_static_google_fhir_r4_core_ConceptMap_descriptor.getNestedTypes().get(0);
    internal_static_google_fhir_r4_core_ConceptMap_StatusCode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_ConceptMap_StatusCode_descriptor,
        new java.lang.String[] { "Value", "Id", "Extension", });
    internal_static_google_fhir_r4_core_ConceptMap_SourceX_descriptor =
      internal_static_google_fhir_r4_core_ConceptMap_descriptor.getNestedTypes().get(1);
    internal_static_google_fhir_r4_core_ConceptMap_SourceX_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_ConceptMap_SourceX_descriptor,
        new java.lang.String[] { "Uri", "Canonical", "Choice", });
    internal_static_google_fhir_r4_core_ConceptMap_TargetX_descriptor =
      internal_static_google_fhir_r4_core_ConceptMap_descriptor.getNestedTypes().get(2);
    internal_static_google_fhir_r4_core_ConceptMap_TargetX_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_ConceptMap_TargetX_descriptor,
        new java.lang.String[] { "Uri", "Canonical", "Choice", });
    internal_static_google_fhir_r4_core_ConceptMap_Group_descriptor =
      internal_static_google_fhir_r4_core_ConceptMap_descriptor.getNestedTypes().get(3);
    internal_static_google_fhir_r4_core_ConceptMap_Group_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_ConceptMap_Group_descriptor,
        new java.lang.String[] { "Id", "Extension", "ModifierExtension", "Source", "SourceVersion", "Target", "TargetVersion", "Element", "Unmapped", });
    internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_descriptor =
      internal_static_google_fhir_r4_core_ConceptMap_Group_descriptor.getNestedTypes().get(0);
    internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_descriptor,
        new java.lang.String[] { "Id", "Extension", "ModifierExtension", "Code", "Display", "Target", });
    internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_descriptor =
      internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_descriptor.getNestedTypes().get(0);
    internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_descriptor,
        new java.lang.String[] { "Id", "Extension", "ModifierExtension", "Code", "Display", "Equivalence", "Comment", "DependsOn", "Product", });
    internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_EquivalenceCode_descriptor =
      internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_descriptor.getNestedTypes().get(0);
    internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_EquivalenceCode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_EquivalenceCode_descriptor,
        new java.lang.String[] { "Value", "Id", "Extension", });
    internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_OtherElement_descriptor =
      internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_descriptor.getNestedTypes().get(1);
    internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_OtherElement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_ConceptMap_Group_SourceElement_TargetElement_OtherElement_descriptor,
        new java.lang.String[] { "Id", "Extension", "ModifierExtension", "Property", "System", "Value", "Display", });
    internal_static_google_fhir_r4_core_ConceptMap_Group_Unmapped_descriptor =
      internal_static_google_fhir_r4_core_ConceptMap_Group_descriptor.getNestedTypes().get(1);
    internal_static_google_fhir_r4_core_ConceptMap_Group_Unmapped_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_ConceptMap_Group_Unmapped_descriptor,
        new java.lang.String[] { "Id", "Extension", "ModifierExtension", "Mode", "Code", "Display", "Url", });
    internal_static_google_fhir_r4_core_ConceptMap_Group_Unmapped_ModeCode_descriptor =
      internal_static_google_fhir_r4_core_ConceptMap_Group_Unmapped_descriptor.getNestedTypes().get(0);
    internal_static_google_fhir_r4_core_ConceptMap_Group_Unmapped_ModeCode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_fhir_r4_core_ConceptMap_Group_Unmapped_ModeCode_descriptor,
        new java.lang.String[] { "Value", "Id", "Extension", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.fhir.proto.Annotations.fhirPathMessageConstraint);
    registry.add(com.google.fhir.proto.Annotations.fhirProfileBase);
    registry.add(com.google.fhir.proto.Annotations.fhirStructureDefinitionUrl);
    registry.add(com.google.fhir.proto.Annotations.fhirValuesetUrl);
    registry.add(com.google.fhir.proto.Annotations.fhirVersion);
    registry.add(com.google.fhir.proto.Annotations.isChoiceType);
    registry.add(com.google.fhir.proto.Annotations.searchParameter);
    registry.add(com.google.fhir.proto.Annotations.structureDefinitionKind);
    registry.add(com.google.fhir.proto.Annotations.validationRequirement);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.AnyProto.getDescriptor();
    com.google.fhir.proto.Annotations.getDescriptor();
    com.google.fhir.r4.core.Codes.getDescriptor();
    com.google.fhir.r4.core.Datatypes.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
