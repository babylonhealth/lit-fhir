// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/r4/core/datatypes.proto

package com.google.fhir.r4.core;

public interface SampledDataOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.fhir.r4.core.SampledData)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Unique id for inter-element referencing
   * </pre>
   *
   * <code>.google.fhir.r4.core.String id = 1;</code>
   *
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   *
   *
   * <pre>
   * Unique id for inter-element referencing
   * </pre>
   *
   * <code>.google.fhir.r4.core.String id = 1;</code>
   *
   * @return The id.
   */
  com.google.fhir.r4.core.String getId();
  /**
   *
   *
   * <pre>
   * Unique id for inter-element referencing
   * </pre>
   *
   * <code>.google.fhir.r4.core.String id = 1;</code>
   */
  com.google.fhir.r4.core.StringOrBuilder getIdOrBuilder();

  /**
   *
   *
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  java.util.List<com.google.fhir.r4.core.Extension> getExtensionList();
  /**
   *
   *
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  com.google.fhir.r4.core.Extension getExtension(int index);
  /**
   *
   *
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  int getExtensionCount();
  /**
   *
   *
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> getExtensionOrBuilderList();
  /**
   *
   *
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  com.google.fhir.r4.core.ExtensionOrBuilder getExtensionOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Zero value and units
   * </pre>
   *
   * <code>
   * .google.fhir.r4.core.SimpleQuantity origin = 3 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
   * </code>
   *
   * @return Whether the origin field is set.
   */
  boolean hasOrigin();
  /**
   *
   *
   * <pre>
   * Zero value and units
   * </pre>
   *
   * <code>
   * .google.fhir.r4.core.SimpleQuantity origin = 3 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
   * </code>
   *
   * @return The origin.
   */
  com.google.fhir.r4.core.SimpleQuantity getOrigin();
  /**
   *
   *
   * <pre>
   * Zero value and units
   * </pre>
   *
   * <code>
   * .google.fhir.r4.core.SimpleQuantity origin = 3 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
   * </code>
   */
  com.google.fhir.r4.core.SimpleQuantityOrBuilder getOriginOrBuilder();

  /**
   *
   *
   * <pre>
   * Number of milliseconds between samples
   * </pre>
   *
   * <code>
   * .google.fhir.r4.core.Decimal period = 4 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
   * </code>
   *
   * @return Whether the period field is set.
   */
  boolean hasPeriod();
  /**
   *
   *
   * <pre>
   * Number of milliseconds between samples
   * </pre>
   *
   * <code>
   * .google.fhir.r4.core.Decimal period = 4 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
   * </code>
   *
   * @return The period.
   */
  com.google.fhir.r4.core.Decimal getPeriod();
  /**
   *
   *
   * <pre>
   * Number of milliseconds between samples
   * </pre>
   *
   * <code>
   * .google.fhir.r4.core.Decimal period = 4 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
   * </code>
   */
  com.google.fhir.r4.core.DecimalOrBuilder getPeriodOrBuilder();

  /**
   *
   *
   * <pre>
   * Multiply data by this before adding to origin
   * </pre>
   *
   * <code>.google.fhir.r4.core.Decimal factor = 5;</code>
   *
   * @return Whether the factor field is set.
   */
  boolean hasFactor();
  /**
   *
   *
   * <pre>
   * Multiply data by this before adding to origin
   * </pre>
   *
   * <code>.google.fhir.r4.core.Decimal factor = 5;</code>
   *
   * @return The factor.
   */
  com.google.fhir.r4.core.Decimal getFactor();
  /**
   *
   *
   * <pre>
   * Multiply data by this before adding to origin
   * </pre>
   *
   * <code>.google.fhir.r4.core.Decimal factor = 5;</code>
   */
  com.google.fhir.r4.core.DecimalOrBuilder getFactorOrBuilder();

  /**
   *
   *
   * <pre>
   * Lower limit of detection
   * </pre>
   *
   * <code>.google.fhir.r4.core.Decimal lower_limit = 6;</code>
   *
   * @return Whether the lowerLimit field is set.
   */
  boolean hasLowerLimit();
  /**
   *
   *
   * <pre>
   * Lower limit of detection
   * </pre>
   *
   * <code>.google.fhir.r4.core.Decimal lower_limit = 6;</code>
   *
   * @return The lowerLimit.
   */
  com.google.fhir.r4.core.Decimal getLowerLimit();
  /**
   *
   *
   * <pre>
   * Lower limit of detection
   * </pre>
   *
   * <code>.google.fhir.r4.core.Decimal lower_limit = 6;</code>
   */
  com.google.fhir.r4.core.DecimalOrBuilder getLowerLimitOrBuilder();

  /**
   *
   *
   * <pre>
   * Upper limit of detection
   * </pre>
   *
   * <code>.google.fhir.r4.core.Decimal upper_limit = 7;</code>
   *
   * @return Whether the upperLimit field is set.
   */
  boolean hasUpperLimit();
  /**
   *
   *
   * <pre>
   * Upper limit of detection
   * </pre>
   *
   * <code>.google.fhir.r4.core.Decimal upper_limit = 7;</code>
   *
   * @return The upperLimit.
   */
  com.google.fhir.r4.core.Decimal getUpperLimit();
  /**
   *
   *
   * <pre>
   * Upper limit of detection
   * </pre>
   *
   * <code>.google.fhir.r4.core.Decimal upper_limit = 7;</code>
   */
  com.google.fhir.r4.core.DecimalOrBuilder getUpperLimitOrBuilder();

  /**
   *
   *
   * <pre>
   * Number of sample points at each time point
   * </pre>
   *
   * <code>
   * .google.fhir.r4.core.PositiveInt dimensions = 8 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
   * </code>
   *
   * @return Whether the dimensions field is set.
   */
  boolean hasDimensions();
  /**
   *
   *
   * <pre>
   * Number of sample points at each time point
   * </pre>
   *
   * <code>
   * .google.fhir.r4.core.PositiveInt dimensions = 8 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
   * </code>
   *
   * @return The dimensions.
   */
  com.google.fhir.r4.core.PositiveInt getDimensions();
  /**
   *
   *
   * <pre>
   * Number of sample points at each time point
   * </pre>
   *
   * <code>
   * .google.fhir.r4.core.PositiveInt dimensions = 8 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];
   * </code>
   */
  com.google.fhir.r4.core.PositiveIntOrBuilder getDimensionsOrBuilder();

  /**
   *
   *
   * <pre>
   * Decimal values with spaces, or "E" | "U" | "L"
   * </pre>
   *
   * <code>.google.fhir.r4.core.String data = 9;</code>
   *
   * @return Whether the data field is set.
   */
  boolean hasData();
  /**
   *
   *
   * <pre>
   * Decimal values with spaces, or "E" | "U" | "L"
   * </pre>
   *
   * <code>.google.fhir.r4.core.String data = 9;</code>
   *
   * @return The data.
   */
  com.google.fhir.r4.core.String getData();
  /**
   *
   *
   * <pre>
   * Decimal values with spaces, or "E" | "U" | "L"
   * </pre>
   *
   * <code>.google.fhir.r4.core.String data = 9;</code>
   */
  com.google.fhir.r4.core.StringOrBuilder getDataOrBuilder();
}
