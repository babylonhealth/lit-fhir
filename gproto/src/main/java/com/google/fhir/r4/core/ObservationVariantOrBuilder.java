// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/google/fhir/proto/r4/core/extensions.proto

package com.google.fhir.r4.core;

public interface ObservationVariantOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.fhir.r4.core.ObservationVariant)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Unique id for inter-element referencing
   * </pre>
   *
   * <code>.google.fhir.r4.core.String id = 1;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * Unique id for inter-element referencing
   * </pre>
   *
   * <code>.google.fhir.r4.core.String id = 1;</code>
   * @return The id.
   */
  com.google.fhir.r4.core.String getId();
  /**
   * <pre>
   * Unique id for inter-element referencing
   * </pre>
   *
   * <code>.google.fhir.r4.core.String id = 1;</code>
   */
  com.google.fhir.r4.core.StringOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  java.util.List<com.google.fhir.r4.core.Extension> 
      getExtensionList();
  /**
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  com.google.fhir.r4.core.Extension getExtension(int index);
  /**
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  int getExtensionCount();
  /**
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
      getExtensionOrBuilderList();
  /**
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  com.google.fhir.r4.core.ExtensionOrBuilder getExtensionOrBuilder(
      int index);

  /**
   * <pre>
   * HGVS nomenclature for observed DNA sequence variant
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept name = 4 [json_name = "Name"];</code>
   * @return Whether the name field is set.
   */
  boolean hasName();
  /**
   * <pre>
   * HGVS nomenclature for observed DNA sequence variant
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept name = 4 [json_name = "Name"];</code>
   * @return The name.
   */
  com.google.fhir.r4.core.CodeableConcept getName();
  /**
   * <pre>
   * HGVS nomenclature for observed DNA sequence variant
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept name = 4 [json_name = "Name"];</code>
   */
  com.google.fhir.r4.core.CodeableConceptOrBuilder getNameOrBuilder();

  /**
   * <pre>
   * DNA sequence variant ID
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept id_slice = 5 [json_name = "IdSlice", (.google.fhir.proto.fhir_inlined_extension_url) = "Id"];</code>
   * @return Whether the idSlice field is set.
   */
  boolean hasIdSlice();
  /**
   * <pre>
   * DNA sequence variant ID
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept id_slice = 5 [json_name = "IdSlice", (.google.fhir.proto.fhir_inlined_extension_url) = "Id"];</code>
   * @return The idSlice.
   */
  com.google.fhir.r4.core.CodeableConcept getIdSlice();
  /**
   * <pre>
   * DNA sequence variant ID
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept id_slice = 5 [json_name = "IdSlice", (.google.fhir.proto.fhir_inlined_extension_url) = "Id"];</code>
   */
  com.google.fhir.r4.core.CodeableConceptOrBuilder getIdSliceOrBuilder();

  /**
   * <pre>
   * DNA sequence variant type
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept type = 6 [json_name = "Type"];</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * DNA sequence variant type
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept type = 6 [json_name = "Type"];</code>
   * @return The type.
   */
  com.google.fhir.r4.core.CodeableConcept getType();
  /**
   * <pre>
   * DNA sequence variant type
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept type = 6 [json_name = "Type"];</code>
   */
  com.google.fhir.r4.core.CodeableConceptOrBuilder getTypeOrBuilder();
}
