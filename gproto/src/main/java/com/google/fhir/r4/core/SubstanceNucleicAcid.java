// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/google/fhir/proto/r4/core/resources/substance_nucleic_acid.proto

package com.google.fhir.r4.core;

/**
 * <pre>
 * Auto-generated from StructureDefinition for SubstanceNucleicAcid, last
 * updated 2019-11-01T09:29:23.356+11:00. Nucleic acids are defined by three
 * distinct elements: the base, sugar and linkage. Individual substance/moiety
 * IDs will be created for each of these elements. The nucleotide sequence will
 * be always entered in the 5’-3’ direction. See
 * http://hl7.org/fhir/StructureDefinition/SubstanceNucleicAcid
 * </pre>
 *
 * Protobuf type {@code google.fhir.r4.core.SubstanceNucleicAcid}
 */
public final class SubstanceNucleicAcid extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.fhir.r4.core.SubstanceNucleicAcid)
    SubstanceNucleicAcidOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SubstanceNucleicAcid.newBuilder() to construct.
  private SubstanceNucleicAcid(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SubstanceNucleicAcid() {
    contained_ = java.util.Collections.emptyList();
    extension_ = java.util.Collections.emptyList();
    modifierExtension_ = java.util.Collections.emptyList();
    subunit_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SubstanceNucleicAcid();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SubstanceNucleicAcid(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.fhir.r4.core.Id.Builder subBuilder = null;
            if (id_ != null) {
              subBuilder = id_.toBuilder();
            }
            id_ = input.readMessage(com.google.fhir.r4.core.Id.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(id_);
              id_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.fhir.r4.core.Meta.Builder subBuilder = null;
            if (meta_ != null) {
              subBuilder = meta_.toBuilder();
            }
            meta_ = input.readMessage(com.google.fhir.r4.core.Meta.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(meta_);
              meta_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.fhir.r4.core.Uri.Builder subBuilder = null;
            if (implicitRules_ != null) {
              subBuilder = implicitRules_.toBuilder();
            }
            implicitRules_ = input.readMessage(com.google.fhir.r4.core.Uri.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(implicitRules_);
              implicitRules_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.fhir.r4.core.Code.Builder subBuilder = null;
            if (language_ != null) {
              subBuilder = language_.toBuilder();
            }
            language_ = input.readMessage(com.google.fhir.r4.core.Code.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(language_);
              language_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.fhir.r4.core.Narrative.Builder subBuilder = null;
            if (text_ != null) {
              subBuilder = text_.toBuilder();
            }
            text_ = input.readMessage(com.google.fhir.r4.core.Narrative.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(text_);
              text_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              contained_ = new java.util.ArrayList<com.google.protobuf.Any>();
              mutable_bitField0_ |= 0x00000001;
            }
            contained_.add(
                input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry));
            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              extension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>();
              mutable_bitField0_ |= 0x00000002;
            }
            extension_.add(
                input.readMessage(com.google.fhir.r4.core.Extension.parser(), extensionRegistry));
            break;
          }
          case 74: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              modifierExtension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>();
              mutable_bitField0_ |= 0x00000004;
            }
            modifierExtension_.add(
                input.readMessage(com.google.fhir.r4.core.Extension.parser(), extensionRegistry));
            break;
          }
          case 82: {
            com.google.fhir.r4.core.CodeableConcept.Builder subBuilder = null;
            if (sequenceType_ != null) {
              subBuilder = sequenceType_.toBuilder();
            }
            sequenceType_ = input.readMessage(com.google.fhir.r4.core.CodeableConcept.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(sequenceType_);
              sequenceType_ = subBuilder.buildPartial();
            }

            break;
          }
          case 90: {
            com.google.fhir.r4.core.Integer.Builder subBuilder = null;
            if (numberOfSubunits_ != null) {
              subBuilder = numberOfSubunits_.toBuilder();
            }
            numberOfSubunits_ = input.readMessage(com.google.fhir.r4.core.Integer.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(numberOfSubunits_);
              numberOfSubunits_ = subBuilder.buildPartial();
            }

            break;
          }
          case 98: {
            com.google.fhir.r4.core.String.Builder subBuilder = null;
            if (areaOfHybridisation_ != null) {
              subBuilder = areaOfHybridisation_.toBuilder();
            }
            areaOfHybridisation_ = input.readMessage(com.google.fhir.r4.core.String.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(areaOfHybridisation_);
              areaOfHybridisation_ = subBuilder.buildPartial();
            }

            break;
          }
          case 106: {
            com.google.fhir.r4.core.CodeableConcept.Builder subBuilder = null;
            if (oligoNucleotideType_ != null) {
              subBuilder = oligoNucleotideType_.toBuilder();
            }
            oligoNucleotideType_ = input.readMessage(com.google.fhir.r4.core.CodeableConcept.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(oligoNucleotideType_);
              oligoNucleotideType_ = subBuilder.buildPartial();
            }

            break;
          }
          case 114: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              subunit_ = new java.util.ArrayList<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit>();
              mutable_bitField0_ |= 0x00000008;
            }
            subunit_.add(
                input.readMessage(com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        contained_ = java.util.Collections.unmodifiableList(contained_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        extension_ = java.util.Collections.unmodifiableList(extension_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        modifierExtension_ = java.util.Collections.unmodifiableList(modifierExtension_);
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        subunit_ = java.util.Collections.unmodifiableList(subunit_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.fhir.r4.core.SubstanceNucleicAcid.class, com.google.fhir.r4.core.SubstanceNucleicAcid.Builder.class);
  }

  public interface SubunitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.fhir.r4.core.SubstanceNucleicAcid.Subunit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique id for inter-element referencing
     * </pre>
     *
     * <code>.google.fhir.r4.core.String id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * Unique id for inter-element referencing
     * </pre>
     *
     * <code>.google.fhir.r4.core.String id = 1;</code>
     * @return The id.
     */
    com.google.fhir.r4.core.String getId();
    /**
     * <pre>
     * Unique id for inter-element referencing
     * </pre>
     *
     * <code>.google.fhir.r4.core.String id = 1;</code>
     */
    com.google.fhir.r4.core.StringOrBuilder getIdOrBuilder();

    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
     */
    java.util.List<com.google.fhir.r4.core.Extension> 
        getExtensionList();
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
     */
    com.google.fhir.r4.core.Extension getExtension(int index);
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
     */
    int getExtensionCount();
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
     */
    java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
        getExtensionOrBuilderList();
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
     */
    com.google.fhir.r4.core.ExtensionOrBuilder getExtensionOrBuilder(
        int index);

    /**
     * <pre>
     * Extensions that cannot be ignored even if unrecognized
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
     */
    java.util.List<com.google.fhir.r4.core.Extension> 
        getModifierExtensionList();
    /**
     * <pre>
     * Extensions that cannot be ignored even if unrecognized
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
     */
    com.google.fhir.r4.core.Extension getModifierExtension(int index);
    /**
     * <pre>
     * Extensions that cannot be ignored even if unrecognized
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
     */
    int getModifierExtensionCount();
    /**
     * <pre>
     * Extensions that cannot be ignored even if unrecognized
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
     */
    java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
        getModifierExtensionOrBuilderList();
    /**
     * <pre>
     * Extensions that cannot be ignored even if unrecognized
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
     */
    com.google.fhir.r4.core.ExtensionOrBuilder getModifierExtensionOrBuilder(
        int index);

    /**
     * <pre>
     * Index of linear sequences of nucleic acids in order of decreasing length.
     * Sequences of the same length will be ordered by molecular weight.
     * Subunits that have identical sequences will be repeated and have
     * sequential subscripts
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
     * @return Whether the subunit field is set.
     */
    boolean hasSubunit();
    /**
     * <pre>
     * Index of linear sequences of nucleic acids in order of decreasing length.
     * Sequences of the same length will be ordered by molecular weight.
     * Subunits that have identical sequences will be repeated and have
     * sequential subscripts
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
     * @return The subunit.
     */
    com.google.fhir.r4.core.Integer getSubunit();
    /**
     * <pre>
     * Index of linear sequences of nucleic acids in order of decreasing length.
     * Sequences of the same length will be ordered by molecular weight.
     * Subunits that have identical sequences will be repeated and have
     * sequential subscripts
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
     */
    com.google.fhir.r4.core.IntegerOrBuilder getSubunitOrBuilder();

    /**
     * <pre>
     * Actual nucleotide sequence notation from 5' to 3' end using standard
     * single letter codes. In addition to the base sequence, sugar and type of
     * phosphate or non-phosphate linkage should also be captured
     * </pre>
     *
     * <code>.google.fhir.r4.core.String sequence = 5;</code>
     * @return Whether the sequence field is set.
     */
    boolean hasSequence();
    /**
     * <pre>
     * Actual nucleotide sequence notation from 5' to 3' end using standard
     * single letter codes. In addition to the base sequence, sugar and type of
     * phosphate or non-phosphate linkage should also be captured
     * </pre>
     *
     * <code>.google.fhir.r4.core.String sequence = 5;</code>
     * @return The sequence.
     */
    com.google.fhir.r4.core.String getSequence();
    /**
     * <pre>
     * Actual nucleotide sequence notation from 5' to 3' end using standard
     * single letter codes. In addition to the base sequence, sugar and type of
     * phosphate or non-phosphate linkage should also be captured
     * </pre>
     *
     * <code>.google.fhir.r4.core.String sequence = 5;</code>
     */
    com.google.fhir.r4.core.StringOrBuilder getSequenceOrBuilder();

    /**
     * <pre>
     * The length of the sequence shall be captured
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer length = 6;</code>
     * @return Whether the length field is set.
     */
    boolean hasLength();
    /**
     * <pre>
     * The length of the sequence shall be captured
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer length = 6;</code>
     * @return The length.
     */
    com.google.fhir.r4.core.Integer getLength();
    /**
     * <pre>
     * The length of the sequence shall be captured
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer length = 6;</code>
     */
    com.google.fhir.r4.core.IntegerOrBuilder getLengthOrBuilder();

    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
     * @return Whether the sequenceAttachment field is set.
     */
    boolean hasSequenceAttachment();
    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
     * @return The sequenceAttachment.
     */
    com.google.fhir.r4.core.Attachment getSequenceAttachment();
    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
     */
    com.google.fhir.r4.core.AttachmentOrBuilder getSequenceAttachmentOrBuilder();

    /**
     * <pre>
     * The nucleotide present at the 5’ terminal shall be specified based on a
     * controlled vocabulary. Since the sequence is represented from the 5' to
     * the 3' end, the 5’ prime nucleotide is the letter at the first position
     * in the sequence. A separate representation would be redundant
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
     * @return Whether the fivePrime field is set.
     */
    boolean hasFivePrime();
    /**
     * <pre>
     * The nucleotide present at the 5’ terminal shall be specified based on a
     * controlled vocabulary. Since the sequence is represented from the 5' to
     * the 3' end, the 5’ prime nucleotide is the letter at the first position
     * in the sequence. A separate representation would be redundant
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
     * @return The fivePrime.
     */
    com.google.fhir.r4.core.CodeableConcept getFivePrime();
    /**
     * <pre>
     * The nucleotide present at the 5’ terminal shall be specified based on a
     * controlled vocabulary. Since the sequence is represented from the 5' to
     * the 3' end, the 5’ prime nucleotide is the letter at the first position
     * in the sequence. A separate representation would be redundant
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
     */
    com.google.fhir.r4.core.CodeableConceptOrBuilder getFivePrimeOrBuilder();

    /**
     * <pre>
     * The nucleotide present at the 3’ terminal shall be specified based on a
     * controlled vocabulary. Since the sequence is represented from the 5' to
     * the 3' end, the 5’ prime nucleotide is the letter at the last position in
     * the sequence. A separate representation would be redundant
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
     * @return Whether the threePrime field is set.
     */
    boolean hasThreePrime();
    /**
     * <pre>
     * The nucleotide present at the 3’ terminal shall be specified based on a
     * controlled vocabulary. Since the sequence is represented from the 5' to
     * the 3' end, the 5’ prime nucleotide is the letter at the last position in
     * the sequence. A separate representation would be redundant
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
     * @return The threePrime.
     */
    com.google.fhir.r4.core.CodeableConcept getThreePrime();
    /**
     * <pre>
     * The nucleotide present at the 3’ terminal shall be specified based on a
     * controlled vocabulary. Since the sequence is represented from the 5' to
     * the 3' end, the 5’ prime nucleotide is the letter at the last position in
     * the sequence. A separate representation would be redundant
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
     */
    com.google.fhir.r4.core.CodeableConceptOrBuilder getThreePrimeOrBuilder();

    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
     */
    java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage> 
        getLinkageList();
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
     */
    com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage getLinkage(int index);
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
     */
    int getLinkageCount();
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
     */
    java.util.List<? extends com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.LinkageOrBuilder> 
        getLinkageOrBuilderList();
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
     */
    com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.LinkageOrBuilder getLinkageOrBuilder(
        int index);

    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
     */
    java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar> 
        getSugarList();
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
     */
    com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar getSugar(int index);
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
     */
    int getSugarCount();
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
     */
    java.util.List<? extends com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.SugarOrBuilder> 
        getSugarOrBuilderList();
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
     */
    com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.SugarOrBuilder getSugarOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Subunits are listed in order of decreasing length; sequences of the same
   * length will be ordered by molecular weight; subunits that have identical
   * sequences will be repeated multiple times
   * </pre>
   *
   * Protobuf type {@code google.fhir.r4.core.SubstanceNucleicAcid.Subunit}
   */
  public static final class Subunit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.fhir.r4.core.SubstanceNucleicAcid.Subunit)
      SubunitOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Subunit.newBuilder() to construct.
    private Subunit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Subunit() {
      extension_ = java.util.Collections.emptyList();
      modifierExtension_ = java.util.Collections.emptyList();
      linkage_ = java.util.Collections.emptyList();
      sugar_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Subunit();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Subunit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.fhir.r4.core.String.Builder subBuilder = null;
              if (id_ != null) {
                subBuilder = id_.toBuilder();
              }
              id_ = input.readMessage(com.google.fhir.r4.core.String.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(id_);
                id_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                extension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>();
                mutable_bitField0_ |= 0x00000001;
              }
              extension_.add(
                  input.readMessage(com.google.fhir.r4.core.Extension.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                modifierExtension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>();
                mutable_bitField0_ |= 0x00000002;
              }
              modifierExtension_.add(
                  input.readMessage(com.google.fhir.r4.core.Extension.parser(), extensionRegistry));
              break;
            }
            case 34: {
              com.google.fhir.r4.core.Integer.Builder subBuilder = null;
              if (subunit_ != null) {
                subBuilder = subunit_.toBuilder();
              }
              subunit_ = input.readMessage(com.google.fhir.r4.core.Integer.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(subunit_);
                subunit_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              com.google.fhir.r4.core.String.Builder subBuilder = null;
              if (sequence_ != null) {
                subBuilder = sequence_.toBuilder();
              }
              sequence_ = input.readMessage(com.google.fhir.r4.core.String.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sequence_);
                sequence_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              com.google.fhir.r4.core.Integer.Builder subBuilder = null;
              if (length_ != null) {
                subBuilder = length_.toBuilder();
              }
              length_ = input.readMessage(com.google.fhir.r4.core.Integer.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(length_);
                length_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              com.google.fhir.r4.core.Attachment.Builder subBuilder = null;
              if (sequenceAttachment_ != null) {
                subBuilder = sequenceAttachment_.toBuilder();
              }
              sequenceAttachment_ = input.readMessage(com.google.fhir.r4.core.Attachment.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sequenceAttachment_);
                sequenceAttachment_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              com.google.fhir.r4.core.CodeableConcept.Builder subBuilder = null;
              if (fivePrime_ != null) {
                subBuilder = fivePrime_.toBuilder();
              }
              fivePrime_ = input.readMessage(com.google.fhir.r4.core.CodeableConcept.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fivePrime_);
                fivePrime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              com.google.fhir.r4.core.CodeableConcept.Builder subBuilder = null;
              if (threePrime_ != null) {
                subBuilder = threePrime_.toBuilder();
              }
              threePrime_ = input.readMessage(com.google.fhir.r4.core.CodeableConcept.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(threePrime_);
                threePrime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                linkage_ = new java.util.ArrayList<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage>();
                mutable_bitField0_ |= 0x00000004;
              }
              linkage_.add(
                  input.readMessage(com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.parser(), extensionRegistry));
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                sugar_ = new java.util.ArrayList<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar>();
                mutable_bitField0_ |= 0x00000008;
              }
              sugar_.add(
                  input.readMessage(com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          extension_ = java.util.Collections.unmodifiableList(extension_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          modifierExtension_ = java.util.Collections.unmodifiableList(modifierExtension_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          linkage_ = java.util.Collections.unmodifiableList(linkage_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          sugar_ = java.util.Collections.unmodifiableList(sugar_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.class, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Builder.class);
    }

    public interface LinkageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       * @return Whether the id field is set.
       */
      boolean hasId();
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       * @return The id.
       */
      com.google.fhir.r4.core.String getId();
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       */
      com.google.fhir.r4.core.StringOrBuilder getIdOrBuilder();

      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      java.util.List<com.google.fhir.r4.core.Extension> 
          getExtensionList();
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      com.google.fhir.r4.core.Extension getExtension(int index);
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      int getExtensionCount();
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
          getExtensionOrBuilderList();
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      com.google.fhir.r4.core.ExtensionOrBuilder getExtensionOrBuilder(
          int index);

      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      java.util.List<com.google.fhir.r4.core.Extension> 
          getModifierExtensionList();
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      com.google.fhir.r4.core.Extension getModifierExtension(int index);
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      int getModifierExtensionCount();
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
          getModifierExtensionOrBuilderList();
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      com.google.fhir.r4.core.ExtensionOrBuilder getModifierExtensionOrBuilder(
          int index);

      /**
       * <pre>
       * The entity that links the sugar residues together should also be
       * captured for nearly all naturally occurring nucleic acid the linkage is
       * a phosphate group. For many synthetic oligonucleotides phosphorothioate
       * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
       * If the linkage is either 3’-3’ or 5’-5’ this should be specified
       * </pre>
       *
       * <code>.google.fhir.r4.core.String connectivity = 4;</code>
       * @return Whether the connectivity field is set.
       */
      boolean hasConnectivity();
      /**
       * <pre>
       * The entity that links the sugar residues together should also be
       * captured for nearly all naturally occurring nucleic acid the linkage is
       * a phosphate group. For many synthetic oligonucleotides phosphorothioate
       * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
       * If the linkage is either 3’-3’ or 5’-5’ this should be specified
       * </pre>
       *
       * <code>.google.fhir.r4.core.String connectivity = 4;</code>
       * @return The connectivity.
       */
      com.google.fhir.r4.core.String getConnectivity();
      /**
       * <pre>
       * The entity that links the sugar residues together should also be
       * captured for nearly all naturally occurring nucleic acid the linkage is
       * a phosphate group. For many synthetic oligonucleotides phosphorothioate
       * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
       * If the linkage is either 3’-3’ or 5’-5’ this should be specified
       * </pre>
       *
       * <code>.google.fhir.r4.core.String connectivity = 4;</code>
       */
      com.google.fhir.r4.core.StringOrBuilder getConnectivityOrBuilder();

      /**
       * <pre>
       * Each linkage will be registered as a fragment and have an ID
       * </pre>
       *
       * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
       * @return Whether the identifier field is set.
       */
      boolean hasIdentifier();
      /**
       * <pre>
       * Each linkage will be registered as a fragment and have an ID
       * </pre>
       *
       * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
       * @return The identifier.
       */
      com.google.fhir.r4.core.Identifier getIdentifier();
      /**
       * <pre>
       * Each linkage will be registered as a fragment and have an ID
       * </pre>
       *
       * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
       */
      com.google.fhir.r4.core.IdentifierOrBuilder getIdentifierOrBuilder();

      /**
       * <pre>
       * Each linkage will be registered as a fragment and have at least one
       * name. A single name shall be assigned to each linkage
       * </pre>
       *
       * <code>.google.fhir.r4.core.String name = 6;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       * Each linkage will be registered as a fragment and have at least one
       * name. A single name shall be assigned to each linkage
       * </pre>
       *
       * <code>.google.fhir.r4.core.String name = 6;</code>
       * @return The name.
       */
      com.google.fhir.r4.core.String getName();
      /**
       * <pre>
       * Each linkage will be registered as a fragment and have at least one
       * name. A single name shall be assigned to each linkage
       * </pre>
       *
       * <code>.google.fhir.r4.core.String name = 6;</code>
       */
      com.google.fhir.r4.core.StringOrBuilder getNameOrBuilder();

      /**
       * <pre>
       * Residues shall be captured as described in 5.3.6.8.3
       * </pre>
       *
       * <code>.google.fhir.r4.core.String residue_site = 7;</code>
       * @return Whether the residueSite field is set.
       */
      boolean hasResidueSite();
      /**
       * <pre>
       * Residues shall be captured as described in 5.3.6.8.3
       * </pre>
       *
       * <code>.google.fhir.r4.core.String residue_site = 7;</code>
       * @return The residueSite.
       */
      com.google.fhir.r4.core.String getResidueSite();
      /**
       * <pre>
       * Residues shall be captured as described in 5.3.6.8.3
       * </pre>
       *
       * <code>.google.fhir.r4.core.String residue_site = 7;</code>
       */
      com.google.fhir.r4.core.StringOrBuilder getResidueSiteOrBuilder();
    }
    /**
     * <pre>
     * The linkages between sugar residues will also be captured
     * </pre>
     *
     * Protobuf type {@code google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage}
     */
    public static final class Linkage extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage)
        LinkageOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Linkage.newBuilder() to construct.
      private Linkage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Linkage() {
        extension_ = java.util.Collections.emptyList();
        modifierExtension_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Linkage();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Linkage(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.fhir.r4.core.String.Builder subBuilder = null;
                if (id_ != null) {
                  subBuilder = id_.toBuilder();
                }
                id_ = input.readMessage(com.google.fhir.r4.core.String.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(id_);
                  id_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  extension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>();
                  mutable_bitField0_ |= 0x00000001;
                }
                extension_.add(
                    input.readMessage(com.google.fhir.r4.core.Extension.parser(), extensionRegistry));
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  modifierExtension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>();
                  mutable_bitField0_ |= 0x00000002;
                }
                modifierExtension_.add(
                    input.readMessage(com.google.fhir.r4.core.Extension.parser(), extensionRegistry));
                break;
              }
              case 34: {
                com.google.fhir.r4.core.String.Builder subBuilder = null;
                if (connectivity_ != null) {
                  subBuilder = connectivity_.toBuilder();
                }
                connectivity_ = input.readMessage(com.google.fhir.r4.core.String.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(connectivity_);
                  connectivity_ = subBuilder.buildPartial();
                }

                break;
              }
              case 42: {
                com.google.fhir.r4.core.Identifier.Builder subBuilder = null;
                if (identifier_ != null) {
                  subBuilder = identifier_.toBuilder();
                }
                identifier_ = input.readMessage(com.google.fhir.r4.core.Identifier.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(identifier_);
                  identifier_ = subBuilder.buildPartial();
                }

                break;
              }
              case 50: {
                com.google.fhir.r4.core.String.Builder subBuilder = null;
                if (name_ != null) {
                  subBuilder = name_.toBuilder();
                }
                name_ = input.readMessage(com.google.fhir.r4.core.String.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(name_);
                  name_ = subBuilder.buildPartial();
                }

                break;
              }
              case 58: {
                com.google.fhir.r4.core.String.Builder subBuilder = null;
                if (residueSite_ != null) {
                  subBuilder = residueSite_.toBuilder();
                }
                residueSite_ = input.readMessage(com.google.fhir.r4.core.String.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(residueSite_);
                  residueSite_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            extension_ = java.util.Collections.unmodifiableList(extension_);
          }
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            modifierExtension_ = java.util.Collections.unmodifiableList(modifierExtension_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_Linkage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_Linkage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.class, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.Builder.class);
      }

      public static final int ID_FIELD_NUMBER = 1;
      private com.google.fhir.r4.core.String id_;
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return id_ != null;
      }
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public com.google.fhir.r4.core.String getId() {
        return id_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : id_;
      }
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.StringOrBuilder getIdOrBuilder() {
        return getId();
      }

      public static final int EXTENSION_FIELD_NUMBER = 2;
      private java.util.List<com.google.fhir.r4.core.Extension> extension_;
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      @java.lang.Override
      public java.util.List<com.google.fhir.r4.core.Extension> getExtensionList() {
        return extension_;
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
          getExtensionOrBuilderList() {
        return extension_;
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      @java.lang.Override
      public int getExtensionCount() {
        return extension_.size();
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.Extension getExtension(int index) {
        return extension_.get(index);
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.ExtensionOrBuilder getExtensionOrBuilder(
          int index) {
        return extension_.get(index);
      }

      public static final int MODIFIER_EXTENSION_FIELD_NUMBER = 3;
      private java.util.List<com.google.fhir.r4.core.Extension> modifierExtension_;
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      @java.lang.Override
      public java.util.List<com.google.fhir.r4.core.Extension> getModifierExtensionList() {
        return modifierExtension_;
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      @java.lang.Override
      public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
          getModifierExtensionOrBuilderList() {
        return modifierExtension_;
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      @java.lang.Override
      public int getModifierExtensionCount() {
        return modifierExtension_.size();
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.Extension getModifierExtension(int index) {
        return modifierExtension_.get(index);
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.ExtensionOrBuilder getModifierExtensionOrBuilder(
          int index) {
        return modifierExtension_.get(index);
      }

      public static final int CONNECTIVITY_FIELD_NUMBER = 4;
      private com.google.fhir.r4.core.String connectivity_;
      /**
       * <pre>
       * The entity that links the sugar residues together should also be
       * captured for nearly all naturally occurring nucleic acid the linkage is
       * a phosphate group. For many synthetic oligonucleotides phosphorothioate
       * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
       * If the linkage is either 3’-3’ or 5’-5’ this should be specified
       * </pre>
       *
       * <code>.google.fhir.r4.core.String connectivity = 4;</code>
       * @return Whether the connectivity field is set.
       */
      @java.lang.Override
      public boolean hasConnectivity() {
        return connectivity_ != null;
      }
      /**
       * <pre>
       * The entity that links the sugar residues together should also be
       * captured for nearly all naturally occurring nucleic acid the linkage is
       * a phosphate group. For many synthetic oligonucleotides phosphorothioate
       * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
       * If the linkage is either 3’-3’ or 5’-5’ this should be specified
       * </pre>
       *
       * <code>.google.fhir.r4.core.String connectivity = 4;</code>
       * @return The connectivity.
       */
      @java.lang.Override
      public com.google.fhir.r4.core.String getConnectivity() {
        return connectivity_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : connectivity_;
      }
      /**
       * <pre>
       * The entity that links the sugar residues together should also be
       * captured for nearly all naturally occurring nucleic acid the linkage is
       * a phosphate group. For many synthetic oligonucleotides phosphorothioate
       * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
       * If the linkage is either 3’-3’ or 5’-5’ this should be specified
       * </pre>
       *
       * <code>.google.fhir.r4.core.String connectivity = 4;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.StringOrBuilder getConnectivityOrBuilder() {
        return getConnectivity();
      }

      public static final int IDENTIFIER_FIELD_NUMBER = 5;
      private com.google.fhir.r4.core.Identifier identifier_;
      /**
       * <pre>
       * Each linkage will be registered as a fragment and have an ID
       * </pre>
       *
       * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
       * @return Whether the identifier field is set.
       */
      @java.lang.Override
      public boolean hasIdentifier() {
        return identifier_ != null;
      }
      /**
       * <pre>
       * Each linkage will be registered as a fragment and have an ID
       * </pre>
       *
       * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
       * @return The identifier.
       */
      @java.lang.Override
      public com.google.fhir.r4.core.Identifier getIdentifier() {
        return identifier_ == null ? com.google.fhir.r4.core.Identifier.getDefaultInstance() : identifier_;
      }
      /**
       * <pre>
       * Each linkage will be registered as a fragment and have an ID
       * </pre>
       *
       * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.IdentifierOrBuilder getIdentifierOrBuilder() {
        return getIdentifier();
      }

      public static final int NAME_FIELD_NUMBER = 6;
      private com.google.fhir.r4.core.String name_;
      /**
       * <pre>
       * Each linkage will be registered as a fragment and have at least one
       * name. A single name shall be assigned to each linkage
       * </pre>
       *
       * <code>.google.fhir.r4.core.String name = 6;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return name_ != null;
      }
      /**
       * <pre>
       * Each linkage will be registered as a fragment and have at least one
       * name. A single name shall be assigned to each linkage
       * </pre>
       *
       * <code>.google.fhir.r4.core.String name = 6;</code>
       * @return The name.
       */
      @java.lang.Override
      public com.google.fhir.r4.core.String getName() {
        return name_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : name_;
      }
      /**
       * <pre>
       * Each linkage will be registered as a fragment and have at least one
       * name. A single name shall be assigned to each linkage
       * </pre>
       *
       * <code>.google.fhir.r4.core.String name = 6;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.StringOrBuilder getNameOrBuilder() {
        return getName();
      }

      public static final int RESIDUE_SITE_FIELD_NUMBER = 7;
      private com.google.fhir.r4.core.String residueSite_;
      /**
       * <pre>
       * Residues shall be captured as described in 5.3.6.8.3
       * </pre>
       *
       * <code>.google.fhir.r4.core.String residue_site = 7;</code>
       * @return Whether the residueSite field is set.
       */
      @java.lang.Override
      public boolean hasResidueSite() {
        return residueSite_ != null;
      }
      /**
       * <pre>
       * Residues shall be captured as described in 5.3.6.8.3
       * </pre>
       *
       * <code>.google.fhir.r4.core.String residue_site = 7;</code>
       * @return The residueSite.
       */
      @java.lang.Override
      public com.google.fhir.r4.core.String getResidueSite() {
        return residueSite_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : residueSite_;
      }
      /**
       * <pre>
       * Residues shall be captured as described in 5.3.6.8.3
       * </pre>
       *
       * <code>.google.fhir.r4.core.String residue_site = 7;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.StringOrBuilder getResidueSiteOrBuilder() {
        return getResidueSite();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (id_ != null) {
          output.writeMessage(1, getId());
        }
        for (int i = 0; i < extension_.size(); i++) {
          output.writeMessage(2, extension_.get(i));
        }
        for (int i = 0; i < modifierExtension_.size(); i++) {
          output.writeMessage(3, modifierExtension_.get(i));
        }
        if (connectivity_ != null) {
          output.writeMessage(4, getConnectivity());
        }
        if (identifier_ != null) {
          output.writeMessage(5, getIdentifier());
        }
        if (name_ != null) {
          output.writeMessage(6, getName());
        }
        if (residueSite_ != null) {
          output.writeMessage(7, getResidueSite());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (id_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getId());
        }
        for (int i = 0; i < extension_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, extension_.get(i));
        }
        for (int i = 0; i < modifierExtension_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, modifierExtension_.get(i));
        }
        if (connectivity_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getConnectivity());
        }
        if (identifier_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getIdentifier());
        }
        if (name_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, getName());
        }
        if (residueSite_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, getResidueSite());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage)) {
          return super.equals(obj);
        }
        com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage other = (com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage) obj;

        if (hasId() != other.hasId()) return false;
        if (hasId()) {
          if (!getId()
              .equals(other.getId())) return false;
        }
        if (!getExtensionList()
            .equals(other.getExtensionList())) return false;
        if (!getModifierExtensionList()
            .equals(other.getModifierExtensionList())) return false;
        if (hasConnectivity() != other.hasConnectivity()) return false;
        if (hasConnectivity()) {
          if (!getConnectivity()
              .equals(other.getConnectivity())) return false;
        }
        if (hasIdentifier() != other.hasIdentifier()) return false;
        if (hasIdentifier()) {
          if (!getIdentifier()
              .equals(other.getIdentifier())) return false;
        }
        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasResidueSite() != other.hasResidueSite()) return false;
        if (hasResidueSite()) {
          if (!getResidueSite()
              .equals(other.getResidueSite())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasId()) {
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId().hashCode();
        }
        if (getExtensionCount() > 0) {
          hash = (37 * hash) + EXTENSION_FIELD_NUMBER;
          hash = (53 * hash) + getExtensionList().hashCode();
        }
        if (getModifierExtensionCount() > 0) {
          hash = (37 * hash) + MODIFIER_EXTENSION_FIELD_NUMBER;
          hash = (53 * hash) + getModifierExtensionList().hashCode();
        }
        if (hasConnectivity()) {
          hash = (37 * hash) + CONNECTIVITY_FIELD_NUMBER;
          hash = (53 * hash) + getConnectivity().hashCode();
        }
        if (hasIdentifier()) {
          hash = (37 * hash) + IDENTIFIER_FIELD_NUMBER;
          hash = (53 * hash) + getIdentifier().hashCode();
        }
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasResidueSite()) {
          hash = (37 * hash) + RESIDUE_SITE_FIELD_NUMBER;
          hash = (53 * hash) + getResidueSite().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * The linkages between sugar residues will also be captured
       * </pre>
       *
       * Protobuf type {@code google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage)
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.LinkageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_Linkage_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_Linkage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.class, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.Builder.class);
        }

        // Construct using com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getExtensionFieldBuilder();
            getModifierExtensionFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (idBuilder_ == null) {
            id_ = null;
          } else {
            id_ = null;
            idBuilder_ = null;
          }
          if (extensionBuilder_ == null) {
            extension_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            extensionBuilder_.clear();
          }
          if (modifierExtensionBuilder_ == null) {
            modifierExtension_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            modifierExtensionBuilder_.clear();
          }
          if (connectivityBuilder_ == null) {
            connectivity_ = null;
          } else {
            connectivity_ = null;
            connectivityBuilder_ = null;
          }
          if (identifierBuilder_ == null) {
            identifier_ = null;
          } else {
            identifier_ = null;
            identifierBuilder_ = null;
          }
          if (nameBuilder_ == null) {
            name_ = null;
          } else {
            name_ = null;
            nameBuilder_ = null;
          }
          if (residueSiteBuilder_ == null) {
            residueSite_ = null;
          } else {
            residueSite_ = null;
            residueSiteBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_Linkage_descriptor;
        }

        @java.lang.Override
        public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage getDefaultInstanceForType() {
          return com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.getDefaultInstance();
        }

        @java.lang.Override
        public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage build() {
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage buildPartial() {
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage result = new com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage(this);
          int from_bitField0_ = bitField0_;
          if (idBuilder_ == null) {
            result.id_ = id_;
          } else {
            result.id_ = idBuilder_.build();
          }
          if (extensionBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              extension_ = java.util.Collections.unmodifiableList(extension_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.extension_ = extension_;
          } else {
            result.extension_ = extensionBuilder_.build();
          }
          if (modifierExtensionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              modifierExtension_ = java.util.Collections.unmodifiableList(modifierExtension_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.modifierExtension_ = modifierExtension_;
          } else {
            result.modifierExtension_ = modifierExtensionBuilder_.build();
          }
          if (connectivityBuilder_ == null) {
            result.connectivity_ = connectivity_;
          } else {
            result.connectivity_ = connectivityBuilder_.build();
          }
          if (identifierBuilder_ == null) {
            result.identifier_ = identifier_;
          } else {
            result.identifier_ = identifierBuilder_.build();
          }
          if (nameBuilder_ == null) {
            result.name_ = name_;
          } else {
            result.name_ = nameBuilder_.build();
          }
          if (residueSiteBuilder_ == null) {
            result.residueSite_ = residueSite_;
          } else {
            result.residueSite_ = residueSiteBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage) {
            return mergeFrom((com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage other) {
          if (other == com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.getDefaultInstance()) return this;
          if (other.hasId()) {
            mergeId(other.getId());
          }
          if (extensionBuilder_ == null) {
            if (!other.extension_.isEmpty()) {
              if (extension_.isEmpty()) {
                extension_ = other.extension_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureExtensionIsMutable();
                extension_.addAll(other.extension_);
              }
              onChanged();
            }
          } else {
            if (!other.extension_.isEmpty()) {
              if (extensionBuilder_.isEmpty()) {
                extensionBuilder_.dispose();
                extensionBuilder_ = null;
                extension_ = other.extension_;
                bitField0_ = (bitField0_ & ~0x00000001);
                extensionBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getExtensionFieldBuilder() : null;
              } else {
                extensionBuilder_.addAllMessages(other.extension_);
              }
            }
          }
          if (modifierExtensionBuilder_ == null) {
            if (!other.modifierExtension_.isEmpty()) {
              if (modifierExtension_.isEmpty()) {
                modifierExtension_ = other.modifierExtension_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureModifierExtensionIsMutable();
                modifierExtension_.addAll(other.modifierExtension_);
              }
              onChanged();
            }
          } else {
            if (!other.modifierExtension_.isEmpty()) {
              if (modifierExtensionBuilder_.isEmpty()) {
                modifierExtensionBuilder_.dispose();
                modifierExtensionBuilder_ = null;
                modifierExtension_ = other.modifierExtension_;
                bitField0_ = (bitField0_ & ~0x00000002);
                modifierExtensionBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getModifierExtensionFieldBuilder() : null;
              } else {
                modifierExtensionBuilder_.addAllMessages(other.modifierExtension_);
              }
            }
          }
          if (other.hasConnectivity()) {
            mergeConnectivity(other.getConnectivity());
          }
          if (other.hasIdentifier()) {
            mergeIdentifier(other.getIdentifier());
          }
          if (other.hasName()) {
            mergeName(other.getName());
          }
          if (other.hasResidueSite()) {
            mergeResidueSite(other.getResidueSite());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.fhir.r4.core.String id_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> idBuilder_;
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         * @return Whether the id field is set.
         */
        public boolean hasId() {
          return idBuilder_ != null || id_ != null;
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         * @return The id.
         */
        public com.google.fhir.r4.core.String getId() {
          if (idBuilder_ == null) {
            return id_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : id_;
          } else {
            return idBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         */
        public Builder setId(com.google.fhir.r4.core.String value) {
          if (idBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            id_ = value;
            onChanged();
          } else {
            idBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         */
        public Builder setId(
            com.google.fhir.r4.core.String.Builder builderForValue) {
          if (idBuilder_ == null) {
            id_ = builderForValue.build();
            onChanged();
          } else {
            idBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         */
        public Builder mergeId(com.google.fhir.r4.core.String value) {
          if (idBuilder_ == null) {
            if (id_ != null) {
              id_ =
                com.google.fhir.r4.core.String.newBuilder(id_).mergeFrom(value).buildPartial();
            } else {
              id_ = value;
            }
            onChanged();
          } else {
            idBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         */
        public Builder clearId() {
          if (idBuilder_ == null) {
            id_ = null;
            onChanged();
          } else {
            id_ = null;
            idBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         */
        public com.google.fhir.r4.core.String.Builder getIdBuilder() {
          
          onChanged();
          return getIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         */
        public com.google.fhir.r4.core.StringOrBuilder getIdOrBuilder() {
          if (idBuilder_ != null) {
            return idBuilder_.getMessageOrBuilder();
          } else {
            return id_ == null ?
                com.google.fhir.r4.core.String.getDefaultInstance() : id_;
          }
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> 
            getIdFieldBuilder() {
          if (idBuilder_ == null) {
            idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder>(
                    getId(),
                    getParentForChildren(),
                    isClean());
            id_ = null;
          }
          return idBuilder_;
        }

        private java.util.List<com.google.fhir.r4.core.Extension> extension_ =
          java.util.Collections.emptyList();
        private void ensureExtensionIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            extension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>(extension_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> extensionBuilder_;

        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public java.util.List<com.google.fhir.r4.core.Extension> getExtensionList() {
          if (extensionBuilder_ == null) {
            return java.util.Collections.unmodifiableList(extension_);
          } else {
            return extensionBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public int getExtensionCount() {
          if (extensionBuilder_ == null) {
            return extension_.size();
          } else {
            return extensionBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public com.google.fhir.r4.core.Extension getExtension(int index) {
          if (extensionBuilder_ == null) {
            return extension_.get(index);
          } else {
            return extensionBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder setExtension(
            int index, com.google.fhir.r4.core.Extension value) {
          if (extensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExtensionIsMutable();
            extension_.set(index, value);
            onChanged();
          } else {
            extensionBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder setExtension(
            int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            extension_.set(index, builderForValue.build());
            onChanged();
          } else {
            extensionBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder addExtension(com.google.fhir.r4.core.Extension value) {
          if (extensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExtensionIsMutable();
            extension_.add(value);
            onChanged();
          } else {
            extensionBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder addExtension(
            int index, com.google.fhir.r4.core.Extension value) {
          if (extensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExtensionIsMutable();
            extension_.add(index, value);
            onChanged();
          } else {
            extensionBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder addExtension(
            com.google.fhir.r4.core.Extension.Builder builderForValue) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            extension_.add(builderForValue.build());
            onChanged();
          } else {
            extensionBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder addExtension(
            int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            extension_.add(index, builderForValue.build());
            onChanged();
          } else {
            extensionBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder addAllExtension(
            java.lang.Iterable<? extends com.google.fhir.r4.core.Extension> values) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, extension_);
            onChanged();
          } else {
            extensionBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder clearExtension() {
          if (extensionBuilder_ == null) {
            extension_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            extensionBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder removeExtension(int index) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            extension_.remove(index);
            onChanged();
          } else {
            extensionBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public com.google.fhir.r4.core.Extension.Builder getExtensionBuilder(
            int index) {
          return getExtensionFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public com.google.fhir.r4.core.ExtensionOrBuilder getExtensionOrBuilder(
            int index) {
          if (extensionBuilder_ == null) {
            return extension_.get(index);  } else {
            return extensionBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
             getExtensionOrBuilderList() {
          if (extensionBuilder_ != null) {
            return extensionBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(extension_);
          }
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public com.google.fhir.r4.core.Extension.Builder addExtensionBuilder() {
          return getExtensionFieldBuilder().addBuilder(
              com.google.fhir.r4.core.Extension.getDefaultInstance());
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public com.google.fhir.r4.core.Extension.Builder addExtensionBuilder(
            int index) {
          return getExtensionFieldBuilder().addBuilder(
              index, com.google.fhir.r4.core.Extension.getDefaultInstance());
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public java.util.List<com.google.fhir.r4.core.Extension.Builder> 
             getExtensionBuilderList() {
          return getExtensionFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> 
            getExtensionFieldBuilder() {
          if (extensionBuilder_ == null) {
            extensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder>(
                    extension_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            extension_ = null;
          }
          return extensionBuilder_;
        }

        private java.util.List<com.google.fhir.r4.core.Extension> modifierExtension_ =
          java.util.Collections.emptyList();
        private void ensureModifierExtensionIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            modifierExtension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>(modifierExtension_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> modifierExtensionBuilder_;

        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public java.util.List<com.google.fhir.r4.core.Extension> getModifierExtensionList() {
          if (modifierExtensionBuilder_ == null) {
            return java.util.Collections.unmodifiableList(modifierExtension_);
          } else {
            return modifierExtensionBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public int getModifierExtensionCount() {
          if (modifierExtensionBuilder_ == null) {
            return modifierExtension_.size();
          } else {
            return modifierExtensionBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public com.google.fhir.r4.core.Extension getModifierExtension(int index) {
          if (modifierExtensionBuilder_ == null) {
            return modifierExtension_.get(index);
          } else {
            return modifierExtensionBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder setModifierExtension(
            int index, com.google.fhir.r4.core.Extension value) {
          if (modifierExtensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureModifierExtensionIsMutable();
            modifierExtension_.set(index, value);
            onChanged();
          } else {
            modifierExtensionBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder setModifierExtension(
            int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
          if (modifierExtensionBuilder_ == null) {
            ensureModifierExtensionIsMutable();
            modifierExtension_.set(index, builderForValue.build());
            onChanged();
          } else {
            modifierExtensionBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder addModifierExtension(com.google.fhir.r4.core.Extension value) {
          if (modifierExtensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureModifierExtensionIsMutable();
            modifierExtension_.add(value);
            onChanged();
          } else {
            modifierExtensionBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder addModifierExtension(
            int index, com.google.fhir.r4.core.Extension value) {
          if (modifierExtensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureModifierExtensionIsMutable();
            modifierExtension_.add(index, value);
            onChanged();
          } else {
            modifierExtensionBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder addModifierExtension(
            com.google.fhir.r4.core.Extension.Builder builderForValue) {
          if (modifierExtensionBuilder_ == null) {
            ensureModifierExtensionIsMutable();
            modifierExtension_.add(builderForValue.build());
            onChanged();
          } else {
            modifierExtensionBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder addModifierExtension(
            int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
          if (modifierExtensionBuilder_ == null) {
            ensureModifierExtensionIsMutable();
            modifierExtension_.add(index, builderForValue.build());
            onChanged();
          } else {
            modifierExtensionBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder addAllModifierExtension(
            java.lang.Iterable<? extends com.google.fhir.r4.core.Extension> values) {
          if (modifierExtensionBuilder_ == null) {
            ensureModifierExtensionIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, modifierExtension_);
            onChanged();
          } else {
            modifierExtensionBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder clearModifierExtension() {
          if (modifierExtensionBuilder_ == null) {
            modifierExtension_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            modifierExtensionBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder removeModifierExtension(int index) {
          if (modifierExtensionBuilder_ == null) {
            ensureModifierExtensionIsMutable();
            modifierExtension_.remove(index);
            onChanged();
          } else {
            modifierExtensionBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public com.google.fhir.r4.core.Extension.Builder getModifierExtensionBuilder(
            int index) {
          return getModifierExtensionFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public com.google.fhir.r4.core.ExtensionOrBuilder getModifierExtensionOrBuilder(
            int index) {
          if (modifierExtensionBuilder_ == null) {
            return modifierExtension_.get(index);  } else {
            return modifierExtensionBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
             getModifierExtensionOrBuilderList() {
          if (modifierExtensionBuilder_ != null) {
            return modifierExtensionBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(modifierExtension_);
          }
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public com.google.fhir.r4.core.Extension.Builder addModifierExtensionBuilder() {
          return getModifierExtensionFieldBuilder().addBuilder(
              com.google.fhir.r4.core.Extension.getDefaultInstance());
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public com.google.fhir.r4.core.Extension.Builder addModifierExtensionBuilder(
            int index) {
          return getModifierExtensionFieldBuilder().addBuilder(
              index, com.google.fhir.r4.core.Extension.getDefaultInstance());
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public java.util.List<com.google.fhir.r4.core.Extension.Builder> 
             getModifierExtensionBuilderList() {
          return getModifierExtensionFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> 
            getModifierExtensionFieldBuilder() {
          if (modifierExtensionBuilder_ == null) {
            modifierExtensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder>(
                    modifierExtension_,
                    ((bitField0_ & 0x00000002) != 0),
                    getParentForChildren(),
                    isClean());
            modifierExtension_ = null;
          }
          return modifierExtensionBuilder_;
        }

        private com.google.fhir.r4.core.String connectivity_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> connectivityBuilder_;
        /**
         * <pre>
         * The entity that links the sugar residues together should also be
         * captured for nearly all naturally occurring nucleic acid the linkage is
         * a phosphate group. For many synthetic oligonucleotides phosphorothioate
         * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
         * If the linkage is either 3’-3’ or 5’-5’ this should be specified
         * </pre>
         *
         * <code>.google.fhir.r4.core.String connectivity = 4;</code>
         * @return Whether the connectivity field is set.
         */
        public boolean hasConnectivity() {
          return connectivityBuilder_ != null || connectivity_ != null;
        }
        /**
         * <pre>
         * The entity that links the sugar residues together should also be
         * captured for nearly all naturally occurring nucleic acid the linkage is
         * a phosphate group. For many synthetic oligonucleotides phosphorothioate
         * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
         * If the linkage is either 3’-3’ or 5’-5’ this should be specified
         * </pre>
         *
         * <code>.google.fhir.r4.core.String connectivity = 4;</code>
         * @return The connectivity.
         */
        public com.google.fhir.r4.core.String getConnectivity() {
          if (connectivityBuilder_ == null) {
            return connectivity_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : connectivity_;
          } else {
            return connectivityBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The entity that links the sugar residues together should also be
         * captured for nearly all naturally occurring nucleic acid the linkage is
         * a phosphate group. For many synthetic oligonucleotides phosphorothioate
         * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
         * If the linkage is either 3’-3’ or 5’-5’ this should be specified
         * </pre>
         *
         * <code>.google.fhir.r4.core.String connectivity = 4;</code>
         */
        public Builder setConnectivity(com.google.fhir.r4.core.String value) {
          if (connectivityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            connectivity_ = value;
            onChanged();
          } else {
            connectivityBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The entity that links the sugar residues together should also be
         * captured for nearly all naturally occurring nucleic acid the linkage is
         * a phosphate group. For many synthetic oligonucleotides phosphorothioate
         * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
         * If the linkage is either 3’-3’ or 5’-5’ this should be specified
         * </pre>
         *
         * <code>.google.fhir.r4.core.String connectivity = 4;</code>
         */
        public Builder setConnectivity(
            com.google.fhir.r4.core.String.Builder builderForValue) {
          if (connectivityBuilder_ == null) {
            connectivity_ = builderForValue.build();
            onChanged();
          } else {
            connectivityBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The entity that links the sugar residues together should also be
         * captured for nearly all naturally occurring nucleic acid the linkage is
         * a phosphate group. For many synthetic oligonucleotides phosphorothioate
         * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
         * If the linkage is either 3’-3’ or 5’-5’ this should be specified
         * </pre>
         *
         * <code>.google.fhir.r4.core.String connectivity = 4;</code>
         */
        public Builder mergeConnectivity(com.google.fhir.r4.core.String value) {
          if (connectivityBuilder_ == null) {
            if (connectivity_ != null) {
              connectivity_ =
                com.google.fhir.r4.core.String.newBuilder(connectivity_).mergeFrom(value).buildPartial();
            } else {
              connectivity_ = value;
            }
            onChanged();
          } else {
            connectivityBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The entity that links the sugar residues together should also be
         * captured for nearly all naturally occurring nucleic acid the linkage is
         * a phosphate group. For many synthetic oligonucleotides phosphorothioate
         * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
         * If the linkage is either 3’-3’ or 5’-5’ this should be specified
         * </pre>
         *
         * <code>.google.fhir.r4.core.String connectivity = 4;</code>
         */
        public Builder clearConnectivity() {
          if (connectivityBuilder_ == null) {
            connectivity_ = null;
            onChanged();
          } else {
            connectivity_ = null;
            connectivityBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The entity that links the sugar residues together should also be
         * captured for nearly all naturally occurring nucleic acid the linkage is
         * a phosphate group. For many synthetic oligonucleotides phosphorothioate
         * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
         * If the linkage is either 3’-3’ or 5’-5’ this should be specified
         * </pre>
         *
         * <code>.google.fhir.r4.core.String connectivity = 4;</code>
         */
        public com.google.fhir.r4.core.String.Builder getConnectivityBuilder() {
          
          onChanged();
          return getConnectivityFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The entity that links the sugar residues together should also be
         * captured for nearly all naturally occurring nucleic acid the linkage is
         * a phosphate group. For many synthetic oligonucleotides phosphorothioate
         * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
         * If the linkage is either 3’-3’ or 5’-5’ this should be specified
         * </pre>
         *
         * <code>.google.fhir.r4.core.String connectivity = 4;</code>
         */
        public com.google.fhir.r4.core.StringOrBuilder getConnectivityOrBuilder() {
          if (connectivityBuilder_ != null) {
            return connectivityBuilder_.getMessageOrBuilder();
          } else {
            return connectivity_ == null ?
                com.google.fhir.r4.core.String.getDefaultInstance() : connectivity_;
          }
        }
        /**
         * <pre>
         * The entity that links the sugar residues together should also be
         * captured for nearly all naturally occurring nucleic acid the linkage is
         * a phosphate group. For many synthetic oligonucleotides phosphorothioate
         * linkages are often seen. Linkage connectivity is assumed to be 3’-5’.
         * If the linkage is either 3’-3’ or 5’-5’ this should be specified
         * </pre>
         *
         * <code>.google.fhir.r4.core.String connectivity = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> 
            getConnectivityFieldBuilder() {
          if (connectivityBuilder_ == null) {
            connectivityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder>(
                    getConnectivity(),
                    getParentForChildren(),
                    isClean());
            connectivity_ = null;
          }
          return connectivityBuilder_;
        }

        private com.google.fhir.r4.core.Identifier identifier_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.Identifier, com.google.fhir.r4.core.Identifier.Builder, com.google.fhir.r4.core.IdentifierOrBuilder> identifierBuilder_;
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have an ID
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
         * @return Whether the identifier field is set.
         */
        public boolean hasIdentifier() {
          return identifierBuilder_ != null || identifier_ != null;
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have an ID
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
         * @return The identifier.
         */
        public com.google.fhir.r4.core.Identifier getIdentifier() {
          if (identifierBuilder_ == null) {
            return identifier_ == null ? com.google.fhir.r4.core.Identifier.getDefaultInstance() : identifier_;
          } else {
            return identifierBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have an ID
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
         */
        public Builder setIdentifier(com.google.fhir.r4.core.Identifier value) {
          if (identifierBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            identifier_ = value;
            onChanged();
          } else {
            identifierBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have an ID
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
         */
        public Builder setIdentifier(
            com.google.fhir.r4.core.Identifier.Builder builderForValue) {
          if (identifierBuilder_ == null) {
            identifier_ = builderForValue.build();
            onChanged();
          } else {
            identifierBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have an ID
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
         */
        public Builder mergeIdentifier(com.google.fhir.r4.core.Identifier value) {
          if (identifierBuilder_ == null) {
            if (identifier_ != null) {
              identifier_ =
                com.google.fhir.r4.core.Identifier.newBuilder(identifier_).mergeFrom(value).buildPartial();
            } else {
              identifier_ = value;
            }
            onChanged();
          } else {
            identifierBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have an ID
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
         */
        public Builder clearIdentifier() {
          if (identifierBuilder_ == null) {
            identifier_ = null;
            onChanged();
          } else {
            identifier_ = null;
            identifierBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have an ID
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
         */
        public com.google.fhir.r4.core.Identifier.Builder getIdentifierBuilder() {
          
          onChanged();
          return getIdentifierFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have an ID
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
         */
        public com.google.fhir.r4.core.IdentifierOrBuilder getIdentifierOrBuilder() {
          if (identifierBuilder_ != null) {
            return identifierBuilder_.getMessageOrBuilder();
          } else {
            return identifier_ == null ?
                com.google.fhir.r4.core.Identifier.getDefaultInstance() : identifier_;
          }
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have an ID
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.Identifier, com.google.fhir.r4.core.Identifier.Builder, com.google.fhir.r4.core.IdentifierOrBuilder> 
            getIdentifierFieldBuilder() {
          if (identifierBuilder_ == null) {
            identifierBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.fhir.r4.core.Identifier, com.google.fhir.r4.core.Identifier.Builder, com.google.fhir.r4.core.IdentifierOrBuilder>(
                    getIdentifier(),
                    getParentForChildren(),
                    isClean());
            identifier_ = null;
          }
          return identifierBuilder_;
        }

        private com.google.fhir.r4.core.String name_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> nameBuilder_;
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have at least one
         * name. A single name shall be assigned to each linkage
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 6;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return nameBuilder_ != null || name_ != null;
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have at least one
         * name. A single name shall be assigned to each linkage
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 6;</code>
         * @return The name.
         */
        public com.google.fhir.r4.core.String getName() {
          if (nameBuilder_ == null) {
            return name_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : name_;
          } else {
            return nameBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have at least one
         * name. A single name shall be assigned to each linkage
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 6;</code>
         */
        public Builder setName(com.google.fhir.r4.core.String value) {
          if (nameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            name_ = value;
            onChanged();
          } else {
            nameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have at least one
         * name. A single name shall be assigned to each linkage
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 6;</code>
         */
        public Builder setName(
            com.google.fhir.r4.core.String.Builder builderForValue) {
          if (nameBuilder_ == null) {
            name_ = builderForValue.build();
            onChanged();
          } else {
            nameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have at least one
         * name. A single name shall be assigned to each linkage
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 6;</code>
         */
        public Builder mergeName(com.google.fhir.r4.core.String value) {
          if (nameBuilder_ == null) {
            if (name_ != null) {
              name_ =
                com.google.fhir.r4.core.String.newBuilder(name_).mergeFrom(value).buildPartial();
            } else {
              name_ = value;
            }
            onChanged();
          } else {
            nameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have at least one
         * name. A single name shall be assigned to each linkage
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 6;</code>
         */
        public Builder clearName() {
          if (nameBuilder_ == null) {
            name_ = null;
            onChanged();
          } else {
            name_ = null;
            nameBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have at least one
         * name. A single name shall be assigned to each linkage
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 6;</code>
         */
        public com.google.fhir.r4.core.String.Builder getNameBuilder() {
          
          onChanged();
          return getNameFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have at least one
         * name. A single name shall be assigned to each linkage
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 6;</code>
         */
        public com.google.fhir.r4.core.StringOrBuilder getNameOrBuilder() {
          if (nameBuilder_ != null) {
            return nameBuilder_.getMessageOrBuilder();
          } else {
            return name_ == null ?
                com.google.fhir.r4.core.String.getDefaultInstance() : name_;
          }
        }
        /**
         * <pre>
         * Each linkage will be registered as a fragment and have at least one
         * name. A single name shall be assigned to each linkage
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> 
            getNameFieldBuilder() {
          if (nameBuilder_ == null) {
            nameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder>(
                    getName(),
                    getParentForChildren(),
                    isClean());
            name_ = null;
          }
          return nameBuilder_;
        }

        private com.google.fhir.r4.core.String residueSite_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> residueSiteBuilder_;
        /**
         * <pre>
         * Residues shall be captured as described in 5.3.6.8.3
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 7;</code>
         * @return Whether the residueSite field is set.
         */
        public boolean hasResidueSite() {
          return residueSiteBuilder_ != null || residueSite_ != null;
        }
        /**
         * <pre>
         * Residues shall be captured as described in 5.3.6.8.3
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 7;</code>
         * @return The residueSite.
         */
        public com.google.fhir.r4.core.String getResidueSite() {
          if (residueSiteBuilder_ == null) {
            return residueSite_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : residueSite_;
          } else {
            return residueSiteBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Residues shall be captured as described in 5.3.6.8.3
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 7;</code>
         */
        public Builder setResidueSite(com.google.fhir.r4.core.String value) {
          if (residueSiteBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            residueSite_ = value;
            onChanged();
          } else {
            residueSiteBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Residues shall be captured as described in 5.3.6.8.3
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 7;</code>
         */
        public Builder setResidueSite(
            com.google.fhir.r4.core.String.Builder builderForValue) {
          if (residueSiteBuilder_ == null) {
            residueSite_ = builderForValue.build();
            onChanged();
          } else {
            residueSiteBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Residues shall be captured as described in 5.3.6.8.3
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 7;</code>
         */
        public Builder mergeResidueSite(com.google.fhir.r4.core.String value) {
          if (residueSiteBuilder_ == null) {
            if (residueSite_ != null) {
              residueSite_ =
                com.google.fhir.r4.core.String.newBuilder(residueSite_).mergeFrom(value).buildPartial();
            } else {
              residueSite_ = value;
            }
            onChanged();
          } else {
            residueSiteBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Residues shall be captured as described in 5.3.6.8.3
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 7;</code>
         */
        public Builder clearResidueSite() {
          if (residueSiteBuilder_ == null) {
            residueSite_ = null;
            onChanged();
          } else {
            residueSite_ = null;
            residueSiteBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Residues shall be captured as described in 5.3.6.8.3
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 7;</code>
         */
        public com.google.fhir.r4.core.String.Builder getResidueSiteBuilder() {
          
          onChanged();
          return getResidueSiteFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Residues shall be captured as described in 5.3.6.8.3
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 7;</code>
         */
        public com.google.fhir.r4.core.StringOrBuilder getResidueSiteOrBuilder() {
          if (residueSiteBuilder_ != null) {
            return residueSiteBuilder_.getMessageOrBuilder();
          } else {
            return residueSite_ == null ?
                com.google.fhir.r4.core.String.getDefaultInstance() : residueSite_;
          }
        }
        /**
         * <pre>
         * Residues shall be captured as described in 5.3.6.8.3
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 7;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> 
            getResidueSiteFieldBuilder() {
          if (residueSiteBuilder_ == null) {
            residueSiteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder>(
                    getResidueSite(),
                    getParentForChildren(),
                    isClean());
            residueSite_ = null;
          }
          return residueSiteBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage)
      }

      // @@protoc_insertion_point(class_scope:google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage)
      private static final com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage();
      }

      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Linkage>
          PARSER = new com.google.protobuf.AbstractParser<Linkage>() {
        @java.lang.Override
        public Linkage parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Linkage(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Linkage> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Linkage> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SugarOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       * @return Whether the id field is set.
       */
      boolean hasId();
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       * @return The id.
       */
      com.google.fhir.r4.core.String getId();
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       */
      com.google.fhir.r4.core.StringOrBuilder getIdOrBuilder();

      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      java.util.List<com.google.fhir.r4.core.Extension> 
          getExtensionList();
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      com.google.fhir.r4.core.Extension getExtension(int index);
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      int getExtensionCount();
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
          getExtensionOrBuilderList();
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      com.google.fhir.r4.core.ExtensionOrBuilder getExtensionOrBuilder(
          int index);

      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      java.util.List<com.google.fhir.r4.core.Extension> 
          getModifierExtensionList();
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      com.google.fhir.r4.core.Extension getModifierExtension(int index);
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      int getModifierExtensionCount();
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
          getModifierExtensionOrBuilderList();
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      com.google.fhir.r4.core.ExtensionOrBuilder getModifierExtensionOrBuilder(
          int index);

      /**
       * <pre>
       * The Substance ID of the sugar or sugar-like component that make up the
       * nucleotide
       * </pre>
       *
       * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
       * @return Whether the identifier field is set.
       */
      boolean hasIdentifier();
      /**
       * <pre>
       * The Substance ID of the sugar or sugar-like component that make up the
       * nucleotide
       * </pre>
       *
       * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
       * @return The identifier.
       */
      com.google.fhir.r4.core.Identifier getIdentifier();
      /**
       * <pre>
       * The Substance ID of the sugar or sugar-like component that make up the
       * nucleotide
       * </pre>
       *
       * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
       */
      com.google.fhir.r4.core.IdentifierOrBuilder getIdentifierOrBuilder();

      /**
       * <pre>
       * The name of the sugar or sugar-like component that make up the
       * nucleotide
       * </pre>
       *
       * <code>.google.fhir.r4.core.String name = 5;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       * The name of the sugar or sugar-like component that make up the
       * nucleotide
       * </pre>
       *
       * <code>.google.fhir.r4.core.String name = 5;</code>
       * @return The name.
       */
      com.google.fhir.r4.core.String getName();
      /**
       * <pre>
       * The name of the sugar or sugar-like component that make up the
       * nucleotide
       * </pre>
       *
       * <code>.google.fhir.r4.core.String name = 5;</code>
       */
      com.google.fhir.r4.core.StringOrBuilder getNameOrBuilder();

      /**
       * <pre>
       * The residues that contain a given sugar will be captured. The order of
       * given residues will be captured in the 5‘-3‘direction consistent with
       * the base sequences listed above
       * </pre>
       *
       * <code>.google.fhir.r4.core.String residue_site = 6;</code>
       * @return Whether the residueSite field is set.
       */
      boolean hasResidueSite();
      /**
       * <pre>
       * The residues that contain a given sugar will be captured. The order of
       * given residues will be captured in the 5‘-3‘direction consistent with
       * the base sequences listed above
       * </pre>
       *
       * <code>.google.fhir.r4.core.String residue_site = 6;</code>
       * @return The residueSite.
       */
      com.google.fhir.r4.core.String getResidueSite();
      /**
       * <pre>
       * The residues that contain a given sugar will be captured. The order of
       * given residues will be captured in the 5‘-3‘direction consistent with
       * the base sequences listed above
       * </pre>
       *
       * <code>.google.fhir.r4.core.String residue_site = 6;</code>
       */
      com.google.fhir.r4.core.StringOrBuilder getResidueSiteOrBuilder();
    }
    /**
     * <pre>
     * 5.3.6.8.1 Sugar ID (Mandatory)
     * </pre>
     *
     * Protobuf type {@code google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar}
     */
    public static final class Sugar extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar)
        SugarOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Sugar.newBuilder() to construct.
      private Sugar(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Sugar() {
        extension_ = java.util.Collections.emptyList();
        modifierExtension_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Sugar();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Sugar(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.fhir.r4.core.String.Builder subBuilder = null;
                if (id_ != null) {
                  subBuilder = id_.toBuilder();
                }
                id_ = input.readMessage(com.google.fhir.r4.core.String.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(id_);
                  id_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  extension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>();
                  mutable_bitField0_ |= 0x00000001;
                }
                extension_.add(
                    input.readMessage(com.google.fhir.r4.core.Extension.parser(), extensionRegistry));
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  modifierExtension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>();
                  mutable_bitField0_ |= 0x00000002;
                }
                modifierExtension_.add(
                    input.readMessage(com.google.fhir.r4.core.Extension.parser(), extensionRegistry));
                break;
              }
              case 34: {
                com.google.fhir.r4.core.Identifier.Builder subBuilder = null;
                if (identifier_ != null) {
                  subBuilder = identifier_.toBuilder();
                }
                identifier_ = input.readMessage(com.google.fhir.r4.core.Identifier.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(identifier_);
                  identifier_ = subBuilder.buildPartial();
                }

                break;
              }
              case 42: {
                com.google.fhir.r4.core.String.Builder subBuilder = null;
                if (name_ != null) {
                  subBuilder = name_.toBuilder();
                }
                name_ = input.readMessage(com.google.fhir.r4.core.String.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(name_);
                  name_ = subBuilder.buildPartial();
                }

                break;
              }
              case 50: {
                com.google.fhir.r4.core.String.Builder subBuilder = null;
                if (residueSite_ != null) {
                  subBuilder = residueSite_.toBuilder();
                }
                residueSite_ = input.readMessage(com.google.fhir.r4.core.String.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(residueSite_);
                  residueSite_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            extension_ = java.util.Collections.unmodifiableList(extension_);
          }
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            modifierExtension_ = java.util.Collections.unmodifiableList(modifierExtension_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_Sugar_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_Sugar_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.class, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.Builder.class);
      }

      public static final int ID_FIELD_NUMBER = 1;
      private com.google.fhir.r4.core.String id_;
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return id_ != null;
      }
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public com.google.fhir.r4.core.String getId() {
        return id_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : id_;
      }
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.StringOrBuilder getIdOrBuilder() {
        return getId();
      }

      public static final int EXTENSION_FIELD_NUMBER = 2;
      private java.util.List<com.google.fhir.r4.core.Extension> extension_;
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      @java.lang.Override
      public java.util.List<com.google.fhir.r4.core.Extension> getExtensionList() {
        return extension_;
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
          getExtensionOrBuilderList() {
        return extension_;
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      @java.lang.Override
      public int getExtensionCount() {
        return extension_.size();
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.Extension getExtension(int index) {
        return extension_.get(index);
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.ExtensionOrBuilder getExtensionOrBuilder(
          int index) {
        return extension_.get(index);
      }

      public static final int MODIFIER_EXTENSION_FIELD_NUMBER = 3;
      private java.util.List<com.google.fhir.r4.core.Extension> modifierExtension_;
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      @java.lang.Override
      public java.util.List<com.google.fhir.r4.core.Extension> getModifierExtensionList() {
        return modifierExtension_;
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      @java.lang.Override
      public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
          getModifierExtensionOrBuilderList() {
        return modifierExtension_;
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      @java.lang.Override
      public int getModifierExtensionCount() {
        return modifierExtension_.size();
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.Extension getModifierExtension(int index) {
        return modifierExtension_.get(index);
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.ExtensionOrBuilder getModifierExtensionOrBuilder(
          int index) {
        return modifierExtension_.get(index);
      }

      public static final int IDENTIFIER_FIELD_NUMBER = 4;
      private com.google.fhir.r4.core.Identifier identifier_;
      /**
       * <pre>
       * The Substance ID of the sugar or sugar-like component that make up the
       * nucleotide
       * </pre>
       *
       * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
       * @return Whether the identifier field is set.
       */
      @java.lang.Override
      public boolean hasIdentifier() {
        return identifier_ != null;
      }
      /**
       * <pre>
       * The Substance ID of the sugar or sugar-like component that make up the
       * nucleotide
       * </pre>
       *
       * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
       * @return The identifier.
       */
      @java.lang.Override
      public com.google.fhir.r4.core.Identifier getIdentifier() {
        return identifier_ == null ? com.google.fhir.r4.core.Identifier.getDefaultInstance() : identifier_;
      }
      /**
       * <pre>
       * The Substance ID of the sugar or sugar-like component that make up the
       * nucleotide
       * </pre>
       *
       * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.IdentifierOrBuilder getIdentifierOrBuilder() {
        return getIdentifier();
      }

      public static final int NAME_FIELD_NUMBER = 5;
      private com.google.fhir.r4.core.String name_;
      /**
       * <pre>
       * The name of the sugar or sugar-like component that make up the
       * nucleotide
       * </pre>
       *
       * <code>.google.fhir.r4.core.String name = 5;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return name_ != null;
      }
      /**
       * <pre>
       * The name of the sugar or sugar-like component that make up the
       * nucleotide
       * </pre>
       *
       * <code>.google.fhir.r4.core.String name = 5;</code>
       * @return The name.
       */
      @java.lang.Override
      public com.google.fhir.r4.core.String getName() {
        return name_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : name_;
      }
      /**
       * <pre>
       * The name of the sugar or sugar-like component that make up the
       * nucleotide
       * </pre>
       *
       * <code>.google.fhir.r4.core.String name = 5;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.StringOrBuilder getNameOrBuilder() {
        return getName();
      }

      public static final int RESIDUE_SITE_FIELD_NUMBER = 6;
      private com.google.fhir.r4.core.String residueSite_;
      /**
       * <pre>
       * The residues that contain a given sugar will be captured. The order of
       * given residues will be captured in the 5‘-3‘direction consistent with
       * the base sequences listed above
       * </pre>
       *
       * <code>.google.fhir.r4.core.String residue_site = 6;</code>
       * @return Whether the residueSite field is set.
       */
      @java.lang.Override
      public boolean hasResidueSite() {
        return residueSite_ != null;
      }
      /**
       * <pre>
       * The residues that contain a given sugar will be captured. The order of
       * given residues will be captured in the 5‘-3‘direction consistent with
       * the base sequences listed above
       * </pre>
       *
       * <code>.google.fhir.r4.core.String residue_site = 6;</code>
       * @return The residueSite.
       */
      @java.lang.Override
      public com.google.fhir.r4.core.String getResidueSite() {
        return residueSite_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : residueSite_;
      }
      /**
       * <pre>
       * The residues that contain a given sugar will be captured. The order of
       * given residues will be captured in the 5‘-3‘direction consistent with
       * the base sequences listed above
       * </pre>
       *
       * <code>.google.fhir.r4.core.String residue_site = 6;</code>
       */
      @java.lang.Override
      public com.google.fhir.r4.core.StringOrBuilder getResidueSiteOrBuilder() {
        return getResidueSite();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (id_ != null) {
          output.writeMessage(1, getId());
        }
        for (int i = 0; i < extension_.size(); i++) {
          output.writeMessage(2, extension_.get(i));
        }
        for (int i = 0; i < modifierExtension_.size(); i++) {
          output.writeMessage(3, modifierExtension_.get(i));
        }
        if (identifier_ != null) {
          output.writeMessage(4, getIdentifier());
        }
        if (name_ != null) {
          output.writeMessage(5, getName());
        }
        if (residueSite_ != null) {
          output.writeMessage(6, getResidueSite());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (id_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getId());
        }
        for (int i = 0; i < extension_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, extension_.get(i));
        }
        for (int i = 0; i < modifierExtension_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, modifierExtension_.get(i));
        }
        if (identifier_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getIdentifier());
        }
        if (name_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getName());
        }
        if (residueSite_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, getResidueSite());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar)) {
          return super.equals(obj);
        }
        com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar other = (com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar) obj;

        if (hasId() != other.hasId()) return false;
        if (hasId()) {
          if (!getId()
              .equals(other.getId())) return false;
        }
        if (!getExtensionList()
            .equals(other.getExtensionList())) return false;
        if (!getModifierExtensionList()
            .equals(other.getModifierExtensionList())) return false;
        if (hasIdentifier() != other.hasIdentifier()) return false;
        if (hasIdentifier()) {
          if (!getIdentifier()
              .equals(other.getIdentifier())) return false;
        }
        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasResidueSite() != other.hasResidueSite()) return false;
        if (hasResidueSite()) {
          if (!getResidueSite()
              .equals(other.getResidueSite())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasId()) {
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId().hashCode();
        }
        if (getExtensionCount() > 0) {
          hash = (37 * hash) + EXTENSION_FIELD_NUMBER;
          hash = (53 * hash) + getExtensionList().hashCode();
        }
        if (getModifierExtensionCount() > 0) {
          hash = (37 * hash) + MODIFIER_EXTENSION_FIELD_NUMBER;
          hash = (53 * hash) + getModifierExtensionList().hashCode();
        }
        if (hasIdentifier()) {
          hash = (37 * hash) + IDENTIFIER_FIELD_NUMBER;
          hash = (53 * hash) + getIdentifier().hashCode();
        }
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasResidueSite()) {
          hash = (37 * hash) + RESIDUE_SITE_FIELD_NUMBER;
          hash = (53 * hash) + getResidueSite().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * 5.3.6.8.1 Sugar ID (Mandatory)
       * </pre>
       *
       * Protobuf type {@code google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar)
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.SugarOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_Sugar_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_Sugar_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.class, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.Builder.class);
        }

        // Construct using com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getExtensionFieldBuilder();
            getModifierExtensionFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (idBuilder_ == null) {
            id_ = null;
          } else {
            id_ = null;
            idBuilder_ = null;
          }
          if (extensionBuilder_ == null) {
            extension_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            extensionBuilder_.clear();
          }
          if (modifierExtensionBuilder_ == null) {
            modifierExtension_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            modifierExtensionBuilder_.clear();
          }
          if (identifierBuilder_ == null) {
            identifier_ = null;
          } else {
            identifier_ = null;
            identifierBuilder_ = null;
          }
          if (nameBuilder_ == null) {
            name_ = null;
          } else {
            name_ = null;
            nameBuilder_ = null;
          }
          if (residueSiteBuilder_ == null) {
            residueSite_ = null;
          } else {
            residueSite_ = null;
            residueSiteBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_Sugar_descriptor;
        }

        @java.lang.Override
        public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar getDefaultInstanceForType() {
          return com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.getDefaultInstance();
        }

        @java.lang.Override
        public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar build() {
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar buildPartial() {
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar result = new com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar(this);
          int from_bitField0_ = bitField0_;
          if (idBuilder_ == null) {
            result.id_ = id_;
          } else {
            result.id_ = idBuilder_.build();
          }
          if (extensionBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              extension_ = java.util.Collections.unmodifiableList(extension_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.extension_ = extension_;
          } else {
            result.extension_ = extensionBuilder_.build();
          }
          if (modifierExtensionBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              modifierExtension_ = java.util.Collections.unmodifiableList(modifierExtension_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.modifierExtension_ = modifierExtension_;
          } else {
            result.modifierExtension_ = modifierExtensionBuilder_.build();
          }
          if (identifierBuilder_ == null) {
            result.identifier_ = identifier_;
          } else {
            result.identifier_ = identifierBuilder_.build();
          }
          if (nameBuilder_ == null) {
            result.name_ = name_;
          } else {
            result.name_ = nameBuilder_.build();
          }
          if (residueSiteBuilder_ == null) {
            result.residueSite_ = residueSite_;
          } else {
            result.residueSite_ = residueSiteBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar) {
            return mergeFrom((com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar other) {
          if (other == com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.getDefaultInstance()) return this;
          if (other.hasId()) {
            mergeId(other.getId());
          }
          if (extensionBuilder_ == null) {
            if (!other.extension_.isEmpty()) {
              if (extension_.isEmpty()) {
                extension_ = other.extension_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureExtensionIsMutable();
                extension_.addAll(other.extension_);
              }
              onChanged();
            }
          } else {
            if (!other.extension_.isEmpty()) {
              if (extensionBuilder_.isEmpty()) {
                extensionBuilder_.dispose();
                extensionBuilder_ = null;
                extension_ = other.extension_;
                bitField0_ = (bitField0_ & ~0x00000001);
                extensionBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getExtensionFieldBuilder() : null;
              } else {
                extensionBuilder_.addAllMessages(other.extension_);
              }
            }
          }
          if (modifierExtensionBuilder_ == null) {
            if (!other.modifierExtension_.isEmpty()) {
              if (modifierExtension_.isEmpty()) {
                modifierExtension_ = other.modifierExtension_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureModifierExtensionIsMutable();
                modifierExtension_.addAll(other.modifierExtension_);
              }
              onChanged();
            }
          } else {
            if (!other.modifierExtension_.isEmpty()) {
              if (modifierExtensionBuilder_.isEmpty()) {
                modifierExtensionBuilder_.dispose();
                modifierExtensionBuilder_ = null;
                modifierExtension_ = other.modifierExtension_;
                bitField0_ = (bitField0_ & ~0x00000002);
                modifierExtensionBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getModifierExtensionFieldBuilder() : null;
              } else {
                modifierExtensionBuilder_.addAllMessages(other.modifierExtension_);
              }
            }
          }
          if (other.hasIdentifier()) {
            mergeIdentifier(other.getIdentifier());
          }
          if (other.hasName()) {
            mergeName(other.getName());
          }
          if (other.hasResidueSite()) {
            mergeResidueSite(other.getResidueSite());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.fhir.r4.core.String id_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> idBuilder_;
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         * @return Whether the id field is set.
         */
        public boolean hasId() {
          return idBuilder_ != null || id_ != null;
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         * @return The id.
         */
        public com.google.fhir.r4.core.String getId() {
          if (idBuilder_ == null) {
            return id_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : id_;
          } else {
            return idBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         */
        public Builder setId(com.google.fhir.r4.core.String value) {
          if (idBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            id_ = value;
            onChanged();
          } else {
            idBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         */
        public Builder setId(
            com.google.fhir.r4.core.String.Builder builderForValue) {
          if (idBuilder_ == null) {
            id_ = builderForValue.build();
            onChanged();
          } else {
            idBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         */
        public Builder mergeId(com.google.fhir.r4.core.String value) {
          if (idBuilder_ == null) {
            if (id_ != null) {
              id_ =
                com.google.fhir.r4.core.String.newBuilder(id_).mergeFrom(value).buildPartial();
            } else {
              id_ = value;
            }
            onChanged();
          } else {
            idBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         */
        public Builder clearId() {
          if (idBuilder_ == null) {
            id_ = null;
            onChanged();
          } else {
            id_ = null;
            idBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         */
        public com.google.fhir.r4.core.String.Builder getIdBuilder() {
          
          onChanged();
          return getIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         */
        public com.google.fhir.r4.core.StringOrBuilder getIdOrBuilder() {
          if (idBuilder_ != null) {
            return idBuilder_.getMessageOrBuilder();
          } else {
            return id_ == null ?
                com.google.fhir.r4.core.String.getDefaultInstance() : id_;
          }
        }
        /**
         * <pre>
         * Unique id for inter-element referencing
         * </pre>
         *
         * <code>.google.fhir.r4.core.String id = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> 
            getIdFieldBuilder() {
          if (idBuilder_ == null) {
            idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder>(
                    getId(),
                    getParentForChildren(),
                    isClean());
            id_ = null;
          }
          return idBuilder_;
        }

        private java.util.List<com.google.fhir.r4.core.Extension> extension_ =
          java.util.Collections.emptyList();
        private void ensureExtensionIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            extension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>(extension_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> extensionBuilder_;

        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public java.util.List<com.google.fhir.r4.core.Extension> getExtensionList() {
          if (extensionBuilder_ == null) {
            return java.util.Collections.unmodifiableList(extension_);
          } else {
            return extensionBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public int getExtensionCount() {
          if (extensionBuilder_ == null) {
            return extension_.size();
          } else {
            return extensionBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public com.google.fhir.r4.core.Extension getExtension(int index) {
          if (extensionBuilder_ == null) {
            return extension_.get(index);
          } else {
            return extensionBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder setExtension(
            int index, com.google.fhir.r4.core.Extension value) {
          if (extensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExtensionIsMutable();
            extension_.set(index, value);
            onChanged();
          } else {
            extensionBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder setExtension(
            int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            extension_.set(index, builderForValue.build());
            onChanged();
          } else {
            extensionBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder addExtension(com.google.fhir.r4.core.Extension value) {
          if (extensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExtensionIsMutable();
            extension_.add(value);
            onChanged();
          } else {
            extensionBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder addExtension(
            int index, com.google.fhir.r4.core.Extension value) {
          if (extensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureExtensionIsMutable();
            extension_.add(index, value);
            onChanged();
          } else {
            extensionBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder addExtension(
            com.google.fhir.r4.core.Extension.Builder builderForValue) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            extension_.add(builderForValue.build());
            onChanged();
          } else {
            extensionBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder addExtension(
            int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            extension_.add(index, builderForValue.build());
            onChanged();
          } else {
            extensionBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder addAllExtension(
            java.lang.Iterable<? extends com.google.fhir.r4.core.Extension> values) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, extension_);
            onChanged();
          } else {
            extensionBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder clearExtension() {
          if (extensionBuilder_ == null) {
            extension_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            extensionBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public Builder removeExtension(int index) {
          if (extensionBuilder_ == null) {
            ensureExtensionIsMutable();
            extension_.remove(index);
            onChanged();
          } else {
            extensionBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public com.google.fhir.r4.core.Extension.Builder getExtensionBuilder(
            int index) {
          return getExtensionFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public com.google.fhir.r4.core.ExtensionOrBuilder getExtensionOrBuilder(
            int index) {
          if (extensionBuilder_ == null) {
            return extension_.get(index);  } else {
            return extensionBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
             getExtensionOrBuilderList() {
          if (extensionBuilder_ != null) {
            return extensionBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(extension_);
          }
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public com.google.fhir.r4.core.Extension.Builder addExtensionBuilder() {
          return getExtensionFieldBuilder().addBuilder(
              com.google.fhir.r4.core.Extension.getDefaultInstance());
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public com.google.fhir.r4.core.Extension.Builder addExtensionBuilder(
            int index) {
          return getExtensionFieldBuilder().addBuilder(
              index, com.google.fhir.r4.core.Extension.getDefaultInstance());
        }
        /**
         * <pre>
         * Additional content defined by implementations
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
         */
        public java.util.List<com.google.fhir.r4.core.Extension.Builder> 
             getExtensionBuilderList() {
          return getExtensionFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> 
            getExtensionFieldBuilder() {
          if (extensionBuilder_ == null) {
            extensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder>(
                    extension_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            extension_ = null;
          }
          return extensionBuilder_;
        }

        private java.util.List<com.google.fhir.r4.core.Extension> modifierExtension_ =
          java.util.Collections.emptyList();
        private void ensureModifierExtensionIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            modifierExtension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>(modifierExtension_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> modifierExtensionBuilder_;

        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public java.util.List<com.google.fhir.r4.core.Extension> getModifierExtensionList() {
          if (modifierExtensionBuilder_ == null) {
            return java.util.Collections.unmodifiableList(modifierExtension_);
          } else {
            return modifierExtensionBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public int getModifierExtensionCount() {
          if (modifierExtensionBuilder_ == null) {
            return modifierExtension_.size();
          } else {
            return modifierExtensionBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public com.google.fhir.r4.core.Extension getModifierExtension(int index) {
          if (modifierExtensionBuilder_ == null) {
            return modifierExtension_.get(index);
          } else {
            return modifierExtensionBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder setModifierExtension(
            int index, com.google.fhir.r4.core.Extension value) {
          if (modifierExtensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureModifierExtensionIsMutable();
            modifierExtension_.set(index, value);
            onChanged();
          } else {
            modifierExtensionBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder setModifierExtension(
            int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
          if (modifierExtensionBuilder_ == null) {
            ensureModifierExtensionIsMutable();
            modifierExtension_.set(index, builderForValue.build());
            onChanged();
          } else {
            modifierExtensionBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder addModifierExtension(com.google.fhir.r4.core.Extension value) {
          if (modifierExtensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureModifierExtensionIsMutable();
            modifierExtension_.add(value);
            onChanged();
          } else {
            modifierExtensionBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder addModifierExtension(
            int index, com.google.fhir.r4.core.Extension value) {
          if (modifierExtensionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureModifierExtensionIsMutable();
            modifierExtension_.add(index, value);
            onChanged();
          } else {
            modifierExtensionBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder addModifierExtension(
            com.google.fhir.r4.core.Extension.Builder builderForValue) {
          if (modifierExtensionBuilder_ == null) {
            ensureModifierExtensionIsMutable();
            modifierExtension_.add(builderForValue.build());
            onChanged();
          } else {
            modifierExtensionBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder addModifierExtension(
            int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
          if (modifierExtensionBuilder_ == null) {
            ensureModifierExtensionIsMutable();
            modifierExtension_.add(index, builderForValue.build());
            onChanged();
          } else {
            modifierExtensionBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder addAllModifierExtension(
            java.lang.Iterable<? extends com.google.fhir.r4.core.Extension> values) {
          if (modifierExtensionBuilder_ == null) {
            ensureModifierExtensionIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, modifierExtension_);
            onChanged();
          } else {
            modifierExtensionBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder clearModifierExtension() {
          if (modifierExtensionBuilder_ == null) {
            modifierExtension_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            modifierExtensionBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public Builder removeModifierExtension(int index) {
          if (modifierExtensionBuilder_ == null) {
            ensureModifierExtensionIsMutable();
            modifierExtension_.remove(index);
            onChanged();
          } else {
            modifierExtensionBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public com.google.fhir.r4.core.Extension.Builder getModifierExtensionBuilder(
            int index) {
          return getModifierExtensionFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public com.google.fhir.r4.core.ExtensionOrBuilder getModifierExtensionOrBuilder(
            int index) {
          if (modifierExtensionBuilder_ == null) {
            return modifierExtension_.get(index);  } else {
            return modifierExtensionBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
             getModifierExtensionOrBuilderList() {
          if (modifierExtensionBuilder_ != null) {
            return modifierExtensionBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(modifierExtension_);
          }
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public com.google.fhir.r4.core.Extension.Builder addModifierExtensionBuilder() {
          return getModifierExtensionFieldBuilder().addBuilder(
              com.google.fhir.r4.core.Extension.getDefaultInstance());
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public com.google.fhir.r4.core.Extension.Builder addModifierExtensionBuilder(
            int index) {
          return getModifierExtensionFieldBuilder().addBuilder(
              index, com.google.fhir.r4.core.Extension.getDefaultInstance());
        }
        /**
         * <pre>
         * Extensions that cannot be ignored even if unrecognized
         * </pre>
         *
         * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
         */
        public java.util.List<com.google.fhir.r4.core.Extension.Builder> 
             getModifierExtensionBuilderList() {
          return getModifierExtensionFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> 
            getModifierExtensionFieldBuilder() {
          if (modifierExtensionBuilder_ == null) {
            modifierExtensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder>(
                    modifierExtension_,
                    ((bitField0_ & 0x00000002) != 0),
                    getParentForChildren(),
                    isClean());
            modifierExtension_ = null;
          }
          return modifierExtensionBuilder_;
        }

        private com.google.fhir.r4.core.Identifier identifier_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.Identifier, com.google.fhir.r4.core.Identifier.Builder, com.google.fhir.r4.core.IdentifierOrBuilder> identifierBuilder_;
        /**
         * <pre>
         * The Substance ID of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
         * @return Whether the identifier field is set.
         */
        public boolean hasIdentifier() {
          return identifierBuilder_ != null || identifier_ != null;
        }
        /**
         * <pre>
         * The Substance ID of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
         * @return The identifier.
         */
        public com.google.fhir.r4.core.Identifier getIdentifier() {
          if (identifierBuilder_ == null) {
            return identifier_ == null ? com.google.fhir.r4.core.Identifier.getDefaultInstance() : identifier_;
          } else {
            return identifierBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The Substance ID of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
         */
        public Builder setIdentifier(com.google.fhir.r4.core.Identifier value) {
          if (identifierBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            identifier_ = value;
            onChanged();
          } else {
            identifierBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The Substance ID of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
         */
        public Builder setIdentifier(
            com.google.fhir.r4.core.Identifier.Builder builderForValue) {
          if (identifierBuilder_ == null) {
            identifier_ = builderForValue.build();
            onChanged();
          } else {
            identifierBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The Substance ID of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
         */
        public Builder mergeIdentifier(com.google.fhir.r4.core.Identifier value) {
          if (identifierBuilder_ == null) {
            if (identifier_ != null) {
              identifier_ =
                com.google.fhir.r4.core.Identifier.newBuilder(identifier_).mergeFrom(value).buildPartial();
            } else {
              identifier_ = value;
            }
            onChanged();
          } else {
            identifierBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The Substance ID of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
         */
        public Builder clearIdentifier() {
          if (identifierBuilder_ == null) {
            identifier_ = null;
            onChanged();
          } else {
            identifier_ = null;
            identifierBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The Substance ID of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
         */
        public com.google.fhir.r4.core.Identifier.Builder getIdentifierBuilder() {
          
          onChanged();
          return getIdentifierFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The Substance ID of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
         */
        public com.google.fhir.r4.core.IdentifierOrBuilder getIdentifierOrBuilder() {
          if (identifierBuilder_ != null) {
            return identifierBuilder_.getMessageOrBuilder();
          } else {
            return identifier_ == null ?
                com.google.fhir.r4.core.Identifier.getDefaultInstance() : identifier_;
          }
        }
        /**
         * <pre>
         * The Substance ID of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.Identifier identifier = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.Identifier, com.google.fhir.r4.core.Identifier.Builder, com.google.fhir.r4.core.IdentifierOrBuilder> 
            getIdentifierFieldBuilder() {
          if (identifierBuilder_ == null) {
            identifierBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.fhir.r4.core.Identifier, com.google.fhir.r4.core.Identifier.Builder, com.google.fhir.r4.core.IdentifierOrBuilder>(
                    getIdentifier(),
                    getParentForChildren(),
                    isClean());
            identifier_ = null;
          }
          return identifierBuilder_;
        }

        private com.google.fhir.r4.core.String name_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> nameBuilder_;
        /**
         * <pre>
         * The name of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 5;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return nameBuilder_ != null || name_ != null;
        }
        /**
         * <pre>
         * The name of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 5;</code>
         * @return The name.
         */
        public com.google.fhir.r4.core.String getName() {
          if (nameBuilder_ == null) {
            return name_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : name_;
          } else {
            return nameBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The name of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 5;</code>
         */
        public Builder setName(com.google.fhir.r4.core.String value) {
          if (nameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            name_ = value;
            onChanged();
          } else {
            nameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The name of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 5;</code>
         */
        public Builder setName(
            com.google.fhir.r4.core.String.Builder builderForValue) {
          if (nameBuilder_ == null) {
            name_ = builderForValue.build();
            onChanged();
          } else {
            nameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The name of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 5;</code>
         */
        public Builder mergeName(com.google.fhir.r4.core.String value) {
          if (nameBuilder_ == null) {
            if (name_ != null) {
              name_ =
                com.google.fhir.r4.core.String.newBuilder(name_).mergeFrom(value).buildPartial();
            } else {
              name_ = value;
            }
            onChanged();
          } else {
            nameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The name of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 5;</code>
         */
        public Builder clearName() {
          if (nameBuilder_ == null) {
            name_ = null;
            onChanged();
          } else {
            name_ = null;
            nameBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The name of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 5;</code>
         */
        public com.google.fhir.r4.core.String.Builder getNameBuilder() {
          
          onChanged();
          return getNameFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The name of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 5;</code>
         */
        public com.google.fhir.r4.core.StringOrBuilder getNameOrBuilder() {
          if (nameBuilder_ != null) {
            return nameBuilder_.getMessageOrBuilder();
          } else {
            return name_ == null ?
                com.google.fhir.r4.core.String.getDefaultInstance() : name_;
          }
        }
        /**
         * <pre>
         * The name of the sugar or sugar-like component that make up the
         * nucleotide
         * </pre>
         *
         * <code>.google.fhir.r4.core.String name = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> 
            getNameFieldBuilder() {
          if (nameBuilder_ == null) {
            nameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder>(
                    getName(),
                    getParentForChildren(),
                    isClean());
            name_ = null;
          }
          return nameBuilder_;
        }

        private com.google.fhir.r4.core.String residueSite_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> residueSiteBuilder_;
        /**
         * <pre>
         * The residues that contain a given sugar will be captured. The order of
         * given residues will be captured in the 5‘-3‘direction consistent with
         * the base sequences listed above
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 6;</code>
         * @return Whether the residueSite field is set.
         */
        public boolean hasResidueSite() {
          return residueSiteBuilder_ != null || residueSite_ != null;
        }
        /**
         * <pre>
         * The residues that contain a given sugar will be captured. The order of
         * given residues will be captured in the 5‘-3‘direction consistent with
         * the base sequences listed above
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 6;</code>
         * @return The residueSite.
         */
        public com.google.fhir.r4.core.String getResidueSite() {
          if (residueSiteBuilder_ == null) {
            return residueSite_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : residueSite_;
          } else {
            return residueSiteBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The residues that contain a given sugar will be captured. The order of
         * given residues will be captured in the 5‘-3‘direction consistent with
         * the base sequences listed above
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 6;</code>
         */
        public Builder setResidueSite(com.google.fhir.r4.core.String value) {
          if (residueSiteBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            residueSite_ = value;
            onChanged();
          } else {
            residueSiteBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * The residues that contain a given sugar will be captured. The order of
         * given residues will be captured in the 5‘-3‘direction consistent with
         * the base sequences listed above
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 6;</code>
         */
        public Builder setResidueSite(
            com.google.fhir.r4.core.String.Builder builderForValue) {
          if (residueSiteBuilder_ == null) {
            residueSite_ = builderForValue.build();
            onChanged();
          } else {
            residueSiteBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * The residues that contain a given sugar will be captured. The order of
         * given residues will be captured in the 5‘-3‘direction consistent with
         * the base sequences listed above
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 6;</code>
         */
        public Builder mergeResidueSite(com.google.fhir.r4.core.String value) {
          if (residueSiteBuilder_ == null) {
            if (residueSite_ != null) {
              residueSite_ =
                com.google.fhir.r4.core.String.newBuilder(residueSite_).mergeFrom(value).buildPartial();
            } else {
              residueSite_ = value;
            }
            onChanged();
          } else {
            residueSiteBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * The residues that contain a given sugar will be captured. The order of
         * given residues will be captured in the 5‘-3‘direction consistent with
         * the base sequences listed above
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 6;</code>
         */
        public Builder clearResidueSite() {
          if (residueSiteBuilder_ == null) {
            residueSite_ = null;
            onChanged();
          } else {
            residueSite_ = null;
            residueSiteBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * The residues that contain a given sugar will be captured. The order of
         * given residues will be captured in the 5‘-3‘direction consistent with
         * the base sequences listed above
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 6;</code>
         */
        public com.google.fhir.r4.core.String.Builder getResidueSiteBuilder() {
          
          onChanged();
          return getResidueSiteFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The residues that contain a given sugar will be captured. The order of
         * given residues will be captured in the 5‘-3‘direction consistent with
         * the base sequences listed above
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 6;</code>
         */
        public com.google.fhir.r4.core.StringOrBuilder getResidueSiteOrBuilder() {
          if (residueSiteBuilder_ != null) {
            return residueSiteBuilder_.getMessageOrBuilder();
          } else {
            return residueSite_ == null ?
                com.google.fhir.r4.core.String.getDefaultInstance() : residueSite_;
          }
        }
        /**
         * <pre>
         * The residues that contain a given sugar will be captured. The order of
         * given residues will be captured in the 5‘-3‘direction consistent with
         * the base sequences listed above
         * </pre>
         *
         * <code>.google.fhir.r4.core.String residue_site = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> 
            getResidueSiteFieldBuilder() {
          if (residueSiteBuilder_ == null) {
            residueSiteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder>(
                    getResidueSite(),
                    getParentForChildren(),
                    isClean());
            residueSite_ = null;
          }
          return residueSiteBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar)
      }

      // @@protoc_insertion_point(class_scope:google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar)
      private static final com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar();
      }

      public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Sugar>
          PARSER = new com.google.protobuf.AbstractParser<Sugar>() {
        @java.lang.Override
        public Sugar parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Sugar(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Sugar> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Sugar> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int ID_FIELD_NUMBER = 1;
    private com.google.fhir.r4.core.String id_;
    /**
     * <pre>
     * Unique id for inter-element referencing
     * </pre>
     *
     * <code>.google.fhir.r4.core.String id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return id_ != null;
    }
    /**
     * <pre>
     * Unique id for inter-element referencing
     * </pre>
     *
     * <code>.google.fhir.r4.core.String id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public com.google.fhir.r4.core.String getId() {
      return id_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : id_;
    }
    /**
     * <pre>
     * Unique id for inter-element referencing
     * </pre>
     *
     * <code>.google.fhir.r4.core.String id = 1;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.StringOrBuilder getIdOrBuilder() {
      return getId();
    }

    public static final int EXTENSION_FIELD_NUMBER = 2;
    private java.util.List<com.google.fhir.r4.core.Extension> extension_;
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.fhir.r4.core.Extension> getExtensionList() {
      return extension_;
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
        getExtensionOrBuilderList() {
      return extension_;
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
     */
    @java.lang.Override
    public int getExtensionCount() {
      return extension_.size();
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.Extension getExtension(int index) {
      return extension_.get(index);
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.ExtensionOrBuilder getExtensionOrBuilder(
        int index) {
      return extension_.get(index);
    }

    public static final int MODIFIER_EXTENSION_FIELD_NUMBER = 3;
    private java.util.List<com.google.fhir.r4.core.Extension> modifierExtension_;
    /**
     * <pre>
     * Extensions that cannot be ignored even if unrecognized
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.fhir.r4.core.Extension> getModifierExtensionList() {
      return modifierExtension_;
    }
    /**
     * <pre>
     * Extensions that cannot be ignored even if unrecognized
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
        getModifierExtensionOrBuilderList() {
      return modifierExtension_;
    }
    /**
     * <pre>
     * Extensions that cannot be ignored even if unrecognized
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
     */
    @java.lang.Override
    public int getModifierExtensionCount() {
      return modifierExtension_.size();
    }
    /**
     * <pre>
     * Extensions that cannot be ignored even if unrecognized
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.Extension getModifierExtension(int index) {
      return modifierExtension_.get(index);
    }
    /**
     * <pre>
     * Extensions that cannot be ignored even if unrecognized
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.ExtensionOrBuilder getModifierExtensionOrBuilder(
        int index) {
      return modifierExtension_.get(index);
    }

    public static final int SUBUNIT_FIELD_NUMBER = 4;
    private com.google.fhir.r4.core.Integer subunit_;
    /**
     * <pre>
     * Index of linear sequences of nucleic acids in order of decreasing length.
     * Sequences of the same length will be ordered by molecular weight.
     * Subunits that have identical sequences will be repeated and have
     * sequential subscripts
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
     * @return Whether the subunit field is set.
     */
    @java.lang.Override
    public boolean hasSubunit() {
      return subunit_ != null;
    }
    /**
     * <pre>
     * Index of linear sequences of nucleic acids in order of decreasing length.
     * Sequences of the same length will be ordered by molecular weight.
     * Subunits that have identical sequences will be repeated and have
     * sequential subscripts
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
     * @return The subunit.
     */
    @java.lang.Override
    public com.google.fhir.r4.core.Integer getSubunit() {
      return subunit_ == null ? com.google.fhir.r4.core.Integer.getDefaultInstance() : subunit_;
    }
    /**
     * <pre>
     * Index of linear sequences of nucleic acids in order of decreasing length.
     * Sequences of the same length will be ordered by molecular weight.
     * Subunits that have identical sequences will be repeated and have
     * sequential subscripts
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.IntegerOrBuilder getSubunitOrBuilder() {
      return getSubunit();
    }

    public static final int SEQUENCE_FIELD_NUMBER = 5;
    private com.google.fhir.r4.core.String sequence_;
    /**
     * <pre>
     * Actual nucleotide sequence notation from 5' to 3' end using standard
     * single letter codes. In addition to the base sequence, sugar and type of
     * phosphate or non-phosphate linkage should also be captured
     * </pre>
     *
     * <code>.google.fhir.r4.core.String sequence = 5;</code>
     * @return Whether the sequence field is set.
     */
    @java.lang.Override
    public boolean hasSequence() {
      return sequence_ != null;
    }
    /**
     * <pre>
     * Actual nucleotide sequence notation from 5' to 3' end using standard
     * single letter codes. In addition to the base sequence, sugar and type of
     * phosphate or non-phosphate linkage should also be captured
     * </pre>
     *
     * <code>.google.fhir.r4.core.String sequence = 5;</code>
     * @return The sequence.
     */
    @java.lang.Override
    public com.google.fhir.r4.core.String getSequence() {
      return sequence_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : sequence_;
    }
    /**
     * <pre>
     * Actual nucleotide sequence notation from 5' to 3' end using standard
     * single letter codes. In addition to the base sequence, sugar and type of
     * phosphate or non-phosphate linkage should also be captured
     * </pre>
     *
     * <code>.google.fhir.r4.core.String sequence = 5;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.StringOrBuilder getSequenceOrBuilder() {
      return getSequence();
    }

    public static final int LENGTH_FIELD_NUMBER = 6;
    private com.google.fhir.r4.core.Integer length_;
    /**
     * <pre>
     * The length of the sequence shall be captured
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer length = 6;</code>
     * @return Whether the length field is set.
     */
    @java.lang.Override
    public boolean hasLength() {
      return length_ != null;
    }
    /**
     * <pre>
     * The length of the sequence shall be captured
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer length = 6;</code>
     * @return The length.
     */
    @java.lang.Override
    public com.google.fhir.r4.core.Integer getLength() {
      return length_ == null ? com.google.fhir.r4.core.Integer.getDefaultInstance() : length_;
    }
    /**
     * <pre>
     * The length of the sequence shall be captured
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer length = 6;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.IntegerOrBuilder getLengthOrBuilder() {
      return getLength();
    }

    public static final int SEQUENCE_ATTACHMENT_FIELD_NUMBER = 7;
    private com.google.fhir.r4.core.Attachment sequenceAttachment_;
    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
     * @return Whether the sequenceAttachment field is set.
     */
    @java.lang.Override
    public boolean hasSequenceAttachment() {
      return sequenceAttachment_ != null;
    }
    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
     * @return The sequenceAttachment.
     */
    @java.lang.Override
    public com.google.fhir.r4.core.Attachment getSequenceAttachment() {
      return sequenceAttachment_ == null ? com.google.fhir.r4.core.Attachment.getDefaultInstance() : sequenceAttachment_;
    }
    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.AttachmentOrBuilder getSequenceAttachmentOrBuilder() {
      return getSequenceAttachment();
    }

    public static final int FIVE_PRIME_FIELD_NUMBER = 8;
    private com.google.fhir.r4.core.CodeableConcept fivePrime_;
    /**
     * <pre>
     * The nucleotide present at the 5’ terminal shall be specified based on a
     * controlled vocabulary. Since the sequence is represented from the 5' to
     * the 3' end, the 5’ prime nucleotide is the letter at the first position
     * in the sequence. A separate representation would be redundant
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
     * @return Whether the fivePrime field is set.
     */
    @java.lang.Override
    public boolean hasFivePrime() {
      return fivePrime_ != null;
    }
    /**
     * <pre>
     * The nucleotide present at the 5’ terminal shall be specified based on a
     * controlled vocabulary. Since the sequence is represented from the 5' to
     * the 3' end, the 5’ prime nucleotide is the letter at the first position
     * in the sequence. A separate representation would be redundant
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
     * @return The fivePrime.
     */
    @java.lang.Override
    public com.google.fhir.r4.core.CodeableConcept getFivePrime() {
      return fivePrime_ == null ? com.google.fhir.r4.core.CodeableConcept.getDefaultInstance() : fivePrime_;
    }
    /**
     * <pre>
     * The nucleotide present at the 5’ terminal shall be specified based on a
     * controlled vocabulary. Since the sequence is represented from the 5' to
     * the 3' end, the 5’ prime nucleotide is the letter at the first position
     * in the sequence. A separate representation would be redundant
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.CodeableConceptOrBuilder getFivePrimeOrBuilder() {
      return getFivePrime();
    }

    public static final int THREE_PRIME_FIELD_NUMBER = 9;
    private com.google.fhir.r4.core.CodeableConcept threePrime_;
    /**
     * <pre>
     * The nucleotide present at the 3’ terminal shall be specified based on a
     * controlled vocabulary. Since the sequence is represented from the 5' to
     * the 3' end, the 5’ prime nucleotide is the letter at the last position in
     * the sequence. A separate representation would be redundant
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
     * @return Whether the threePrime field is set.
     */
    @java.lang.Override
    public boolean hasThreePrime() {
      return threePrime_ != null;
    }
    /**
     * <pre>
     * The nucleotide present at the 3’ terminal shall be specified based on a
     * controlled vocabulary. Since the sequence is represented from the 5' to
     * the 3' end, the 5’ prime nucleotide is the letter at the last position in
     * the sequence. A separate representation would be redundant
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
     * @return The threePrime.
     */
    @java.lang.Override
    public com.google.fhir.r4.core.CodeableConcept getThreePrime() {
      return threePrime_ == null ? com.google.fhir.r4.core.CodeableConcept.getDefaultInstance() : threePrime_;
    }
    /**
     * <pre>
     * The nucleotide present at the 3’ terminal shall be specified based on a
     * controlled vocabulary. Since the sequence is represented from the 5' to
     * the 3' end, the 5’ prime nucleotide is the letter at the last position in
     * the sequence. A separate representation would be redundant
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.CodeableConceptOrBuilder getThreePrimeOrBuilder() {
      return getThreePrime();
    }

    public static final int LINKAGE_FIELD_NUMBER = 10;
    private java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage> linkage_;
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage> getLinkageList() {
      return linkage_;
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.LinkageOrBuilder> 
        getLinkageOrBuilderList() {
      return linkage_;
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
     */
    @java.lang.Override
    public int getLinkageCount() {
      return linkage_.size();
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage getLinkage(int index) {
      return linkage_.get(index);
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.LinkageOrBuilder getLinkageOrBuilder(
        int index) {
      return linkage_.get(index);
    }

    public static final int SUGAR_FIELD_NUMBER = 11;
    private java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar> sugar_;
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
     */
    @java.lang.Override
    public java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar> getSugarList() {
      return sugar_;
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.SugarOrBuilder> 
        getSugarOrBuilderList() {
      return sugar_;
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
     */
    @java.lang.Override
    public int getSugarCount() {
      return sugar_.size();
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar getSugar(int index) {
      return sugar_.get(index);
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
     */
    @java.lang.Override
    public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.SugarOrBuilder getSugarOrBuilder(
        int index) {
      return sugar_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != null) {
        output.writeMessage(1, getId());
      }
      for (int i = 0; i < extension_.size(); i++) {
        output.writeMessage(2, extension_.get(i));
      }
      for (int i = 0; i < modifierExtension_.size(); i++) {
        output.writeMessage(3, modifierExtension_.get(i));
      }
      if (subunit_ != null) {
        output.writeMessage(4, getSubunit());
      }
      if (sequence_ != null) {
        output.writeMessage(5, getSequence());
      }
      if (length_ != null) {
        output.writeMessage(6, getLength());
      }
      if (sequenceAttachment_ != null) {
        output.writeMessage(7, getSequenceAttachment());
      }
      if (fivePrime_ != null) {
        output.writeMessage(8, getFivePrime());
      }
      if (threePrime_ != null) {
        output.writeMessage(9, getThreePrime());
      }
      for (int i = 0; i < linkage_.size(); i++) {
        output.writeMessage(10, linkage_.get(i));
      }
      for (int i = 0; i < sugar_.size(); i++) {
        output.writeMessage(11, sugar_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getId());
      }
      for (int i = 0; i < extension_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, extension_.get(i));
      }
      for (int i = 0; i < modifierExtension_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, modifierExtension_.get(i));
      }
      if (subunit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSubunit());
      }
      if (sequence_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSequence());
      }
      if (length_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getLength());
      }
      if (sequenceAttachment_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getSequenceAttachment());
      }
      if (fivePrime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getFivePrime());
      }
      if (threePrime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getThreePrime());
      }
      for (int i = 0; i < linkage_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, linkage_.get(i));
      }
      for (int i = 0; i < sugar_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, sugar_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit)) {
        return super.equals(obj);
      }
      com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit other = (com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (!getExtensionList()
          .equals(other.getExtensionList())) return false;
      if (!getModifierExtensionList()
          .equals(other.getModifierExtensionList())) return false;
      if (hasSubunit() != other.hasSubunit()) return false;
      if (hasSubunit()) {
        if (!getSubunit()
            .equals(other.getSubunit())) return false;
      }
      if (hasSequence() != other.hasSequence()) return false;
      if (hasSequence()) {
        if (!getSequence()
            .equals(other.getSequence())) return false;
      }
      if (hasLength() != other.hasLength()) return false;
      if (hasLength()) {
        if (!getLength()
            .equals(other.getLength())) return false;
      }
      if (hasSequenceAttachment() != other.hasSequenceAttachment()) return false;
      if (hasSequenceAttachment()) {
        if (!getSequenceAttachment()
            .equals(other.getSequenceAttachment())) return false;
      }
      if (hasFivePrime() != other.hasFivePrime()) return false;
      if (hasFivePrime()) {
        if (!getFivePrime()
            .equals(other.getFivePrime())) return false;
      }
      if (hasThreePrime() != other.hasThreePrime()) return false;
      if (hasThreePrime()) {
        if (!getThreePrime()
            .equals(other.getThreePrime())) return false;
      }
      if (!getLinkageList()
          .equals(other.getLinkageList())) return false;
      if (!getSugarList()
          .equals(other.getSugarList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (getExtensionCount() > 0) {
        hash = (37 * hash) + EXTENSION_FIELD_NUMBER;
        hash = (53 * hash) + getExtensionList().hashCode();
      }
      if (getModifierExtensionCount() > 0) {
        hash = (37 * hash) + MODIFIER_EXTENSION_FIELD_NUMBER;
        hash = (53 * hash) + getModifierExtensionList().hashCode();
      }
      if (hasSubunit()) {
        hash = (37 * hash) + SUBUNIT_FIELD_NUMBER;
        hash = (53 * hash) + getSubunit().hashCode();
      }
      if (hasSequence()) {
        hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
        hash = (53 * hash) + getSequence().hashCode();
      }
      if (hasLength()) {
        hash = (37 * hash) + LENGTH_FIELD_NUMBER;
        hash = (53 * hash) + getLength().hashCode();
      }
      if (hasSequenceAttachment()) {
        hash = (37 * hash) + SEQUENCE_ATTACHMENT_FIELD_NUMBER;
        hash = (53 * hash) + getSequenceAttachment().hashCode();
      }
      if (hasFivePrime()) {
        hash = (37 * hash) + FIVE_PRIME_FIELD_NUMBER;
        hash = (53 * hash) + getFivePrime().hashCode();
      }
      if (hasThreePrime()) {
        hash = (37 * hash) + THREE_PRIME_FIELD_NUMBER;
        hash = (53 * hash) + getThreePrime().hashCode();
      }
      if (getLinkageCount() > 0) {
        hash = (37 * hash) + LINKAGE_FIELD_NUMBER;
        hash = (53 * hash) + getLinkageList().hashCode();
      }
      if (getSugarCount() > 0) {
        hash = (37 * hash) + SUGAR_FIELD_NUMBER;
        hash = (53 * hash) + getSugarList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Subunits are listed in order of decreasing length; sequences of the same
     * length will be ordered by molecular weight; subunits that have identical
     * sequences will be repeated multiple times
     * </pre>
     *
     * Protobuf type {@code google.fhir.r4.core.SubstanceNucleicAcid.Subunit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.fhir.r4.core.SubstanceNucleicAcid.Subunit)
        com.google.fhir.r4.core.SubstanceNucleicAcid.SubunitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.class, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Builder.class);
      }

      // Construct using com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getExtensionFieldBuilder();
          getModifierExtensionFieldBuilder();
          getLinkageFieldBuilder();
          getSugarFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (idBuilder_ == null) {
          id_ = null;
        } else {
          id_ = null;
          idBuilder_ = null;
        }
        if (extensionBuilder_ == null) {
          extension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          extensionBuilder_.clear();
        }
        if (modifierExtensionBuilder_ == null) {
          modifierExtension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          modifierExtensionBuilder_.clear();
        }
        if (subunitBuilder_ == null) {
          subunit_ = null;
        } else {
          subunit_ = null;
          subunitBuilder_ = null;
        }
        if (sequenceBuilder_ == null) {
          sequence_ = null;
        } else {
          sequence_ = null;
          sequenceBuilder_ = null;
        }
        if (lengthBuilder_ == null) {
          length_ = null;
        } else {
          length_ = null;
          lengthBuilder_ = null;
        }
        if (sequenceAttachmentBuilder_ == null) {
          sequenceAttachment_ = null;
        } else {
          sequenceAttachment_ = null;
          sequenceAttachmentBuilder_ = null;
        }
        if (fivePrimeBuilder_ == null) {
          fivePrime_ = null;
        } else {
          fivePrime_ = null;
          fivePrimeBuilder_ = null;
        }
        if (threePrimeBuilder_ == null) {
          threePrime_ = null;
        } else {
          threePrime_ = null;
          threePrimeBuilder_ = null;
        }
        if (linkageBuilder_ == null) {
          linkage_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          linkageBuilder_.clear();
        }
        if (sugarBuilder_ == null) {
          sugar_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          sugarBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_Subunit_descriptor;
      }

      @java.lang.Override
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit getDefaultInstanceForType() {
        return com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit build() {
        com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit buildPartial() {
        com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit result = new com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit(this);
        int from_bitField0_ = bitField0_;
        if (idBuilder_ == null) {
          result.id_ = id_;
        } else {
          result.id_ = idBuilder_.build();
        }
        if (extensionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            extension_ = java.util.Collections.unmodifiableList(extension_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.extension_ = extension_;
        } else {
          result.extension_ = extensionBuilder_.build();
        }
        if (modifierExtensionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            modifierExtension_ = java.util.Collections.unmodifiableList(modifierExtension_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.modifierExtension_ = modifierExtension_;
        } else {
          result.modifierExtension_ = modifierExtensionBuilder_.build();
        }
        if (subunitBuilder_ == null) {
          result.subunit_ = subunit_;
        } else {
          result.subunit_ = subunitBuilder_.build();
        }
        if (sequenceBuilder_ == null) {
          result.sequence_ = sequence_;
        } else {
          result.sequence_ = sequenceBuilder_.build();
        }
        if (lengthBuilder_ == null) {
          result.length_ = length_;
        } else {
          result.length_ = lengthBuilder_.build();
        }
        if (sequenceAttachmentBuilder_ == null) {
          result.sequenceAttachment_ = sequenceAttachment_;
        } else {
          result.sequenceAttachment_ = sequenceAttachmentBuilder_.build();
        }
        if (fivePrimeBuilder_ == null) {
          result.fivePrime_ = fivePrime_;
        } else {
          result.fivePrime_ = fivePrimeBuilder_.build();
        }
        if (threePrimeBuilder_ == null) {
          result.threePrime_ = threePrime_;
        } else {
          result.threePrime_ = threePrimeBuilder_.build();
        }
        if (linkageBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            linkage_ = java.util.Collections.unmodifiableList(linkage_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.linkage_ = linkage_;
        } else {
          result.linkage_ = linkageBuilder_.build();
        }
        if (sugarBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            sugar_ = java.util.Collections.unmodifiableList(sugar_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.sugar_ = sugar_;
        } else {
          result.sugar_ = sugarBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit) {
          return mergeFrom((com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit other) {
        if (other == com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.getDefaultInstance()) return this;
        if (other.hasId()) {
          mergeId(other.getId());
        }
        if (extensionBuilder_ == null) {
          if (!other.extension_.isEmpty()) {
            if (extension_.isEmpty()) {
              extension_ = other.extension_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureExtensionIsMutable();
              extension_.addAll(other.extension_);
            }
            onChanged();
          }
        } else {
          if (!other.extension_.isEmpty()) {
            if (extensionBuilder_.isEmpty()) {
              extensionBuilder_.dispose();
              extensionBuilder_ = null;
              extension_ = other.extension_;
              bitField0_ = (bitField0_ & ~0x00000001);
              extensionBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExtensionFieldBuilder() : null;
            } else {
              extensionBuilder_.addAllMessages(other.extension_);
            }
          }
        }
        if (modifierExtensionBuilder_ == null) {
          if (!other.modifierExtension_.isEmpty()) {
            if (modifierExtension_.isEmpty()) {
              modifierExtension_ = other.modifierExtension_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureModifierExtensionIsMutable();
              modifierExtension_.addAll(other.modifierExtension_);
            }
            onChanged();
          }
        } else {
          if (!other.modifierExtension_.isEmpty()) {
            if (modifierExtensionBuilder_.isEmpty()) {
              modifierExtensionBuilder_.dispose();
              modifierExtensionBuilder_ = null;
              modifierExtension_ = other.modifierExtension_;
              bitField0_ = (bitField0_ & ~0x00000002);
              modifierExtensionBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getModifierExtensionFieldBuilder() : null;
            } else {
              modifierExtensionBuilder_.addAllMessages(other.modifierExtension_);
            }
          }
        }
        if (other.hasSubunit()) {
          mergeSubunit(other.getSubunit());
        }
        if (other.hasSequence()) {
          mergeSequence(other.getSequence());
        }
        if (other.hasLength()) {
          mergeLength(other.getLength());
        }
        if (other.hasSequenceAttachment()) {
          mergeSequenceAttachment(other.getSequenceAttachment());
        }
        if (other.hasFivePrime()) {
          mergeFivePrime(other.getFivePrime());
        }
        if (other.hasThreePrime()) {
          mergeThreePrime(other.getThreePrime());
        }
        if (linkageBuilder_ == null) {
          if (!other.linkage_.isEmpty()) {
            if (linkage_.isEmpty()) {
              linkage_ = other.linkage_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureLinkageIsMutable();
              linkage_.addAll(other.linkage_);
            }
            onChanged();
          }
        } else {
          if (!other.linkage_.isEmpty()) {
            if (linkageBuilder_.isEmpty()) {
              linkageBuilder_.dispose();
              linkageBuilder_ = null;
              linkage_ = other.linkage_;
              bitField0_ = (bitField0_ & ~0x00000004);
              linkageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLinkageFieldBuilder() : null;
            } else {
              linkageBuilder_.addAllMessages(other.linkage_);
            }
          }
        }
        if (sugarBuilder_ == null) {
          if (!other.sugar_.isEmpty()) {
            if (sugar_.isEmpty()) {
              sugar_ = other.sugar_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSugarIsMutable();
              sugar_.addAll(other.sugar_);
            }
            onChanged();
          }
        } else {
          if (!other.sugar_.isEmpty()) {
            if (sugarBuilder_.isEmpty()) {
              sugarBuilder_.dispose();
              sugarBuilder_ = null;
              sugar_ = other.sugar_;
              bitField0_ = (bitField0_ & ~0x00000008);
              sugarBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSugarFieldBuilder() : null;
            } else {
              sugarBuilder_.addAllMessages(other.sugar_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.fhir.r4.core.String id_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> idBuilder_;
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return idBuilder_ != null || id_ != null;
      }
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       * @return The id.
       */
      public com.google.fhir.r4.core.String getId() {
        if (idBuilder_ == null) {
          return id_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : id_;
        } else {
          return idBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       */
      public Builder setId(com.google.fhir.r4.core.String value) {
        if (idBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          id_ = value;
          onChanged();
        } else {
          idBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       */
      public Builder setId(
          com.google.fhir.r4.core.String.Builder builderForValue) {
        if (idBuilder_ == null) {
          id_ = builderForValue.build();
          onChanged();
        } else {
          idBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       */
      public Builder mergeId(com.google.fhir.r4.core.String value) {
        if (idBuilder_ == null) {
          if (id_ != null) {
            id_ =
              com.google.fhir.r4.core.String.newBuilder(id_).mergeFrom(value).buildPartial();
          } else {
            id_ = value;
          }
          onChanged();
        } else {
          idBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       */
      public Builder clearId() {
        if (idBuilder_ == null) {
          id_ = null;
          onChanged();
        } else {
          id_ = null;
          idBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       */
      public com.google.fhir.r4.core.String.Builder getIdBuilder() {
        
        onChanged();
        return getIdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       */
      public com.google.fhir.r4.core.StringOrBuilder getIdOrBuilder() {
        if (idBuilder_ != null) {
          return idBuilder_.getMessageOrBuilder();
        } else {
          return id_ == null ?
              com.google.fhir.r4.core.String.getDefaultInstance() : id_;
        }
      }
      /**
       * <pre>
       * Unique id for inter-element referencing
       * </pre>
       *
       * <code>.google.fhir.r4.core.String id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> 
          getIdFieldBuilder() {
        if (idBuilder_ == null) {
          idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder>(
                  getId(),
                  getParentForChildren(),
                  isClean());
          id_ = null;
        }
        return idBuilder_;
      }

      private java.util.List<com.google.fhir.r4.core.Extension> extension_ =
        java.util.Collections.emptyList();
      private void ensureExtensionIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          extension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>(extension_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> extensionBuilder_;

      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public java.util.List<com.google.fhir.r4.core.Extension> getExtensionList() {
        if (extensionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(extension_);
        } else {
          return extensionBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public int getExtensionCount() {
        if (extensionBuilder_ == null) {
          return extension_.size();
        } else {
          return extensionBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public com.google.fhir.r4.core.Extension getExtension(int index) {
        if (extensionBuilder_ == null) {
          return extension_.get(index);
        } else {
          return extensionBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public Builder setExtension(
          int index, com.google.fhir.r4.core.Extension value) {
        if (extensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtensionIsMutable();
          extension_.set(index, value);
          onChanged();
        } else {
          extensionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public Builder setExtension(
          int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          extension_.set(index, builderForValue.build());
          onChanged();
        } else {
          extensionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public Builder addExtension(com.google.fhir.r4.core.Extension value) {
        if (extensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtensionIsMutable();
          extension_.add(value);
          onChanged();
        } else {
          extensionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public Builder addExtension(
          int index, com.google.fhir.r4.core.Extension value) {
        if (extensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtensionIsMutable();
          extension_.add(index, value);
          onChanged();
        } else {
          extensionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public Builder addExtension(
          com.google.fhir.r4.core.Extension.Builder builderForValue) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          extension_.add(builderForValue.build());
          onChanged();
        } else {
          extensionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public Builder addExtension(
          int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          extension_.add(index, builderForValue.build());
          onChanged();
        } else {
          extensionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public Builder addAllExtension(
          java.lang.Iterable<? extends com.google.fhir.r4.core.Extension> values) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, extension_);
          onChanged();
        } else {
          extensionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public Builder clearExtension() {
        if (extensionBuilder_ == null) {
          extension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          extensionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public Builder removeExtension(int index) {
        if (extensionBuilder_ == null) {
          ensureExtensionIsMutable();
          extension_.remove(index);
          onChanged();
        } else {
          extensionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public com.google.fhir.r4.core.Extension.Builder getExtensionBuilder(
          int index) {
        return getExtensionFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public com.google.fhir.r4.core.ExtensionOrBuilder getExtensionOrBuilder(
          int index) {
        if (extensionBuilder_ == null) {
          return extension_.get(index);  } else {
          return extensionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
           getExtensionOrBuilderList() {
        if (extensionBuilder_ != null) {
          return extensionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(extension_);
        }
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public com.google.fhir.r4.core.Extension.Builder addExtensionBuilder() {
        return getExtensionFieldBuilder().addBuilder(
            com.google.fhir.r4.core.Extension.getDefaultInstance());
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public com.google.fhir.r4.core.Extension.Builder addExtensionBuilder(
          int index) {
        return getExtensionFieldBuilder().addBuilder(
            index, com.google.fhir.r4.core.Extension.getDefaultInstance());
      }
      /**
       * <pre>
       * Additional content defined by implementations
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
       */
      public java.util.List<com.google.fhir.r4.core.Extension.Builder> 
           getExtensionBuilderList() {
        return getExtensionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> 
          getExtensionFieldBuilder() {
        if (extensionBuilder_ == null) {
          extensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder>(
                  extension_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          extension_ = null;
        }
        return extensionBuilder_;
      }

      private java.util.List<com.google.fhir.r4.core.Extension> modifierExtension_ =
        java.util.Collections.emptyList();
      private void ensureModifierExtensionIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          modifierExtension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>(modifierExtension_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> modifierExtensionBuilder_;

      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public java.util.List<com.google.fhir.r4.core.Extension> getModifierExtensionList() {
        if (modifierExtensionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(modifierExtension_);
        } else {
          return modifierExtensionBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public int getModifierExtensionCount() {
        if (modifierExtensionBuilder_ == null) {
          return modifierExtension_.size();
        } else {
          return modifierExtensionBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public com.google.fhir.r4.core.Extension getModifierExtension(int index) {
        if (modifierExtensionBuilder_ == null) {
          return modifierExtension_.get(index);
        } else {
          return modifierExtensionBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public Builder setModifierExtension(
          int index, com.google.fhir.r4.core.Extension value) {
        if (modifierExtensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifierExtensionIsMutable();
          modifierExtension_.set(index, value);
          onChanged();
        } else {
          modifierExtensionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public Builder setModifierExtension(
          int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
        if (modifierExtensionBuilder_ == null) {
          ensureModifierExtensionIsMutable();
          modifierExtension_.set(index, builderForValue.build());
          onChanged();
        } else {
          modifierExtensionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public Builder addModifierExtension(com.google.fhir.r4.core.Extension value) {
        if (modifierExtensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifierExtensionIsMutable();
          modifierExtension_.add(value);
          onChanged();
        } else {
          modifierExtensionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public Builder addModifierExtension(
          int index, com.google.fhir.r4.core.Extension value) {
        if (modifierExtensionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModifierExtensionIsMutable();
          modifierExtension_.add(index, value);
          onChanged();
        } else {
          modifierExtensionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public Builder addModifierExtension(
          com.google.fhir.r4.core.Extension.Builder builderForValue) {
        if (modifierExtensionBuilder_ == null) {
          ensureModifierExtensionIsMutable();
          modifierExtension_.add(builderForValue.build());
          onChanged();
        } else {
          modifierExtensionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public Builder addModifierExtension(
          int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
        if (modifierExtensionBuilder_ == null) {
          ensureModifierExtensionIsMutable();
          modifierExtension_.add(index, builderForValue.build());
          onChanged();
        } else {
          modifierExtensionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public Builder addAllModifierExtension(
          java.lang.Iterable<? extends com.google.fhir.r4.core.Extension> values) {
        if (modifierExtensionBuilder_ == null) {
          ensureModifierExtensionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, modifierExtension_);
          onChanged();
        } else {
          modifierExtensionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public Builder clearModifierExtension() {
        if (modifierExtensionBuilder_ == null) {
          modifierExtension_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          modifierExtensionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public Builder removeModifierExtension(int index) {
        if (modifierExtensionBuilder_ == null) {
          ensureModifierExtensionIsMutable();
          modifierExtension_.remove(index);
          onChanged();
        } else {
          modifierExtensionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public com.google.fhir.r4.core.Extension.Builder getModifierExtensionBuilder(
          int index) {
        return getModifierExtensionFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public com.google.fhir.r4.core.ExtensionOrBuilder getModifierExtensionOrBuilder(
          int index) {
        if (modifierExtensionBuilder_ == null) {
          return modifierExtension_.get(index);  } else {
          return modifierExtensionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
           getModifierExtensionOrBuilderList() {
        if (modifierExtensionBuilder_ != null) {
          return modifierExtensionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(modifierExtension_);
        }
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public com.google.fhir.r4.core.Extension.Builder addModifierExtensionBuilder() {
        return getModifierExtensionFieldBuilder().addBuilder(
            com.google.fhir.r4.core.Extension.getDefaultInstance());
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public com.google.fhir.r4.core.Extension.Builder addModifierExtensionBuilder(
          int index) {
        return getModifierExtensionFieldBuilder().addBuilder(
            index, com.google.fhir.r4.core.Extension.getDefaultInstance());
      }
      /**
       * <pre>
       * Extensions that cannot be ignored even if unrecognized
       * </pre>
       *
       * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
       */
      public java.util.List<com.google.fhir.r4.core.Extension.Builder> 
           getModifierExtensionBuilderList() {
        return getModifierExtensionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> 
          getModifierExtensionFieldBuilder() {
        if (modifierExtensionBuilder_ == null) {
          modifierExtensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder>(
                  modifierExtension_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          modifierExtension_ = null;
        }
        return modifierExtensionBuilder_;
      }

      private com.google.fhir.r4.core.Integer subunit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.r4.core.Integer, com.google.fhir.r4.core.Integer.Builder, com.google.fhir.r4.core.IntegerOrBuilder> subunitBuilder_;
      /**
       * <pre>
       * Index of linear sequences of nucleic acids in order of decreasing length.
       * Sequences of the same length will be ordered by molecular weight.
       * Subunits that have identical sequences will be repeated and have
       * sequential subscripts
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
       * @return Whether the subunit field is set.
       */
      public boolean hasSubunit() {
        return subunitBuilder_ != null || subunit_ != null;
      }
      /**
       * <pre>
       * Index of linear sequences of nucleic acids in order of decreasing length.
       * Sequences of the same length will be ordered by molecular weight.
       * Subunits that have identical sequences will be repeated and have
       * sequential subscripts
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
       * @return The subunit.
       */
      public com.google.fhir.r4.core.Integer getSubunit() {
        if (subunitBuilder_ == null) {
          return subunit_ == null ? com.google.fhir.r4.core.Integer.getDefaultInstance() : subunit_;
        } else {
          return subunitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Index of linear sequences of nucleic acids in order of decreasing length.
       * Sequences of the same length will be ordered by molecular weight.
       * Subunits that have identical sequences will be repeated and have
       * sequential subscripts
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
       */
      public Builder setSubunit(com.google.fhir.r4.core.Integer value) {
        if (subunitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subunit_ = value;
          onChanged();
        } else {
          subunitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Index of linear sequences of nucleic acids in order of decreasing length.
       * Sequences of the same length will be ordered by molecular weight.
       * Subunits that have identical sequences will be repeated and have
       * sequential subscripts
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
       */
      public Builder setSubunit(
          com.google.fhir.r4.core.Integer.Builder builderForValue) {
        if (subunitBuilder_ == null) {
          subunit_ = builderForValue.build();
          onChanged();
        } else {
          subunitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Index of linear sequences of nucleic acids in order of decreasing length.
       * Sequences of the same length will be ordered by molecular weight.
       * Subunits that have identical sequences will be repeated and have
       * sequential subscripts
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
       */
      public Builder mergeSubunit(com.google.fhir.r4.core.Integer value) {
        if (subunitBuilder_ == null) {
          if (subunit_ != null) {
            subunit_ =
              com.google.fhir.r4.core.Integer.newBuilder(subunit_).mergeFrom(value).buildPartial();
          } else {
            subunit_ = value;
          }
          onChanged();
        } else {
          subunitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Index of linear sequences of nucleic acids in order of decreasing length.
       * Sequences of the same length will be ordered by molecular weight.
       * Subunits that have identical sequences will be repeated and have
       * sequential subscripts
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
       */
      public Builder clearSubunit() {
        if (subunitBuilder_ == null) {
          subunit_ = null;
          onChanged();
        } else {
          subunit_ = null;
          subunitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Index of linear sequences of nucleic acids in order of decreasing length.
       * Sequences of the same length will be ordered by molecular weight.
       * Subunits that have identical sequences will be repeated and have
       * sequential subscripts
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
       */
      public com.google.fhir.r4.core.Integer.Builder getSubunitBuilder() {
        
        onChanged();
        return getSubunitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Index of linear sequences of nucleic acids in order of decreasing length.
       * Sequences of the same length will be ordered by molecular weight.
       * Subunits that have identical sequences will be repeated and have
       * sequential subscripts
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
       */
      public com.google.fhir.r4.core.IntegerOrBuilder getSubunitOrBuilder() {
        if (subunitBuilder_ != null) {
          return subunitBuilder_.getMessageOrBuilder();
        } else {
          return subunit_ == null ?
              com.google.fhir.r4.core.Integer.getDefaultInstance() : subunit_;
        }
      }
      /**
       * <pre>
       * Index of linear sequences of nucleic acids in order of decreasing length.
       * Sequences of the same length will be ordered by molecular weight.
       * Subunits that have identical sequences will be repeated and have
       * sequential subscripts
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer subunit = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.r4.core.Integer, com.google.fhir.r4.core.Integer.Builder, com.google.fhir.r4.core.IntegerOrBuilder> 
          getSubunitFieldBuilder() {
        if (subunitBuilder_ == null) {
          subunitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.fhir.r4.core.Integer, com.google.fhir.r4.core.Integer.Builder, com.google.fhir.r4.core.IntegerOrBuilder>(
                  getSubunit(),
                  getParentForChildren(),
                  isClean());
          subunit_ = null;
        }
        return subunitBuilder_;
      }

      private com.google.fhir.r4.core.String sequence_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> sequenceBuilder_;
      /**
       * <pre>
       * Actual nucleotide sequence notation from 5' to 3' end using standard
       * single letter codes. In addition to the base sequence, sugar and type of
       * phosphate or non-phosphate linkage should also be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.String sequence = 5;</code>
       * @return Whether the sequence field is set.
       */
      public boolean hasSequence() {
        return sequenceBuilder_ != null || sequence_ != null;
      }
      /**
       * <pre>
       * Actual nucleotide sequence notation from 5' to 3' end using standard
       * single letter codes. In addition to the base sequence, sugar and type of
       * phosphate or non-phosphate linkage should also be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.String sequence = 5;</code>
       * @return The sequence.
       */
      public com.google.fhir.r4.core.String getSequence() {
        if (sequenceBuilder_ == null) {
          return sequence_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : sequence_;
        } else {
          return sequenceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Actual nucleotide sequence notation from 5' to 3' end using standard
       * single letter codes. In addition to the base sequence, sugar and type of
       * phosphate or non-phosphate linkage should also be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.String sequence = 5;</code>
       */
      public Builder setSequence(com.google.fhir.r4.core.String value) {
        if (sequenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sequence_ = value;
          onChanged();
        } else {
          sequenceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Actual nucleotide sequence notation from 5' to 3' end using standard
       * single letter codes. In addition to the base sequence, sugar and type of
       * phosphate or non-phosphate linkage should also be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.String sequence = 5;</code>
       */
      public Builder setSequence(
          com.google.fhir.r4.core.String.Builder builderForValue) {
        if (sequenceBuilder_ == null) {
          sequence_ = builderForValue.build();
          onChanged();
        } else {
          sequenceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Actual nucleotide sequence notation from 5' to 3' end using standard
       * single letter codes. In addition to the base sequence, sugar and type of
       * phosphate or non-phosphate linkage should also be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.String sequence = 5;</code>
       */
      public Builder mergeSequence(com.google.fhir.r4.core.String value) {
        if (sequenceBuilder_ == null) {
          if (sequence_ != null) {
            sequence_ =
              com.google.fhir.r4.core.String.newBuilder(sequence_).mergeFrom(value).buildPartial();
          } else {
            sequence_ = value;
          }
          onChanged();
        } else {
          sequenceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Actual nucleotide sequence notation from 5' to 3' end using standard
       * single letter codes. In addition to the base sequence, sugar and type of
       * phosphate or non-phosphate linkage should also be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.String sequence = 5;</code>
       */
      public Builder clearSequence() {
        if (sequenceBuilder_ == null) {
          sequence_ = null;
          onChanged();
        } else {
          sequence_ = null;
          sequenceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Actual nucleotide sequence notation from 5' to 3' end using standard
       * single letter codes. In addition to the base sequence, sugar and type of
       * phosphate or non-phosphate linkage should also be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.String sequence = 5;</code>
       */
      public com.google.fhir.r4.core.String.Builder getSequenceBuilder() {
        
        onChanged();
        return getSequenceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Actual nucleotide sequence notation from 5' to 3' end using standard
       * single letter codes. In addition to the base sequence, sugar and type of
       * phosphate or non-phosphate linkage should also be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.String sequence = 5;</code>
       */
      public com.google.fhir.r4.core.StringOrBuilder getSequenceOrBuilder() {
        if (sequenceBuilder_ != null) {
          return sequenceBuilder_.getMessageOrBuilder();
        } else {
          return sequence_ == null ?
              com.google.fhir.r4.core.String.getDefaultInstance() : sequence_;
        }
      }
      /**
       * <pre>
       * Actual nucleotide sequence notation from 5' to 3' end using standard
       * single letter codes. In addition to the base sequence, sugar and type of
       * phosphate or non-phosphate linkage should also be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.String sequence = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> 
          getSequenceFieldBuilder() {
        if (sequenceBuilder_ == null) {
          sequenceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder>(
                  getSequence(),
                  getParentForChildren(),
                  isClean());
          sequence_ = null;
        }
        return sequenceBuilder_;
      }

      private com.google.fhir.r4.core.Integer length_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.r4.core.Integer, com.google.fhir.r4.core.Integer.Builder, com.google.fhir.r4.core.IntegerOrBuilder> lengthBuilder_;
      /**
       * <pre>
       * The length of the sequence shall be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer length = 6;</code>
       * @return Whether the length field is set.
       */
      public boolean hasLength() {
        return lengthBuilder_ != null || length_ != null;
      }
      /**
       * <pre>
       * The length of the sequence shall be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer length = 6;</code>
       * @return The length.
       */
      public com.google.fhir.r4.core.Integer getLength() {
        if (lengthBuilder_ == null) {
          return length_ == null ? com.google.fhir.r4.core.Integer.getDefaultInstance() : length_;
        } else {
          return lengthBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The length of the sequence shall be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer length = 6;</code>
       */
      public Builder setLength(com.google.fhir.r4.core.Integer value) {
        if (lengthBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          length_ = value;
          onChanged();
        } else {
          lengthBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The length of the sequence shall be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer length = 6;</code>
       */
      public Builder setLength(
          com.google.fhir.r4.core.Integer.Builder builderForValue) {
        if (lengthBuilder_ == null) {
          length_ = builderForValue.build();
          onChanged();
        } else {
          lengthBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The length of the sequence shall be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer length = 6;</code>
       */
      public Builder mergeLength(com.google.fhir.r4.core.Integer value) {
        if (lengthBuilder_ == null) {
          if (length_ != null) {
            length_ =
              com.google.fhir.r4.core.Integer.newBuilder(length_).mergeFrom(value).buildPartial();
          } else {
            length_ = value;
          }
          onChanged();
        } else {
          lengthBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The length of the sequence shall be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer length = 6;</code>
       */
      public Builder clearLength() {
        if (lengthBuilder_ == null) {
          length_ = null;
          onChanged();
        } else {
          length_ = null;
          lengthBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The length of the sequence shall be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer length = 6;</code>
       */
      public com.google.fhir.r4.core.Integer.Builder getLengthBuilder() {
        
        onChanged();
        return getLengthFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The length of the sequence shall be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer length = 6;</code>
       */
      public com.google.fhir.r4.core.IntegerOrBuilder getLengthOrBuilder() {
        if (lengthBuilder_ != null) {
          return lengthBuilder_.getMessageOrBuilder();
        } else {
          return length_ == null ?
              com.google.fhir.r4.core.Integer.getDefaultInstance() : length_;
        }
      }
      /**
       * <pre>
       * The length of the sequence shall be captured
       * </pre>
       *
       * <code>.google.fhir.r4.core.Integer length = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.r4.core.Integer, com.google.fhir.r4.core.Integer.Builder, com.google.fhir.r4.core.IntegerOrBuilder> 
          getLengthFieldBuilder() {
        if (lengthBuilder_ == null) {
          lengthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.fhir.r4.core.Integer, com.google.fhir.r4.core.Integer.Builder, com.google.fhir.r4.core.IntegerOrBuilder>(
                  getLength(),
                  getParentForChildren(),
                  isClean());
          length_ = null;
        }
        return lengthBuilder_;
      }

      private com.google.fhir.r4.core.Attachment sequenceAttachment_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.r4.core.Attachment, com.google.fhir.r4.core.Attachment.Builder, com.google.fhir.r4.core.AttachmentOrBuilder> sequenceAttachmentBuilder_;
      /**
       * <pre>
       * (TBC)
       * </pre>
       *
       * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
       * @return Whether the sequenceAttachment field is set.
       */
      public boolean hasSequenceAttachment() {
        return sequenceAttachmentBuilder_ != null || sequenceAttachment_ != null;
      }
      /**
       * <pre>
       * (TBC)
       * </pre>
       *
       * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
       * @return The sequenceAttachment.
       */
      public com.google.fhir.r4.core.Attachment getSequenceAttachment() {
        if (sequenceAttachmentBuilder_ == null) {
          return sequenceAttachment_ == null ? com.google.fhir.r4.core.Attachment.getDefaultInstance() : sequenceAttachment_;
        } else {
          return sequenceAttachmentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (TBC)
       * </pre>
       *
       * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
       */
      public Builder setSequenceAttachment(com.google.fhir.r4.core.Attachment value) {
        if (sequenceAttachmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sequenceAttachment_ = value;
          onChanged();
        } else {
          sequenceAttachmentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (TBC)
       * </pre>
       *
       * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
       */
      public Builder setSequenceAttachment(
          com.google.fhir.r4.core.Attachment.Builder builderForValue) {
        if (sequenceAttachmentBuilder_ == null) {
          sequenceAttachment_ = builderForValue.build();
          onChanged();
        } else {
          sequenceAttachmentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (TBC)
       * </pre>
       *
       * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
       */
      public Builder mergeSequenceAttachment(com.google.fhir.r4.core.Attachment value) {
        if (sequenceAttachmentBuilder_ == null) {
          if (sequenceAttachment_ != null) {
            sequenceAttachment_ =
              com.google.fhir.r4.core.Attachment.newBuilder(sequenceAttachment_).mergeFrom(value).buildPartial();
          } else {
            sequenceAttachment_ = value;
          }
          onChanged();
        } else {
          sequenceAttachmentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (TBC)
       * </pre>
       *
       * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
       */
      public Builder clearSequenceAttachment() {
        if (sequenceAttachmentBuilder_ == null) {
          sequenceAttachment_ = null;
          onChanged();
        } else {
          sequenceAttachment_ = null;
          sequenceAttachmentBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (TBC)
       * </pre>
       *
       * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
       */
      public com.google.fhir.r4.core.Attachment.Builder getSequenceAttachmentBuilder() {
        
        onChanged();
        return getSequenceAttachmentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (TBC)
       * </pre>
       *
       * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
       */
      public com.google.fhir.r4.core.AttachmentOrBuilder getSequenceAttachmentOrBuilder() {
        if (sequenceAttachmentBuilder_ != null) {
          return sequenceAttachmentBuilder_.getMessageOrBuilder();
        } else {
          return sequenceAttachment_ == null ?
              com.google.fhir.r4.core.Attachment.getDefaultInstance() : sequenceAttachment_;
        }
      }
      /**
       * <pre>
       * (TBC)
       * </pre>
       *
       * <code>.google.fhir.r4.core.Attachment sequence_attachment = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.r4.core.Attachment, com.google.fhir.r4.core.Attachment.Builder, com.google.fhir.r4.core.AttachmentOrBuilder> 
          getSequenceAttachmentFieldBuilder() {
        if (sequenceAttachmentBuilder_ == null) {
          sequenceAttachmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.fhir.r4.core.Attachment, com.google.fhir.r4.core.Attachment.Builder, com.google.fhir.r4.core.AttachmentOrBuilder>(
                  getSequenceAttachment(),
                  getParentForChildren(),
                  isClean());
          sequenceAttachment_ = null;
        }
        return sequenceAttachmentBuilder_;
      }

      private com.google.fhir.r4.core.CodeableConcept fivePrime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.r4.core.CodeableConcept, com.google.fhir.r4.core.CodeableConcept.Builder, com.google.fhir.r4.core.CodeableConceptOrBuilder> fivePrimeBuilder_;
      /**
       * <pre>
       * The nucleotide present at the 5’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the first position
       * in the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
       * @return Whether the fivePrime field is set.
       */
      public boolean hasFivePrime() {
        return fivePrimeBuilder_ != null || fivePrime_ != null;
      }
      /**
       * <pre>
       * The nucleotide present at the 5’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the first position
       * in the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
       * @return The fivePrime.
       */
      public com.google.fhir.r4.core.CodeableConcept getFivePrime() {
        if (fivePrimeBuilder_ == null) {
          return fivePrime_ == null ? com.google.fhir.r4.core.CodeableConcept.getDefaultInstance() : fivePrime_;
        } else {
          return fivePrimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The nucleotide present at the 5’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the first position
       * in the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
       */
      public Builder setFivePrime(com.google.fhir.r4.core.CodeableConcept value) {
        if (fivePrimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fivePrime_ = value;
          onChanged();
        } else {
          fivePrimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The nucleotide present at the 5’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the first position
       * in the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
       */
      public Builder setFivePrime(
          com.google.fhir.r4.core.CodeableConcept.Builder builderForValue) {
        if (fivePrimeBuilder_ == null) {
          fivePrime_ = builderForValue.build();
          onChanged();
        } else {
          fivePrimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The nucleotide present at the 5’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the first position
       * in the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
       */
      public Builder mergeFivePrime(com.google.fhir.r4.core.CodeableConcept value) {
        if (fivePrimeBuilder_ == null) {
          if (fivePrime_ != null) {
            fivePrime_ =
              com.google.fhir.r4.core.CodeableConcept.newBuilder(fivePrime_).mergeFrom(value).buildPartial();
          } else {
            fivePrime_ = value;
          }
          onChanged();
        } else {
          fivePrimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The nucleotide present at the 5’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the first position
       * in the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
       */
      public Builder clearFivePrime() {
        if (fivePrimeBuilder_ == null) {
          fivePrime_ = null;
          onChanged();
        } else {
          fivePrime_ = null;
          fivePrimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The nucleotide present at the 5’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the first position
       * in the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
       */
      public com.google.fhir.r4.core.CodeableConcept.Builder getFivePrimeBuilder() {
        
        onChanged();
        return getFivePrimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The nucleotide present at the 5’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the first position
       * in the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
       */
      public com.google.fhir.r4.core.CodeableConceptOrBuilder getFivePrimeOrBuilder() {
        if (fivePrimeBuilder_ != null) {
          return fivePrimeBuilder_.getMessageOrBuilder();
        } else {
          return fivePrime_ == null ?
              com.google.fhir.r4.core.CodeableConcept.getDefaultInstance() : fivePrime_;
        }
      }
      /**
       * <pre>
       * The nucleotide present at the 5’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the first position
       * in the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept five_prime = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.r4.core.CodeableConcept, com.google.fhir.r4.core.CodeableConcept.Builder, com.google.fhir.r4.core.CodeableConceptOrBuilder> 
          getFivePrimeFieldBuilder() {
        if (fivePrimeBuilder_ == null) {
          fivePrimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.fhir.r4.core.CodeableConcept, com.google.fhir.r4.core.CodeableConcept.Builder, com.google.fhir.r4.core.CodeableConceptOrBuilder>(
                  getFivePrime(),
                  getParentForChildren(),
                  isClean());
          fivePrime_ = null;
        }
        return fivePrimeBuilder_;
      }

      private com.google.fhir.r4.core.CodeableConcept threePrime_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.r4.core.CodeableConcept, com.google.fhir.r4.core.CodeableConcept.Builder, com.google.fhir.r4.core.CodeableConceptOrBuilder> threePrimeBuilder_;
      /**
       * <pre>
       * The nucleotide present at the 3’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the last position in
       * the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
       * @return Whether the threePrime field is set.
       */
      public boolean hasThreePrime() {
        return threePrimeBuilder_ != null || threePrime_ != null;
      }
      /**
       * <pre>
       * The nucleotide present at the 3’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the last position in
       * the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
       * @return The threePrime.
       */
      public com.google.fhir.r4.core.CodeableConcept getThreePrime() {
        if (threePrimeBuilder_ == null) {
          return threePrime_ == null ? com.google.fhir.r4.core.CodeableConcept.getDefaultInstance() : threePrime_;
        } else {
          return threePrimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The nucleotide present at the 3’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the last position in
       * the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
       */
      public Builder setThreePrime(com.google.fhir.r4.core.CodeableConcept value) {
        if (threePrimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          threePrime_ = value;
          onChanged();
        } else {
          threePrimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The nucleotide present at the 3’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the last position in
       * the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
       */
      public Builder setThreePrime(
          com.google.fhir.r4.core.CodeableConcept.Builder builderForValue) {
        if (threePrimeBuilder_ == null) {
          threePrime_ = builderForValue.build();
          onChanged();
        } else {
          threePrimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The nucleotide present at the 3’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the last position in
       * the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
       */
      public Builder mergeThreePrime(com.google.fhir.r4.core.CodeableConcept value) {
        if (threePrimeBuilder_ == null) {
          if (threePrime_ != null) {
            threePrime_ =
              com.google.fhir.r4.core.CodeableConcept.newBuilder(threePrime_).mergeFrom(value).buildPartial();
          } else {
            threePrime_ = value;
          }
          onChanged();
        } else {
          threePrimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The nucleotide present at the 3’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the last position in
       * the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
       */
      public Builder clearThreePrime() {
        if (threePrimeBuilder_ == null) {
          threePrime_ = null;
          onChanged();
        } else {
          threePrime_ = null;
          threePrimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The nucleotide present at the 3’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the last position in
       * the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
       */
      public com.google.fhir.r4.core.CodeableConcept.Builder getThreePrimeBuilder() {
        
        onChanged();
        return getThreePrimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The nucleotide present at the 3’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the last position in
       * the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
       */
      public com.google.fhir.r4.core.CodeableConceptOrBuilder getThreePrimeOrBuilder() {
        if (threePrimeBuilder_ != null) {
          return threePrimeBuilder_.getMessageOrBuilder();
        } else {
          return threePrime_ == null ?
              com.google.fhir.r4.core.CodeableConcept.getDefaultInstance() : threePrime_;
        }
      }
      /**
       * <pre>
       * The nucleotide present at the 3’ terminal shall be specified based on a
       * controlled vocabulary. Since the sequence is represented from the 5' to
       * the 3' end, the 5’ prime nucleotide is the letter at the last position in
       * the sequence. A separate representation would be redundant
       * </pre>
       *
       * <code>.google.fhir.r4.core.CodeableConcept three_prime = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.r4.core.CodeableConcept, com.google.fhir.r4.core.CodeableConcept.Builder, com.google.fhir.r4.core.CodeableConceptOrBuilder> 
          getThreePrimeFieldBuilder() {
        if (threePrimeBuilder_ == null) {
          threePrimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.fhir.r4.core.CodeableConcept, com.google.fhir.r4.core.CodeableConcept.Builder, com.google.fhir.r4.core.CodeableConceptOrBuilder>(
                  getThreePrime(),
                  getParentForChildren(),
                  isClean());
          threePrime_ = null;
        }
        return threePrimeBuilder_;
      }

      private java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage> linkage_ =
        java.util.Collections.emptyList();
      private void ensureLinkageIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          linkage_ = new java.util.ArrayList<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage>(linkage_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.Builder, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.LinkageOrBuilder> linkageBuilder_;

      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage> getLinkageList() {
        if (linkageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(linkage_);
        } else {
          return linkageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public int getLinkageCount() {
        if (linkageBuilder_ == null) {
          return linkage_.size();
        } else {
          return linkageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage getLinkage(int index) {
        if (linkageBuilder_ == null) {
          return linkage_.get(index);
        } else {
          return linkageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public Builder setLinkage(
          int index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage value) {
        if (linkageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinkageIsMutable();
          linkage_.set(index, value);
          onChanged();
        } else {
          linkageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public Builder setLinkage(
          int index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.Builder builderForValue) {
        if (linkageBuilder_ == null) {
          ensureLinkageIsMutable();
          linkage_.set(index, builderForValue.build());
          onChanged();
        } else {
          linkageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public Builder addLinkage(com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage value) {
        if (linkageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinkageIsMutable();
          linkage_.add(value);
          onChanged();
        } else {
          linkageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public Builder addLinkage(
          int index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage value) {
        if (linkageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLinkageIsMutable();
          linkage_.add(index, value);
          onChanged();
        } else {
          linkageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public Builder addLinkage(
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.Builder builderForValue) {
        if (linkageBuilder_ == null) {
          ensureLinkageIsMutable();
          linkage_.add(builderForValue.build());
          onChanged();
        } else {
          linkageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public Builder addLinkage(
          int index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.Builder builderForValue) {
        if (linkageBuilder_ == null) {
          ensureLinkageIsMutable();
          linkage_.add(index, builderForValue.build());
          onChanged();
        } else {
          linkageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public Builder addAllLinkage(
          java.lang.Iterable<? extends com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage> values) {
        if (linkageBuilder_ == null) {
          ensureLinkageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, linkage_);
          onChanged();
        } else {
          linkageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public Builder clearLinkage() {
        if (linkageBuilder_ == null) {
          linkage_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          linkageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public Builder removeLinkage(int index) {
        if (linkageBuilder_ == null) {
          ensureLinkageIsMutable();
          linkage_.remove(index);
          onChanged();
        } else {
          linkageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.Builder getLinkageBuilder(
          int index) {
        return getLinkageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.LinkageOrBuilder getLinkageOrBuilder(
          int index) {
        if (linkageBuilder_ == null) {
          return linkage_.get(index);  } else {
          return linkageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public java.util.List<? extends com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.LinkageOrBuilder> 
           getLinkageOrBuilderList() {
        if (linkageBuilder_ != null) {
          return linkageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(linkage_);
        }
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.Builder addLinkageBuilder() {
        return getLinkageFieldBuilder().addBuilder(
            com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.getDefaultInstance());
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.Builder addLinkageBuilder(
          int index) {
        return getLinkageFieldBuilder().addBuilder(
            index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.getDefaultInstance());
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage linkage = 10;</code>
       */
      public java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.Builder> 
           getLinkageBuilderList() {
        return getLinkageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.Builder, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.LinkageOrBuilder> 
          getLinkageFieldBuilder() {
        if (linkageBuilder_ == null) {
          linkageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Linkage.Builder, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.LinkageOrBuilder>(
                  linkage_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          linkage_ = null;
        }
        return linkageBuilder_;
      }

      private java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar> sugar_ =
        java.util.Collections.emptyList();
      private void ensureSugarIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          sugar_ = new java.util.ArrayList<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar>(sugar_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.Builder, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.SugarOrBuilder> sugarBuilder_;

      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar> getSugarList() {
        if (sugarBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sugar_);
        } else {
          return sugarBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public int getSugarCount() {
        if (sugarBuilder_ == null) {
          return sugar_.size();
        } else {
          return sugarBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar getSugar(int index) {
        if (sugarBuilder_ == null) {
          return sugar_.get(index);
        } else {
          return sugarBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public Builder setSugar(
          int index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar value) {
        if (sugarBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSugarIsMutable();
          sugar_.set(index, value);
          onChanged();
        } else {
          sugarBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public Builder setSugar(
          int index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.Builder builderForValue) {
        if (sugarBuilder_ == null) {
          ensureSugarIsMutable();
          sugar_.set(index, builderForValue.build());
          onChanged();
        } else {
          sugarBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public Builder addSugar(com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar value) {
        if (sugarBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSugarIsMutable();
          sugar_.add(value);
          onChanged();
        } else {
          sugarBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public Builder addSugar(
          int index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar value) {
        if (sugarBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSugarIsMutable();
          sugar_.add(index, value);
          onChanged();
        } else {
          sugarBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public Builder addSugar(
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.Builder builderForValue) {
        if (sugarBuilder_ == null) {
          ensureSugarIsMutable();
          sugar_.add(builderForValue.build());
          onChanged();
        } else {
          sugarBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public Builder addSugar(
          int index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.Builder builderForValue) {
        if (sugarBuilder_ == null) {
          ensureSugarIsMutable();
          sugar_.add(index, builderForValue.build());
          onChanged();
        } else {
          sugarBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public Builder addAllSugar(
          java.lang.Iterable<? extends com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar> values) {
        if (sugarBuilder_ == null) {
          ensureSugarIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sugar_);
          onChanged();
        } else {
          sugarBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public Builder clearSugar() {
        if (sugarBuilder_ == null) {
          sugar_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          sugarBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public Builder removeSugar(int index) {
        if (sugarBuilder_ == null) {
          ensureSugarIsMutable();
          sugar_.remove(index);
          onChanged();
        } else {
          sugarBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.Builder getSugarBuilder(
          int index) {
        return getSugarFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.SugarOrBuilder getSugarOrBuilder(
          int index) {
        if (sugarBuilder_ == null) {
          return sugar_.get(index);  } else {
          return sugarBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public java.util.List<? extends com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.SugarOrBuilder> 
           getSugarOrBuilderList() {
        if (sugarBuilder_ != null) {
          return sugarBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sugar_);
        }
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.Builder addSugarBuilder() {
        return getSugarFieldBuilder().addBuilder(
            com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.getDefaultInstance());
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.Builder addSugarBuilder(
          int index) {
        return getSugarFieldBuilder().addBuilder(
            index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.getDefaultInstance());
      }
      /**
       * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar sugar = 11;</code>
       */
      public java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.Builder> 
           getSugarBuilderList() {
        return getSugarFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.Builder, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.SugarOrBuilder> 
          getSugarFieldBuilder() {
        if (sugarBuilder_ == null) {
          sugarBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Sugar.Builder, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.SugarOrBuilder>(
                  sugar_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          sugar_ = null;
        }
        return sugarBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.fhir.r4.core.SubstanceNucleicAcid.Subunit)
    }

    // @@protoc_insertion_point(class_scope:google.fhir.r4.core.SubstanceNucleicAcid.Subunit)
    private static final com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit();
    }

    public static com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Subunit>
        PARSER = new com.google.protobuf.AbstractParser<Subunit>() {
      @java.lang.Override
      public Subunit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Subunit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Subunit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Subunit> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int ID_FIELD_NUMBER = 1;
  private com.google.fhir.r4.core.Id id_;
  /**
   * <pre>
   * Logical id of this artifact
   * </pre>
   *
   * <code>.google.fhir.r4.core.Id id = 1;</code>
   * @return Whether the id field is set.
   */
  @java.lang.Override
  public boolean hasId() {
    return id_ != null;
  }
  /**
   * <pre>
   * Logical id of this artifact
   * </pre>
   *
   * <code>.google.fhir.r4.core.Id id = 1;</code>
   * @return The id.
   */
  @java.lang.Override
  public com.google.fhir.r4.core.Id getId() {
    return id_ == null ? com.google.fhir.r4.core.Id.getDefaultInstance() : id_;
  }
  /**
   * <pre>
   * Logical id of this artifact
   * </pre>
   *
   * <code>.google.fhir.r4.core.Id id = 1;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.IdOrBuilder getIdOrBuilder() {
    return getId();
  }

  public static final int META_FIELD_NUMBER = 2;
  private com.google.fhir.r4.core.Meta meta_;
  /**
   * <pre>
   * Metadata about the resource
   * </pre>
   *
   * <code>.google.fhir.r4.core.Meta meta = 2;</code>
   * @return Whether the meta field is set.
   */
  @java.lang.Override
  public boolean hasMeta() {
    return meta_ != null;
  }
  /**
   * <pre>
   * Metadata about the resource
   * </pre>
   *
   * <code>.google.fhir.r4.core.Meta meta = 2;</code>
   * @return The meta.
   */
  @java.lang.Override
  public com.google.fhir.r4.core.Meta getMeta() {
    return meta_ == null ? com.google.fhir.r4.core.Meta.getDefaultInstance() : meta_;
  }
  /**
   * <pre>
   * Metadata about the resource
   * </pre>
   *
   * <code>.google.fhir.r4.core.Meta meta = 2;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.MetaOrBuilder getMetaOrBuilder() {
    return getMeta();
  }

  public static final int IMPLICIT_RULES_FIELD_NUMBER = 3;
  private com.google.fhir.r4.core.Uri implicitRules_;
  /**
   * <pre>
   * A set of rules under which this content was created
   * </pre>
   *
   * <code>.google.fhir.r4.core.Uri implicit_rules = 3;</code>
   * @return Whether the implicitRules field is set.
   */
  @java.lang.Override
  public boolean hasImplicitRules() {
    return implicitRules_ != null;
  }
  /**
   * <pre>
   * A set of rules under which this content was created
   * </pre>
   *
   * <code>.google.fhir.r4.core.Uri implicit_rules = 3;</code>
   * @return The implicitRules.
   */
  @java.lang.Override
  public com.google.fhir.r4.core.Uri getImplicitRules() {
    return implicitRules_ == null ? com.google.fhir.r4.core.Uri.getDefaultInstance() : implicitRules_;
  }
  /**
   * <pre>
   * A set of rules under which this content was created
   * </pre>
   *
   * <code>.google.fhir.r4.core.Uri implicit_rules = 3;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.UriOrBuilder getImplicitRulesOrBuilder() {
    return getImplicitRules();
  }

  public static final int LANGUAGE_FIELD_NUMBER = 4;
  private com.google.fhir.r4.core.Code language_;
  /**
   * <pre>
   * Language of the resource content
   * </pre>
   *
   * <code>.google.fhir.r4.core.Code language = 4;</code>
   * @return Whether the language field is set.
   */
  @java.lang.Override
  public boolean hasLanguage() {
    return language_ != null;
  }
  /**
   * <pre>
   * Language of the resource content
   * </pre>
   *
   * <code>.google.fhir.r4.core.Code language = 4;</code>
   * @return The language.
   */
  @java.lang.Override
  public com.google.fhir.r4.core.Code getLanguage() {
    return language_ == null ? com.google.fhir.r4.core.Code.getDefaultInstance() : language_;
  }
  /**
   * <pre>
   * Language of the resource content
   * </pre>
   *
   * <code>.google.fhir.r4.core.Code language = 4;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.CodeOrBuilder getLanguageOrBuilder() {
    return getLanguage();
  }

  public static final int TEXT_FIELD_NUMBER = 5;
  private com.google.fhir.r4.core.Narrative text_;
  /**
   * <pre>
   * Text summary of the resource, for human interpretation
   * </pre>
   *
   * <code>.google.fhir.r4.core.Narrative text = 5;</code>
   * @return Whether the text field is set.
   */
  @java.lang.Override
  public boolean hasText() {
    return text_ != null;
  }
  /**
   * <pre>
   * Text summary of the resource, for human interpretation
   * </pre>
   *
   * <code>.google.fhir.r4.core.Narrative text = 5;</code>
   * @return The text.
   */
  @java.lang.Override
  public com.google.fhir.r4.core.Narrative getText() {
    return text_ == null ? com.google.fhir.r4.core.Narrative.getDefaultInstance() : text_;
  }
  /**
   * <pre>
   * Text summary of the resource, for human interpretation
   * </pre>
   *
   * <code>.google.fhir.r4.core.Narrative text = 5;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.NarrativeOrBuilder getTextOrBuilder() {
    return getText();
  }

  public static final int CONTAINED_FIELD_NUMBER = 6;
  private java.util.List<com.google.protobuf.Any> contained_;
  /**
   * <pre>
   * Contained, inline Resources
   * </pre>
   *
   * <code>repeated .google.protobuf.Any contained = 6;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.protobuf.Any> getContainedList() {
    return contained_;
  }
  /**
   * <pre>
   * Contained, inline Resources
   * </pre>
   *
   * <code>repeated .google.protobuf.Any contained = 6;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
      getContainedOrBuilderList() {
    return contained_;
  }
  /**
   * <pre>
   * Contained, inline Resources
   * </pre>
   *
   * <code>repeated .google.protobuf.Any contained = 6;</code>
   */
  @java.lang.Override
  public int getContainedCount() {
    return contained_.size();
  }
  /**
   * <pre>
   * Contained, inline Resources
   * </pre>
   *
   * <code>repeated .google.protobuf.Any contained = 6;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Any getContained(int index) {
    return contained_.get(index);
  }
  /**
   * <pre>
   * Contained, inline Resources
   * </pre>
   *
   * <code>repeated .google.protobuf.Any contained = 6;</code>
   */
  @java.lang.Override
  public com.google.protobuf.AnyOrBuilder getContainedOrBuilder(
      int index) {
    return contained_.get(index);
  }

  public static final int EXTENSION_FIELD_NUMBER = 8;
  private java.util.List<com.google.fhir.r4.core.Extension> extension_;
  /**
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.fhir.r4.core.Extension> getExtensionList() {
    return extension_;
  }
  /**
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
      getExtensionOrBuilderList() {
    return extension_;
  }
  /**
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
   */
  @java.lang.Override
  public int getExtensionCount() {
    return extension_.size();
  }
  /**
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.Extension getExtension(int index) {
    return extension_.get(index);
  }
  /**
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.ExtensionOrBuilder getExtensionOrBuilder(
      int index) {
    return extension_.get(index);
  }

  public static final int MODIFIER_EXTENSION_FIELD_NUMBER = 9;
  private java.util.List<com.google.fhir.r4.core.Extension> modifierExtension_;
  /**
   * <pre>
   * Extensions that cannot be ignored
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.fhir.r4.core.Extension> getModifierExtensionList() {
    return modifierExtension_;
  }
  /**
   * <pre>
   * Extensions that cannot be ignored
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
      getModifierExtensionOrBuilderList() {
    return modifierExtension_;
  }
  /**
   * <pre>
   * Extensions that cannot be ignored
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
   */
  @java.lang.Override
  public int getModifierExtensionCount() {
    return modifierExtension_.size();
  }
  /**
   * <pre>
   * Extensions that cannot be ignored
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.Extension getModifierExtension(int index) {
    return modifierExtension_.get(index);
  }
  /**
   * <pre>
   * Extensions that cannot be ignored
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.ExtensionOrBuilder getModifierExtensionOrBuilder(
      int index) {
    return modifierExtension_.get(index);
  }

  public static final int SEQUENCE_TYPE_FIELD_NUMBER = 10;
  private com.google.fhir.r4.core.CodeableConcept sequenceType_;
  /**
   * <pre>
   * The type of the sequence shall be specified based on a controlled
   * vocabulary
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept sequence_type = 10;</code>
   * @return Whether the sequenceType field is set.
   */
  @java.lang.Override
  public boolean hasSequenceType() {
    return sequenceType_ != null;
  }
  /**
   * <pre>
   * The type of the sequence shall be specified based on a controlled
   * vocabulary
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept sequence_type = 10;</code>
   * @return The sequenceType.
   */
  @java.lang.Override
  public com.google.fhir.r4.core.CodeableConcept getSequenceType() {
    return sequenceType_ == null ? com.google.fhir.r4.core.CodeableConcept.getDefaultInstance() : sequenceType_;
  }
  /**
   * <pre>
   * The type of the sequence shall be specified based on a controlled
   * vocabulary
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept sequence_type = 10;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.CodeableConceptOrBuilder getSequenceTypeOrBuilder() {
    return getSequenceType();
  }

  public static final int NUMBER_OF_SUBUNITS_FIELD_NUMBER = 11;
  private com.google.fhir.r4.core.Integer numberOfSubunits_;
  /**
   * <pre>
   * The number of linear sequences of nucleotides linked through phosphodiester
   * bonds shall be described. Subunits would be strands of nucleic acids that
   * are tightly associated typically through Watson-Crick base pairing. NOTE:
   * If not specified in the reference source, the assumption is that there is 1
   * subunit
   * </pre>
   *
   * <code>.google.fhir.r4.core.Integer number_of_subunits = 11;</code>
   * @return Whether the numberOfSubunits field is set.
   */
  @java.lang.Override
  public boolean hasNumberOfSubunits() {
    return numberOfSubunits_ != null;
  }
  /**
   * <pre>
   * The number of linear sequences of nucleotides linked through phosphodiester
   * bonds shall be described. Subunits would be strands of nucleic acids that
   * are tightly associated typically through Watson-Crick base pairing. NOTE:
   * If not specified in the reference source, the assumption is that there is 1
   * subunit
   * </pre>
   *
   * <code>.google.fhir.r4.core.Integer number_of_subunits = 11;</code>
   * @return The numberOfSubunits.
   */
  @java.lang.Override
  public com.google.fhir.r4.core.Integer getNumberOfSubunits() {
    return numberOfSubunits_ == null ? com.google.fhir.r4.core.Integer.getDefaultInstance() : numberOfSubunits_;
  }
  /**
   * <pre>
   * The number of linear sequences of nucleotides linked through phosphodiester
   * bonds shall be described. Subunits would be strands of nucleic acids that
   * are tightly associated typically through Watson-Crick base pairing. NOTE:
   * If not specified in the reference source, the assumption is that there is 1
   * subunit
   * </pre>
   *
   * <code>.google.fhir.r4.core.Integer number_of_subunits = 11;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.IntegerOrBuilder getNumberOfSubunitsOrBuilder() {
    return getNumberOfSubunits();
  }

  public static final int AREA_OF_HYBRIDISATION_FIELD_NUMBER = 12;
  private com.google.fhir.r4.core.String areaOfHybridisation_;
  /**
   * <pre>
   * The area of hybridisation shall be described if applicable for double
   * stranded RNA or DNA. The number associated with the subunit followed by the
   * number associated to the residue shall be specified in increasing order.
   * The underscore “” shall be used as separator as follows: “Subunitnumber
   * Residue”
   * </pre>
   *
   * <code>.google.fhir.r4.core.String area_of_hybridisation = 12;</code>
   * @return Whether the areaOfHybridisation field is set.
   */
  @java.lang.Override
  public boolean hasAreaOfHybridisation() {
    return areaOfHybridisation_ != null;
  }
  /**
   * <pre>
   * The area of hybridisation shall be described if applicable for double
   * stranded RNA or DNA. The number associated with the subunit followed by the
   * number associated to the residue shall be specified in increasing order.
   * The underscore “” shall be used as separator as follows: “Subunitnumber
   * Residue”
   * </pre>
   *
   * <code>.google.fhir.r4.core.String area_of_hybridisation = 12;</code>
   * @return The areaOfHybridisation.
   */
  @java.lang.Override
  public com.google.fhir.r4.core.String getAreaOfHybridisation() {
    return areaOfHybridisation_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : areaOfHybridisation_;
  }
  /**
   * <pre>
   * The area of hybridisation shall be described if applicable for double
   * stranded RNA or DNA. The number associated with the subunit followed by the
   * number associated to the residue shall be specified in increasing order.
   * The underscore “” shall be used as separator as follows: “Subunitnumber
   * Residue”
   * </pre>
   *
   * <code>.google.fhir.r4.core.String area_of_hybridisation = 12;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.StringOrBuilder getAreaOfHybridisationOrBuilder() {
    return getAreaOfHybridisation();
  }

  public static final int OLIGO_NUCLEOTIDE_TYPE_FIELD_NUMBER = 13;
  private com.google.fhir.r4.core.CodeableConcept oligoNucleotideType_;
  /**
   * <pre>
   * (TBC)
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept oligo_nucleotide_type = 13;</code>
   * @return Whether the oligoNucleotideType field is set.
   */
  @java.lang.Override
  public boolean hasOligoNucleotideType() {
    return oligoNucleotideType_ != null;
  }
  /**
   * <pre>
   * (TBC)
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept oligo_nucleotide_type = 13;</code>
   * @return The oligoNucleotideType.
   */
  @java.lang.Override
  public com.google.fhir.r4.core.CodeableConcept getOligoNucleotideType() {
    return oligoNucleotideType_ == null ? com.google.fhir.r4.core.CodeableConcept.getDefaultInstance() : oligoNucleotideType_;
  }
  /**
   * <pre>
   * (TBC)
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept oligo_nucleotide_type = 13;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.CodeableConceptOrBuilder getOligoNucleotideTypeOrBuilder() {
    return getOligoNucleotideType();
  }

  public static final int SUBUNIT_FIELD_NUMBER = 14;
  private java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit> subunit_;
  /**
   * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit> getSubunitList() {
    return subunit_;
  }
  /**
   * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.fhir.r4.core.SubstanceNucleicAcid.SubunitOrBuilder> 
      getSubunitOrBuilderList() {
    return subunit_;
  }
  /**
   * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
   */
  @java.lang.Override
  public int getSubunitCount() {
    return subunit_.size();
  }
  /**
   * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit getSubunit(int index) {
    return subunit_.get(index);
  }
  /**
   * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
   */
  @java.lang.Override
  public com.google.fhir.r4.core.SubstanceNucleicAcid.SubunitOrBuilder getSubunitOrBuilder(
      int index) {
    return subunit_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (id_ != null) {
      output.writeMessage(1, getId());
    }
    if (meta_ != null) {
      output.writeMessage(2, getMeta());
    }
    if (implicitRules_ != null) {
      output.writeMessage(3, getImplicitRules());
    }
    if (language_ != null) {
      output.writeMessage(4, getLanguage());
    }
    if (text_ != null) {
      output.writeMessage(5, getText());
    }
    for (int i = 0; i < contained_.size(); i++) {
      output.writeMessage(6, contained_.get(i));
    }
    for (int i = 0; i < extension_.size(); i++) {
      output.writeMessage(8, extension_.get(i));
    }
    for (int i = 0; i < modifierExtension_.size(); i++) {
      output.writeMessage(9, modifierExtension_.get(i));
    }
    if (sequenceType_ != null) {
      output.writeMessage(10, getSequenceType());
    }
    if (numberOfSubunits_ != null) {
      output.writeMessage(11, getNumberOfSubunits());
    }
    if (areaOfHybridisation_ != null) {
      output.writeMessage(12, getAreaOfHybridisation());
    }
    if (oligoNucleotideType_ != null) {
      output.writeMessage(13, getOligoNucleotideType());
    }
    for (int i = 0; i < subunit_.size(); i++) {
      output.writeMessage(14, subunit_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (id_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getId());
    }
    if (meta_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getMeta());
    }
    if (implicitRules_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getImplicitRules());
    }
    if (language_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getLanguage());
    }
    if (text_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getText());
    }
    for (int i = 0; i < contained_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, contained_.get(i));
    }
    for (int i = 0; i < extension_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, extension_.get(i));
    }
    for (int i = 0; i < modifierExtension_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, modifierExtension_.get(i));
    }
    if (sequenceType_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getSequenceType());
    }
    if (numberOfSubunits_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getNumberOfSubunits());
    }
    if (areaOfHybridisation_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getAreaOfHybridisation());
    }
    if (oligoNucleotideType_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getOligoNucleotideType());
    }
    for (int i = 0; i < subunit_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, subunit_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.fhir.r4.core.SubstanceNucleicAcid)) {
      return super.equals(obj);
    }
    com.google.fhir.r4.core.SubstanceNucleicAcid other = (com.google.fhir.r4.core.SubstanceNucleicAcid) obj;

    if (hasId() != other.hasId()) return false;
    if (hasId()) {
      if (!getId()
          .equals(other.getId())) return false;
    }
    if (hasMeta() != other.hasMeta()) return false;
    if (hasMeta()) {
      if (!getMeta()
          .equals(other.getMeta())) return false;
    }
    if (hasImplicitRules() != other.hasImplicitRules()) return false;
    if (hasImplicitRules()) {
      if (!getImplicitRules()
          .equals(other.getImplicitRules())) return false;
    }
    if (hasLanguage() != other.hasLanguage()) return false;
    if (hasLanguage()) {
      if (!getLanguage()
          .equals(other.getLanguage())) return false;
    }
    if (hasText() != other.hasText()) return false;
    if (hasText()) {
      if (!getText()
          .equals(other.getText())) return false;
    }
    if (!getContainedList()
        .equals(other.getContainedList())) return false;
    if (!getExtensionList()
        .equals(other.getExtensionList())) return false;
    if (!getModifierExtensionList()
        .equals(other.getModifierExtensionList())) return false;
    if (hasSequenceType() != other.hasSequenceType()) return false;
    if (hasSequenceType()) {
      if (!getSequenceType()
          .equals(other.getSequenceType())) return false;
    }
    if (hasNumberOfSubunits() != other.hasNumberOfSubunits()) return false;
    if (hasNumberOfSubunits()) {
      if (!getNumberOfSubunits()
          .equals(other.getNumberOfSubunits())) return false;
    }
    if (hasAreaOfHybridisation() != other.hasAreaOfHybridisation()) return false;
    if (hasAreaOfHybridisation()) {
      if (!getAreaOfHybridisation()
          .equals(other.getAreaOfHybridisation())) return false;
    }
    if (hasOligoNucleotideType() != other.hasOligoNucleotideType()) return false;
    if (hasOligoNucleotideType()) {
      if (!getOligoNucleotideType()
          .equals(other.getOligoNucleotideType())) return false;
    }
    if (!getSubunitList()
        .equals(other.getSubunitList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasId()) {
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
    }
    if (hasMeta()) {
      hash = (37 * hash) + META_FIELD_NUMBER;
      hash = (53 * hash) + getMeta().hashCode();
    }
    if (hasImplicitRules()) {
      hash = (37 * hash) + IMPLICIT_RULES_FIELD_NUMBER;
      hash = (53 * hash) + getImplicitRules().hashCode();
    }
    if (hasLanguage()) {
      hash = (37 * hash) + LANGUAGE_FIELD_NUMBER;
      hash = (53 * hash) + getLanguage().hashCode();
    }
    if (hasText()) {
      hash = (37 * hash) + TEXT_FIELD_NUMBER;
      hash = (53 * hash) + getText().hashCode();
    }
    if (getContainedCount() > 0) {
      hash = (37 * hash) + CONTAINED_FIELD_NUMBER;
      hash = (53 * hash) + getContainedList().hashCode();
    }
    if (getExtensionCount() > 0) {
      hash = (37 * hash) + EXTENSION_FIELD_NUMBER;
      hash = (53 * hash) + getExtensionList().hashCode();
    }
    if (getModifierExtensionCount() > 0) {
      hash = (37 * hash) + MODIFIER_EXTENSION_FIELD_NUMBER;
      hash = (53 * hash) + getModifierExtensionList().hashCode();
    }
    if (hasSequenceType()) {
      hash = (37 * hash) + SEQUENCE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getSequenceType().hashCode();
    }
    if (hasNumberOfSubunits()) {
      hash = (37 * hash) + NUMBER_OF_SUBUNITS_FIELD_NUMBER;
      hash = (53 * hash) + getNumberOfSubunits().hashCode();
    }
    if (hasAreaOfHybridisation()) {
      hash = (37 * hash) + AREA_OF_HYBRIDISATION_FIELD_NUMBER;
      hash = (53 * hash) + getAreaOfHybridisation().hashCode();
    }
    if (hasOligoNucleotideType()) {
      hash = (37 * hash) + OLIGO_NUCLEOTIDE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getOligoNucleotideType().hashCode();
    }
    if (getSubunitCount() > 0) {
      hash = (37 * hash) + SUBUNIT_FIELD_NUMBER;
      hash = (53 * hash) + getSubunitList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.fhir.r4.core.SubstanceNucleicAcid parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.fhir.r4.core.SubstanceNucleicAcid parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.fhir.r4.core.SubstanceNucleicAcid parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.fhir.r4.core.SubstanceNucleicAcid parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.fhir.r4.core.SubstanceNucleicAcid parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.fhir.r4.core.SubstanceNucleicAcid parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.fhir.r4.core.SubstanceNucleicAcid parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.fhir.r4.core.SubstanceNucleicAcid parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.fhir.r4.core.SubstanceNucleicAcid parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.fhir.r4.core.SubstanceNucleicAcid parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.fhir.r4.core.SubstanceNucleicAcid parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.fhir.r4.core.SubstanceNucleicAcid parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.fhir.r4.core.SubstanceNucleicAcid prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Auto-generated from StructureDefinition for SubstanceNucleicAcid, last
   * updated 2019-11-01T09:29:23.356+11:00. Nucleic acids are defined by three
   * distinct elements: the base, sugar and linkage. Individual substance/moiety
   * IDs will be created for each of these elements. The nucleotide sequence will
   * be always entered in the 5’-3’ direction. See
   * http://hl7.org/fhir/StructureDefinition/SubstanceNucleicAcid
   * </pre>
   *
   * Protobuf type {@code google.fhir.r4.core.SubstanceNucleicAcid}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.fhir.r4.core.SubstanceNucleicAcid)
      com.google.fhir.r4.core.SubstanceNucleicAcidOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.fhir.r4.core.SubstanceNucleicAcid.class, com.google.fhir.r4.core.SubstanceNucleicAcid.Builder.class);
    }

    // Construct using com.google.fhir.r4.core.SubstanceNucleicAcid.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getContainedFieldBuilder();
        getExtensionFieldBuilder();
        getModifierExtensionFieldBuilder();
        getSubunitFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (idBuilder_ == null) {
        id_ = null;
      } else {
        id_ = null;
        idBuilder_ = null;
      }
      if (metaBuilder_ == null) {
        meta_ = null;
      } else {
        meta_ = null;
        metaBuilder_ = null;
      }
      if (implicitRulesBuilder_ == null) {
        implicitRules_ = null;
      } else {
        implicitRules_ = null;
        implicitRulesBuilder_ = null;
      }
      if (languageBuilder_ == null) {
        language_ = null;
      } else {
        language_ = null;
        languageBuilder_ = null;
      }
      if (textBuilder_ == null) {
        text_ = null;
      } else {
        text_ = null;
        textBuilder_ = null;
      }
      if (containedBuilder_ == null) {
        contained_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        containedBuilder_.clear();
      }
      if (extensionBuilder_ == null) {
        extension_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        extensionBuilder_.clear();
      }
      if (modifierExtensionBuilder_ == null) {
        modifierExtension_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        modifierExtensionBuilder_.clear();
      }
      if (sequenceTypeBuilder_ == null) {
        sequenceType_ = null;
      } else {
        sequenceType_ = null;
        sequenceTypeBuilder_ = null;
      }
      if (numberOfSubunitsBuilder_ == null) {
        numberOfSubunits_ = null;
      } else {
        numberOfSubunits_ = null;
        numberOfSubunitsBuilder_ = null;
      }
      if (areaOfHybridisationBuilder_ == null) {
        areaOfHybridisation_ = null;
      } else {
        areaOfHybridisation_ = null;
        areaOfHybridisationBuilder_ = null;
      }
      if (oligoNucleotideTypeBuilder_ == null) {
        oligoNucleotideType_ = null;
      } else {
        oligoNucleotideType_ = null;
        oligoNucleotideTypeBuilder_ = null;
      }
      if (subunitBuilder_ == null) {
        subunit_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        subunitBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.fhir.r4.core.SubstanceNucleicAcidOuterClass.internal_static_google_fhir_r4_core_SubstanceNucleicAcid_descriptor;
    }

    @java.lang.Override
    public com.google.fhir.r4.core.SubstanceNucleicAcid getDefaultInstanceForType() {
      return com.google.fhir.r4.core.SubstanceNucleicAcid.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.fhir.r4.core.SubstanceNucleicAcid build() {
      com.google.fhir.r4.core.SubstanceNucleicAcid result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.fhir.r4.core.SubstanceNucleicAcid buildPartial() {
      com.google.fhir.r4.core.SubstanceNucleicAcid result = new com.google.fhir.r4.core.SubstanceNucleicAcid(this);
      int from_bitField0_ = bitField0_;
      if (idBuilder_ == null) {
        result.id_ = id_;
      } else {
        result.id_ = idBuilder_.build();
      }
      if (metaBuilder_ == null) {
        result.meta_ = meta_;
      } else {
        result.meta_ = metaBuilder_.build();
      }
      if (implicitRulesBuilder_ == null) {
        result.implicitRules_ = implicitRules_;
      } else {
        result.implicitRules_ = implicitRulesBuilder_.build();
      }
      if (languageBuilder_ == null) {
        result.language_ = language_;
      } else {
        result.language_ = languageBuilder_.build();
      }
      if (textBuilder_ == null) {
        result.text_ = text_;
      } else {
        result.text_ = textBuilder_.build();
      }
      if (containedBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          contained_ = java.util.Collections.unmodifiableList(contained_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.contained_ = contained_;
      } else {
        result.contained_ = containedBuilder_.build();
      }
      if (extensionBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          extension_ = java.util.Collections.unmodifiableList(extension_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.extension_ = extension_;
      } else {
        result.extension_ = extensionBuilder_.build();
      }
      if (modifierExtensionBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          modifierExtension_ = java.util.Collections.unmodifiableList(modifierExtension_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.modifierExtension_ = modifierExtension_;
      } else {
        result.modifierExtension_ = modifierExtensionBuilder_.build();
      }
      if (sequenceTypeBuilder_ == null) {
        result.sequenceType_ = sequenceType_;
      } else {
        result.sequenceType_ = sequenceTypeBuilder_.build();
      }
      if (numberOfSubunitsBuilder_ == null) {
        result.numberOfSubunits_ = numberOfSubunits_;
      } else {
        result.numberOfSubunits_ = numberOfSubunitsBuilder_.build();
      }
      if (areaOfHybridisationBuilder_ == null) {
        result.areaOfHybridisation_ = areaOfHybridisation_;
      } else {
        result.areaOfHybridisation_ = areaOfHybridisationBuilder_.build();
      }
      if (oligoNucleotideTypeBuilder_ == null) {
        result.oligoNucleotideType_ = oligoNucleotideType_;
      } else {
        result.oligoNucleotideType_ = oligoNucleotideTypeBuilder_.build();
      }
      if (subunitBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          subunit_ = java.util.Collections.unmodifiableList(subunit_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.subunit_ = subunit_;
      } else {
        result.subunit_ = subunitBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.fhir.r4.core.SubstanceNucleicAcid) {
        return mergeFrom((com.google.fhir.r4.core.SubstanceNucleicAcid)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.fhir.r4.core.SubstanceNucleicAcid other) {
      if (other == com.google.fhir.r4.core.SubstanceNucleicAcid.getDefaultInstance()) return this;
      if (other.hasId()) {
        mergeId(other.getId());
      }
      if (other.hasMeta()) {
        mergeMeta(other.getMeta());
      }
      if (other.hasImplicitRules()) {
        mergeImplicitRules(other.getImplicitRules());
      }
      if (other.hasLanguage()) {
        mergeLanguage(other.getLanguage());
      }
      if (other.hasText()) {
        mergeText(other.getText());
      }
      if (containedBuilder_ == null) {
        if (!other.contained_.isEmpty()) {
          if (contained_.isEmpty()) {
            contained_ = other.contained_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureContainedIsMutable();
            contained_.addAll(other.contained_);
          }
          onChanged();
        }
      } else {
        if (!other.contained_.isEmpty()) {
          if (containedBuilder_.isEmpty()) {
            containedBuilder_.dispose();
            containedBuilder_ = null;
            contained_ = other.contained_;
            bitField0_ = (bitField0_ & ~0x00000001);
            containedBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getContainedFieldBuilder() : null;
          } else {
            containedBuilder_.addAllMessages(other.contained_);
          }
        }
      }
      if (extensionBuilder_ == null) {
        if (!other.extension_.isEmpty()) {
          if (extension_.isEmpty()) {
            extension_ = other.extension_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureExtensionIsMutable();
            extension_.addAll(other.extension_);
          }
          onChanged();
        }
      } else {
        if (!other.extension_.isEmpty()) {
          if (extensionBuilder_.isEmpty()) {
            extensionBuilder_.dispose();
            extensionBuilder_ = null;
            extension_ = other.extension_;
            bitField0_ = (bitField0_ & ~0x00000002);
            extensionBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getExtensionFieldBuilder() : null;
          } else {
            extensionBuilder_.addAllMessages(other.extension_);
          }
        }
      }
      if (modifierExtensionBuilder_ == null) {
        if (!other.modifierExtension_.isEmpty()) {
          if (modifierExtension_.isEmpty()) {
            modifierExtension_ = other.modifierExtension_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureModifierExtensionIsMutable();
            modifierExtension_.addAll(other.modifierExtension_);
          }
          onChanged();
        }
      } else {
        if (!other.modifierExtension_.isEmpty()) {
          if (modifierExtensionBuilder_.isEmpty()) {
            modifierExtensionBuilder_.dispose();
            modifierExtensionBuilder_ = null;
            modifierExtension_ = other.modifierExtension_;
            bitField0_ = (bitField0_ & ~0x00000004);
            modifierExtensionBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getModifierExtensionFieldBuilder() : null;
          } else {
            modifierExtensionBuilder_.addAllMessages(other.modifierExtension_);
          }
        }
      }
      if (other.hasSequenceType()) {
        mergeSequenceType(other.getSequenceType());
      }
      if (other.hasNumberOfSubunits()) {
        mergeNumberOfSubunits(other.getNumberOfSubunits());
      }
      if (other.hasAreaOfHybridisation()) {
        mergeAreaOfHybridisation(other.getAreaOfHybridisation());
      }
      if (other.hasOligoNucleotideType()) {
        mergeOligoNucleotideType(other.getOligoNucleotideType());
      }
      if (subunitBuilder_ == null) {
        if (!other.subunit_.isEmpty()) {
          if (subunit_.isEmpty()) {
            subunit_ = other.subunit_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSubunitIsMutable();
            subunit_.addAll(other.subunit_);
          }
          onChanged();
        }
      } else {
        if (!other.subunit_.isEmpty()) {
          if (subunitBuilder_.isEmpty()) {
            subunitBuilder_.dispose();
            subunitBuilder_ = null;
            subunit_ = other.subunit_;
            bitField0_ = (bitField0_ & ~0x00000008);
            subunitBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSubunitFieldBuilder() : null;
          } else {
            subunitBuilder_.addAllMessages(other.subunit_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.fhir.r4.core.SubstanceNucleicAcid parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.fhir.r4.core.SubstanceNucleicAcid) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.fhir.r4.core.Id id_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.Id, com.google.fhir.r4.core.Id.Builder, com.google.fhir.r4.core.IdOrBuilder> idBuilder_;
    /**
     * <pre>
     * Logical id of this artifact
     * </pre>
     *
     * <code>.google.fhir.r4.core.Id id = 1;</code>
     * @return Whether the id field is set.
     */
    public boolean hasId() {
      return idBuilder_ != null || id_ != null;
    }
    /**
     * <pre>
     * Logical id of this artifact
     * </pre>
     *
     * <code>.google.fhir.r4.core.Id id = 1;</code>
     * @return The id.
     */
    public com.google.fhir.r4.core.Id getId() {
      if (idBuilder_ == null) {
        return id_ == null ? com.google.fhir.r4.core.Id.getDefaultInstance() : id_;
      } else {
        return idBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Logical id of this artifact
     * </pre>
     *
     * <code>.google.fhir.r4.core.Id id = 1;</code>
     */
    public Builder setId(com.google.fhir.r4.core.Id value) {
      if (idBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        id_ = value;
        onChanged();
      } else {
        idBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Logical id of this artifact
     * </pre>
     *
     * <code>.google.fhir.r4.core.Id id = 1;</code>
     */
    public Builder setId(
        com.google.fhir.r4.core.Id.Builder builderForValue) {
      if (idBuilder_ == null) {
        id_ = builderForValue.build();
        onChanged();
      } else {
        idBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Logical id of this artifact
     * </pre>
     *
     * <code>.google.fhir.r4.core.Id id = 1;</code>
     */
    public Builder mergeId(com.google.fhir.r4.core.Id value) {
      if (idBuilder_ == null) {
        if (id_ != null) {
          id_ =
            com.google.fhir.r4.core.Id.newBuilder(id_).mergeFrom(value).buildPartial();
        } else {
          id_ = value;
        }
        onChanged();
      } else {
        idBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Logical id of this artifact
     * </pre>
     *
     * <code>.google.fhir.r4.core.Id id = 1;</code>
     */
    public Builder clearId() {
      if (idBuilder_ == null) {
        id_ = null;
        onChanged();
      } else {
        id_ = null;
        idBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Logical id of this artifact
     * </pre>
     *
     * <code>.google.fhir.r4.core.Id id = 1;</code>
     */
    public com.google.fhir.r4.core.Id.Builder getIdBuilder() {
      
      onChanged();
      return getIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Logical id of this artifact
     * </pre>
     *
     * <code>.google.fhir.r4.core.Id id = 1;</code>
     */
    public com.google.fhir.r4.core.IdOrBuilder getIdOrBuilder() {
      if (idBuilder_ != null) {
        return idBuilder_.getMessageOrBuilder();
      } else {
        return id_ == null ?
            com.google.fhir.r4.core.Id.getDefaultInstance() : id_;
      }
    }
    /**
     * <pre>
     * Logical id of this artifact
     * </pre>
     *
     * <code>.google.fhir.r4.core.Id id = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.Id, com.google.fhir.r4.core.Id.Builder, com.google.fhir.r4.core.IdOrBuilder> 
        getIdFieldBuilder() {
      if (idBuilder_ == null) {
        idBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.Id, com.google.fhir.r4.core.Id.Builder, com.google.fhir.r4.core.IdOrBuilder>(
                getId(),
                getParentForChildren(),
                isClean());
        id_ = null;
      }
      return idBuilder_;
    }

    private com.google.fhir.r4.core.Meta meta_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.Meta, com.google.fhir.r4.core.Meta.Builder, com.google.fhir.r4.core.MetaOrBuilder> metaBuilder_;
    /**
     * <pre>
     * Metadata about the resource
     * </pre>
     *
     * <code>.google.fhir.r4.core.Meta meta = 2;</code>
     * @return Whether the meta field is set.
     */
    public boolean hasMeta() {
      return metaBuilder_ != null || meta_ != null;
    }
    /**
     * <pre>
     * Metadata about the resource
     * </pre>
     *
     * <code>.google.fhir.r4.core.Meta meta = 2;</code>
     * @return The meta.
     */
    public com.google.fhir.r4.core.Meta getMeta() {
      if (metaBuilder_ == null) {
        return meta_ == null ? com.google.fhir.r4.core.Meta.getDefaultInstance() : meta_;
      } else {
        return metaBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Metadata about the resource
     * </pre>
     *
     * <code>.google.fhir.r4.core.Meta meta = 2;</code>
     */
    public Builder setMeta(com.google.fhir.r4.core.Meta value) {
      if (metaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        meta_ = value;
        onChanged();
      } else {
        metaBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Metadata about the resource
     * </pre>
     *
     * <code>.google.fhir.r4.core.Meta meta = 2;</code>
     */
    public Builder setMeta(
        com.google.fhir.r4.core.Meta.Builder builderForValue) {
      if (metaBuilder_ == null) {
        meta_ = builderForValue.build();
        onChanged();
      } else {
        metaBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Metadata about the resource
     * </pre>
     *
     * <code>.google.fhir.r4.core.Meta meta = 2;</code>
     */
    public Builder mergeMeta(com.google.fhir.r4.core.Meta value) {
      if (metaBuilder_ == null) {
        if (meta_ != null) {
          meta_ =
            com.google.fhir.r4.core.Meta.newBuilder(meta_).mergeFrom(value).buildPartial();
        } else {
          meta_ = value;
        }
        onChanged();
      } else {
        metaBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Metadata about the resource
     * </pre>
     *
     * <code>.google.fhir.r4.core.Meta meta = 2;</code>
     */
    public Builder clearMeta() {
      if (metaBuilder_ == null) {
        meta_ = null;
        onChanged();
      } else {
        meta_ = null;
        metaBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Metadata about the resource
     * </pre>
     *
     * <code>.google.fhir.r4.core.Meta meta = 2;</code>
     */
    public com.google.fhir.r4.core.Meta.Builder getMetaBuilder() {
      
      onChanged();
      return getMetaFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metadata about the resource
     * </pre>
     *
     * <code>.google.fhir.r4.core.Meta meta = 2;</code>
     */
    public com.google.fhir.r4.core.MetaOrBuilder getMetaOrBuilder() {
      if (metaBuilder_ != null) {
        return metaBuilder_.getMessageOrBuilder();
      } else {
        return meta_ == null ?
            com.google.fhir.r4.core.Meta.getDefaultInstance() : meta_;
      }
    }
    /**
     * <pre>
     * Metadata about the resource
     * </pre>
     *
     * <code>.google.fhir.r4.core.Meta meta = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.Meta, com.google.fhir.r4.core.Meta.Builder, com.google.fhir.r4.core.MetaOrBuilder> 
        getMetaFieldBuilder() {
      if (metaBuilder_ == null) {
        metaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.Meta, com.google.fhir.r4.core.Meta.Builder, com.google.fhir.r4.core.MetaOrBuilder>(
                getMeta(),
                getParentForChildren(),
                isClean());
        meta_ = null;
      }
      return metaBuilder_;
    }

    private com.google.fhir.r4.core.Uri implicitRules_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.Uri, com.google.fhir.r4.core.Uri.Builder, com.google.fhir.r4.core.UriOrBuilder> implicitRulesBuilder_;
    /**
     * <pre>
     * A set of rules under which this content was created
     * </pre>
     *
     * <code>.google.fhir.r4.core.Uri implicit_rules = 3;</code>
     * @return Whether the implicitRules field is set.
     */
    public boolean hasImplicitRules() {
      return implicitRulesBuilder_ != null || implicitRules_ != null;
    }
    /**
     * <pre>
     * A set of rules under which this content was created
     * </pre>
     *
     * <code>.google.fhir.r4.core.Uri implicit_rules = 3;</code>
     * @return The implicitRules.
     */
    public com.google.fhir.r4.core.Uri getImplicitRules() {
      if (implicitRulesBuilder_ == null) {
        return implicitRules_ == null ? com.google.fhir.r4.core.Uri.getDefaultInstance() : implicitRules_;
      } else {
        return implicitRulesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * A set of rules under which this content was created
     * </pre>
     *
     * <code>.google.fhir.r4.core.Uri implicit_rules = 3;</code>
     */
    public Builder setImplicitRules(com.google.fhir.r4.core.Uri value) {
      if (implicitRulesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        implicitRules_ = value;
        onChanged();
      } else {
        implicitRulesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * A set of rules under which this content was created
     * </pre>
     *
     * <code>.google.fhir.r4.core.Uri implicit_rules = 3;</code>
     */
    public Builder setImplicitRules(
        com.google.fhir.r4.core.Uri.Builder builderForValue) {
      if (implicitRulesBuilder_ == null) {
        implicitRules_ = builderForValue.build();
        onChanged();
      } else {
        implicitRulesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * A set of rules under which this content was created
     * </pre>
     *
     * <code>.google.fhir.r4.core.Uri implicit_rules = 3;</code>
     */
    public Builder mergeImplicitRules(com.google.fhir.r4.core.Uri value) {
      if (implicitRulesBuilder_ == null) {
        if (implicitRules_ != null) {
          implicitRules_ =
            com.google.fhir.r4.core.Uri.newBuilder(implicitRules_).mergeFrom(value).buildPartial();
        } else {
          implicitRules_ = value;
        }
        onChanged();
      } else {
        implicitRulesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * A set of rules under which this content was created
     * </pre>
     *
     * <code>.google.fhir.r4.core.Uri implicit_rules = 3;</code>
     */
    public Builder clearImplicitRules() {
      if (implicitRulesBuilder_ == null) {
        implicitRules_ = null;
        onChanged();
      } else {
        implicitRules_ = null;
        implicitRulesBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * A set of rules under which this content was created
     * </pre>
     *
     * <code>.google.fhir.r4.core.Uri implicit_rules = 3;</code>
     */
    public com.google.fhir.r4.core.Uri.Builder getImplicitRulesBuilder() {
      
      onChanged();
      return getImplicitRulesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A set of rules under which this content was created
     * </pre>
     *
     * <code>.google.fhir.r4.core.Uri implicit_rules = 3;</code>
     */
    public com.google.fhir.r4.core.UriOrBuilder getImplicitRulesOrBuilder() {
      if (implicitRulesBuilder_ != null) {
        return implicitRulesBuilder_.getMessageOrBuilder();
      } else {
        return implicitRules_ == null ?
            com.google.fhir.r4.core.Uri.getDefaultInstance() : implicitRules_;
      }
    }
    /**
     * <pre>
     * A set of rules under which this content was created
     * </pre>
     *
     * <code>.google.fhir.r4.core.Uri implicit_rules = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.Uri, com.google.fhir.r4.core.Uri.Builder, com.google.fhir.r4.core.UriOrBuilder> 
        getImplicitRulesFieldBuilder() {
      if (implicitRulesBuilder_ == null) {
        implicitRulesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.Uri, com.google.fhir.r4.core.Uri.Builder, com.google.fhir.r4.core.UriOrBuilder>(
                getImplicitRules(),
                getParentForChildren(),
                isClean());
        implicitRules_ = null;
      }
      return implicitRulesBuilder_;
    }

    private com.google.fhir.r4.core.Code language_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.Code, com.google.fhir.r4.core.Code.Builder, com.google.fhir.r4.core.CodeOrBuilder> languageBuilder_;
    /**
     * <pre>
     * Language of the resource content
     * </pre>
     *
     * <code>.google.fhir.r4.core.Code language = 4;</code>
     * @return Whether the language field is set.
     */
    public boolean hasLanguage() {
      return languageBuilder_ != null || language_ != null;
    }
    /**
     * <pre>
     * Language of the resource content
     * </pre>
     *
     * <code>.google.fhir.r4.core.Code language = 4;</code>
     * @return The language.
     */
    public com.google.fhir.r4.core.Code getLanguage() {
      if (languageBuilder_ == null) {
        return language_ == null ? com.google.fhir.r4.core.Code.getDefaultInstance() : language_;
      } else {
        return languageBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Language of the resource content
     * </pre>
     *
     * <code>.google.fhir.r4.core.Code language = 4;</code>
     */
    public Builder setLanguage(com.google.fhir.r4.core.Code value) {
      if (languageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        language_ = value;
        onChanged();
      } else {
        languageBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Language of the resource content
     * </pre>
     *
     * <code>.google.fhir.r4.core.Code language = 4;</code>
     */
    public Builder setLanguage(
        com.google.fhir.r4.core.Code.Builder builderForValue) {
      if (languageBuilder_ == null) {
        language_ = builderForValue.build();
        onChanged();
      } else {
        languageBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Language of the resource content
     * </pre>
     *
     * <code>.google.fhir.r4.core.Code language = 4;</code>
     */
    public Builder mergeLanguage(com.google.fhir.r4.core.Code value) {
      if (languageBuilder_ == null) {
        if (language_ != null) {
          language_ =
            com.google.fhir.r4.core.Code.newBuilder(language_).mergeFrom(value).buildPartial();
        } else {
          language_ = value;
        }
        onChanged();
      } else {
        languageBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Language of the resource content
     * </pre>
     *
     * <code>.google.fhir.r4.core.Code language = 4;</code>
     */
    public Builder clearLanguage() {
      if (languageBuilder_ == null) {
        language_ = null;
        onChanged();
      } else {
        language_ = null;
        languageBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Language of the resource content
     * </pre>
     *
     * <code>.google.fhir.r4.core.Code language = 4;</code>
     */
    public com.google.fhir.r4.core.Code.Builder getLanguageBuilder() {
      
      onChanged();
      return getLanguageFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Language of the resource content
     * </pre>
     *
     * <code>.google.fhir.r4.core.Code language = 4;</code>
     */
    public com.google.fhir.r4.core.CodeOrBuilder getLanguageOrBuilder() {
      if (languageBuilder_ != null) {
        return languageBuilder_.getMessageOrBuilder();
      } else {
        return language_ == null ?
            com.google.fhir.r4.core.Code.getDefaultInstance() : language_;
      }
    }
    /**
     * <pre>
     * Language of the resource content
     * </pre>
     *
     * <code>.google.fhir.r4.core.Code language = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.Code, com.google.fhir.r4.core.Code.Builder, com.google.fhir.r4.core.CodeOrBuilder> 
        getLanguageFieldBuilder() {
      if (languageBuilder_ == null) {
        languageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.Code, com.google.fhir.r4.core.Code.Builder, com.google.fhir.r4.core.CodeOrBuilder>(
                getLanguage(),
                getParentForChildren(),
                isClean());
        language_ = null;
      }
      return languageBuilder_;
    }

    private com.google.fhir.r4.core.Narrative text_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.Narrative, com.google.fhir.r4.core.Narrative.Builder, com.google.fhir.r4.core.NarrativeOrBuilder> textBuilder_;
    /**
     * <pre>
     * Text summary of the resource, for human interpretation
     * </pre>
     *
     * <code>.google.fhir.r4.core.Narrative text = 5;</code>
     * @return Whether the text field is set.
     */
    public boolean hasText() {
      return textBuilder_ != null || text_ != null;
    }
    /**
     * <pre>
     * Text summary of the resource, for human interpretation
     * </pre>
     *
     * <code>.google.fhir.r4.core.Narrative text = 5;</code>
     * @return The text.
     */
    public com.google.fhir.r4.core.Narrative getText() {
      if (textBuilder_ == null) {
        return text_ == null ? com.google.fhir.r4.core.Narrative.getDefaultInstance() : text_;
      } else {
        return textBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Text summary of the resource, for human interpretation
     * </pre>
     *
     * <code>.google.fhir.r4.core.Narrative text = 5;</code>
     */
    public Builder setText(com.google.fhir.r4.core.Narrative value) {
      if (textBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        text_ = value;
        onChanged();
      } else {
        textBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Text summary of the resource, for human interpretation
     * </pre>
     *
     * <code>.google.fhir.r4.core.Narrative text = 5;</code>
     */
    public Builder setText(
        com.google.fhir.r4.core.Narrative.Builder builderForValue) {
      if (textBuilder_ == null) {
        text_ = builderForValue.build();
        onChanged();
      } else {
        textBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Text summary of the resource, for human interpretation
     * </pre>
     *
     * <code>.google.fhir.r4.core.Narrative text = 5;</code>
     */
    public Builder mergeText(com.google.fhir.r4.core.Narrative value) {
      if (textBuilder_ == null) {
        if (text_ != null) {
          text_ =
            com.google.fhir.r4.core.Narrative.newBuilder(text_).mergeFrom(value).buildPartial();
        } else {
          text_ = value;
        }
        onChanged();
      } else {
        textBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Text summary of the resource, for human interpretation
     * </pre>
     *
     * <code>.google.fhir.r4.core.Narrative text = 5;</code>
     */
    public Builder clearText() {
      if (textBuilder_ == null) {
        text_ = null;
        onChanged();
      } else {
        text_ = null;
        textBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Text summary of the resource, for human interpretation
     * </pre>
     *
     * <code>.google.fhir.r4.core.Narrative text = 5;</code>
     */
    public com.google.fhir.r4.core.Narrative.Builder getTextBuilder() {
      
      onChanged();
      return getTextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Text summary of the resource, for human interpretation
     * </pre>
     *
     * <code>.google.fhir.r4.core.Narrative text = 5;</code>
     */
    public com.google.fhir.r4.core.NarrativeOrBuilder getTextOrBuilder() {
      if (textBuilder_ != null) {
        return textBuilder_.getMessageOrBuilder();
      } else {
        return text_ == null ?
            com.google.fhir.r4.core.Narrative.getDefaultInstance() : text_;
      }
    }
    /**
     * <pre>
     * Text summary of the resource, for human interpretation
     * </pre>
     *
     * <code>.google.fhir.r4.core.Narrative text = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.Narrative, com.google.fhir.r4.core.Narrative.Builder, com.google.fhir.r4.core.NarrativeOrBuilder> 
        getTextFieldBuilder() {
      if (textBuilder_ == null) {
        textBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.Narrative, com.google.fhir.r4.core.Narrative.Builder, com.google.fhir.r4.core.NarrativeOrBuilder>(
                getText(),
                getParentForChildren(),
                isClean());
        text_ = null;
      }
      return textBuilder_;
    }

    private java.util.List<com.google.protobuf.Any> contained_ =
      java.util.Collections.emptyList();
    private void ensureContainedIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        contained_ = new java.util.ArrayList<com.google.protobuf.Any>(contained_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> containedBuilder_;

    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public java.util.List<com.google.protobuf.Any> getContainedList() {
      if (containedBuilder_ == null) {
        return java.util.Collections.unmodifiableList(contained_);
      } else {
        return containedBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public int getContainedCount() {
      if (containedBuilder_ == null) {
        return contained_.size();
      } else {
        return containedBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public com.google.protobuf.Any getContained(int index) {
      if (containedBuilder_ == null) {
        return contained_.get(index);
      } else {
        return containedBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public Builder setContained(
        int index, com.google.protobuf.Any value) {
      if (containedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContainedIsMutable();
        contained_.set(index, value);
        onChanged();
      } else {
        containedBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public Builder setContained(
        int index, com.google.protobuf.Any.Builder builderForValue) {
      if (containedBuilder_ == null) {
        ensureContainedIsMutable();
        contained_.set(index, builderForValue.build());
        onChanged();
      } else {
        containedBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public Builder addContained(com.google.protobuf.Any value) {
      if (containedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContainedIsMutable();
        contained_.add(value);
        onChanged();
      } else {
        containedBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public Builder addContained(
        int index, com.google.protobuf.Any value) {
      if (containedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContainedIsMutable();
        contained_.add(index, value);
        onChanged();
      } else {
        containedBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public Builder addContained(
        com.google.protobuf.Any.Builder builderForValue) {
      if (containedBuilder_ == null) {
        ensureContainedIsMutable();
        contained_.add(builderForValue.build());
        onChanged();
      } else {
        containedBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public Builder addContained(
        int index, com.google.protobuf.Any.Builder builderForValue) {
      if (containedBuilder_ == null) {
        ensureContainedIsMutable();
        contained_.add(index, builderForValue.build());
        onChanged();
      } else {
        containedBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public Builder addAllContained(
        java.lang.Iterable<? extends com.google.protobuf.Any> values) {
      if (containedBuilder_ == null) {
        ensureContainedIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, contained_);
        onChanged();
      } else {
        containedBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public Builder clearContained() {
      if (containedBuilder_ == null) {
        contained_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        containedBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public Builder removeContained(int index) {
      if (containedBuilder_ == null) {
        ensureContainedIsMutable();
        contained_.remove(index);
        onChanged();
      } else {
        containedBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public com.google.protobuf.Any.Builder getContainedBuilder(
        int index) {
      return getContainedFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public com.google.protobuf.AnyOrBuilder getContainedOrBuilder(
        int index) {
      if (containedBuilder_ == null) {
        return contained_.get(index);  } else {
        return containedBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public java.util.List<? extends com.google.protobuf.AnyOrBuilder> 
         getContainedOrBuilderList() {
      if (containedBuilder_ != null) {
        return containedBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(contained_);
      }
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public com.google.protobuf.Any.Builder addContainedBuilder() {
      return getContainedFieldBuilder().addBuilder(
          com.google.protobuf.Any.getDefaultInstance());
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public com.google.protobuf.Any.Builder addContainedBuilder(
        int index) {
      return getContainedFieldBuilder().addBuilder(
          index, com.google.protobuf.Any.getDefaultInstance());
    }
    /**
     * <pre>
     * Contained, inline Resources
     * </pre>
     *
     * <code>repeated .google.protobuf.Any contained = 6;</code>
     */
    public java.util.List<com.google.protobuf.Any.Builder> 
         getContainedBuilderList() {
      return getContainedFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
        getContainedFieldBuilder() {
      if (containedBuilder_ == null) {
        containedBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                contained_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        contained_ = null;
      }
      return containedBuilder_;
    }

    private java.util.List<com.google.fhir.r4.core.Extension> extension_ =
      java.util.Collections.emptyList();
    private void ensureExtensionIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        extension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>(extension_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> extensionBuilder_;

    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public java.util.List<com.google.fhir.r4.core.Extension> getExtensionList() {
      if (extensionBuilder_ == null) {
        return java.util.Collections.unmodifiableList(extension_);
      } else {
        return extensionBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public int getExtensionCount() {
      if (extensionBuilder_ == null) {
        return extension_.size();
      } else {
        return extensionBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public com.google.fhir.r4.core.Extension getExtension(int index) {
      if (extensionBuilder_ == null) {
        return extension_.get(index);
      } else {
        return extensionBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public Builder setExtension(
        int index, com.google.fhir.r4.core.Extension value) {
      if (extensionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtensionIsMutable();
        extension_.set(index, value);
        onChanged();
      } else {
        extensionBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public Builder setExtension(
        int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
      if (extensionBuilder_ == null) {
        ensureExtensionIsMutable();
        extension_.set(index, builderForValue.build());
        onChanged();
      } else {
        extensionBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public Builder addExtension(com.google.fhir.r4.core.Extension value) {
      if (extensionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtensionIsMutable();
        extension_.add(value);
        onChanged();
      } else {
        extensionBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public Builder addExtension(
        int index, com.google.fhir.r4.core.Extension value) {
      if (extensionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtensionIsMutable();
        extension_.add(index, value);
        onChanged();
      } else {
        extensionBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public Builder addExtension(
        com.google.fhir.r4.core.Extension.Builder builderForValue) {
      if (extensionBuilder_ == null) {
        ensureExtensionIsMutable();
        extension_.add(builderForValue.build());
        onChanged();
      } else {
        extensionBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public Builder addExtension(
        int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
      if (extensionBuilder_ == null) {
        ensureExtensionIsMutable();
        extension_.add(index, builderForValue.build());
        onChanged();
      } else {
        extensionBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public Builder addAllExtension(
        java.lang.Iterable<? extends com.google.fhir.r4.core.Extension> values) {
      if (extensionBuilder_ == null) {
        ensureExtensionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, extension_);
        onChanged();
      } else {
        extensionBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public Builder clearExtension() {
      if (extensionBuilder_ == null) {
        extension_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        extensionBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public Builder removeExtension(int index) {
      if (extensionBuilder_ == null) {
        ensureExtensionIsMutable();
        extension_.remove(index);
        onChanged();
      } else {
        extensionBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public com.google.fhir.r4.core.Extension.Builder getExtensionBuilder(
        int index) {
      return getExtensionFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public com.google.fhir.r4.core.ExtensionOrBuilder getExtensionOrBuilder(
        int index) {
      if (extensionBuilder_ == null) {
        return extension_.get(index);  } else {
        return extensionBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
         getExtensionOrBuilderList() {
      if (extensionBuilder_ != null) {
        return extensionBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(extension_);
      }
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public com.google.fhir.r4.core.Extension.Builder addExtensionBuilder() {
      return getExtensionFieldBuilder().addBuilder(
          com.google.fhir.r4.core.Extension.getDefaultInstance());
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public com.google.fhir.r4.core.Extension.Builder addExtensionBuilder(
        int index) {
      return getExtensionFieldBuilder().addBuilder(
          index, com.google.fhir.r4.core.Extension.getDefaultInstance());
    }
    /**
     * <pre>
     * Additional content defined by implementations
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension extension = 8;</code>
     */
    public java.util.List<com.google.fhir.r4.core.Extension.Builder> 
         getExtensionBuilderList() {
      return getExtensionFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> 
        getExtensionFieldBuilder() {
      if (extensionBuilder_ == null) {
        extensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder>(
                extension_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        extension_ = null;
      }
      return extensionBuilder_;
    }

    private java.util.List<com.google.fhir.r4.core.Extension> modifierExtension_ =
      java.util.Collections.emptyList();
    private void ensureModifierExtensionIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        modifierExtension_ = new java.util.ArrayList<com.google.fhir.r4.core.Extension>(modifierExtension_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> modifierExtensionBuilder_;

    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public java.util.List<com.google.fhir.r4.core.Extension> getModifierExtensionList() {
      if (modifierExtensionBuilder_ == null) {
        return java.util.Collections.unmodifiableList(modifierExtension_);
      } else {
        return modifierExtensionBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public int getModifierExtensionCount() {
      if (modifierExtensionBuilder_ == null) {
        return modifierExtension_.size();
      } else {
        return modifierExtensionBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public com.google.fhir.r4.core.Extension getModifierExtension(int index) {
      if (modifierExtensionBuilder_ == null) {
        return modifierExtension_.get(index);
      } else {
        return modifierExtensionBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public Builder setModifierExtension(
        int index, com.google.fhir.r4.core.Extension value) {
      if (modifierExtensionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureModifierExtensionIsMutable();
        modifierExtension_.set(index, value);
        onChanged();
      } else {
        modifierExtensionBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public Builder setModifierExtension(
        int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
      if (modifierExtensionBuilder_ == null) {
        ensureModifierExtensionIsMutable();
        modifierExtension_.set(index, builderForValue.build());
        onChanged();
      } else {
        modifierExtensionBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public Builder addModifierExtension(com.google.fhir.r4.core.Extension value) {
      if (modifierExtensionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureModifierExtensionIsMutable();
        modifierExtension_.add(value);
        onChanged();
      } else {
        modifierExtensionBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public Builder addModifierExtension(
        int index, com.google.fhir.r4.core.Extension value) {
      if (modifierExtensionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureModifierExtensionIsMutable();
        modifierExtension_.add(index, value);
        onChanged();
      } else {
        modifierExtensionBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public Builder addModifierExtension(
        com.google.fhir.r4.core.Extension.Builder builderForValue) {
      if (modifierExtensionBuilder_ == null) {
        ensureModifierExtensionIsMutable();
        modifierExtension_.add(builderForValue.build());
        onChanged();
      } else {
        modifierExtensionBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public Builder addModifierExtension(
        int index, com.google.fhir.r4.core.Extension.Builder builderForValue) {
      if (modifierExtensionBuilder_ == null) {
        ensureModifierExtensionIsMutable();
        modifierExtension_.add(index, builderForValue.build());
        onChanged();
      } else {
        modifierExtensionBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public Builder addAllModifierExtension(
        java.lang.Iterable<? extends com.google.fhir.r4.core.Extension> values) {
      if (modifierExtensionBuilder_ == null) {
        ensureModifierExtensionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, modifierExtension_);
        onChanged();
      } else {
        modifierExtensionBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public Builder clearModifierExtension() {
      if (modifierExtensionBuilder_ == null) {
        modifierExtension_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        modifierExtensionBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public Builder removeModifierExtension(int index) {
      if (modifierExtensionBuilder_ == null) {
        ensureModifierExtensionIsMutable();
        modifierExtension_.remove(index);
        onChanged();
      } else {
        modifierExtensionBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public com.google.fhir.r4.core.Extension.Builder getModifierExtensionBuilder(
        int index) {
      return getModifierExtensionFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public com.google.fhir.r4.core.ExtensionOrBuilder getModifierExtensionOrBuilder(
        int index) {
      if (modifierExtensionBuilder_ == null) {
        return modifierExtension_.get(index);  } else {
        return modifierExtensionBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> 
         getModifierExtensionOrBuilderList() {
      if (modifierExtensionBuilder_ != null) {
        return modifierExtensionBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(modifierExtension_);
      }
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public com.google.fhir.r4.core.Extension.Builder addModifierExtensionBuilder() {
      return getModifierExtensionFieldBuilder().addBuilder(
          com.google.fhir.r4.core.Extension.getDefaultInstance());
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public com.google.fhir.r4.core.Extension.Builder addModifierExtensionBuilder(
        int index) {
      return getModifierExtensionFieldBuilder().addBuilder(
          index, com.google.fhir.r4.core.Extension.getDefaultInstance());
    }
    /**
     * <pre>
     * Extensions that cannot be ignored
     * </pre>
     *
     * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 9;</code>
     */
    public java.util.List<com.google.fhir.r4.core.Extension.Builder> 
         getModifierExtensionBuilderList() {
      return getModifierExtensionFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder> 
        getModifierExtensionFieldBuilder() {
      if (modifierExtensionBuilder_ == null) {
        modifierExtensionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.fhir.r4.core.Extension, com.google.fhir.r4.core.Extension.Builder, com.google.fhir.r4.core.ExtensionOrBuilder>(
                modifierExtension_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        modifierExtension_ = null;
      }
      return modifierExtensionBuilder_;
    }

    private com.google.fhir.r4.core.CodeableConcept sequenceType_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.CodeableConcept, com.google.fhir.r4.core.CodeableConcept.Builder, com.google.fhir.r4.core.CodeableConceptOrBuilder> sequenceTypeBuilder_;
    /**
     * <pre>
     * The type of the sequence shall be specified based on a controlled
     * vocabulary
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept sequence_type = 10;</code>
     * @return Whether the sequenceType field is set.
     */
    public boolean hasSequenceType() {
      return sequenceTypeBuilder_ != null || sequenceType_ != null;
    }
    /**
     * <pre>
     * The type of the sequence shall be specified based on a controlled
     * vocabulary
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept sequence_type = 10;</code>
     * @return The sequenceType.
     */
    public com.google.fhir.r4.core.CodeableConcept getSequenceType() {
      if (sequenceTypeBuilder_ == null) {
        return sequenceType_ == null ? com.google.fhir.r4.core.CodeableConcept.getDefaultInstance() : sequenceType_;
      } else {
        return sequenceTypeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The type of the sequence shall be specified based on a controlled
     * vocabulary
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept sequence_type = 10;</code>
     */
    public Builder setSequenceType(com.google.fhir.r4.core.CodeableConcept value) {
      if (sequenceTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sequenceType_ = value;
        onChanged();
      } else {
        sequenceTypeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The type of the sequence shall be specified based on a controlled
     * vocabulary
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept sequence_type = 10;</code>
     */
    public Builder setSequenceType(
        com.google.fhir.r4.core.CodeableConcept.Builder builderForValue) {
      if (sequenceTypeBuilder_ == null) {
        sequenceType_ = builderForValue.build();
        onChanged();
      } else {
        sequenceTypeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The type of the sequence shall be specified based on a controlled
     * vocabulary
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept sequence_type = 10;</code>
     */
    public Builder mergeSequenceType(com.google.fhir.r4.core.CodeableConcept value) {
      if (sequenceTypeBuilder_ == null) {
        if (sequenceType_ != null) {
          sequenceType_ =
            com.google.fhir.r4.core.CodeableConcept.newBuilder(sequenceType_).mergeFrom(value).buildPartial();
        } else {
          sequenceType_ = value;
        }
        onChanged();
      } else {
        sequenceTypeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The type of the sequence shall be specified based on a controlled
     * vocabulary
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept sequence_type = 10;</code>
     */
    public Builder clearSequenceType() {
      if (sequenceTypeBuilder_ == null) {
        sequenceType_ = null;
        onChanged();
      } else {
        sequenceType_ = null;
        sequenceTypeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The type of the sequence shall be specified based on a controlled
     * vocabulary
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept sequence_type = 10;</code>
     */
    public com.google.fhir.r4.core.CodeableConcept.Builder getSequenceTypeBuilder() {
      
      onChanged();
      return getSequenceTypeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The type of the sequence shall be specified based on a controlled
     * vocabulary
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept sequence_type = 10;</code>
     */
    public com.google.fhir.r4.core.CodeableConceptOrBuilder getSequenceTypeOrBuilder() {
      if (sequenceTypeBuilder_ != null) {
        return sequenceTypeBuilder_.getMessageOrBuilder();
      } else {
        return sequenceType_ == null ?
            com.google.fhir.r4.core.CodeableConcept.getDefaultInstance() : sequenceType_;
      }
    }
    /**
     * <pre>
     * The type of the sequence shall be specified based on a controlled
     * vocabulary
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept sequence_type = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.CodeableConcept, com.google.fhir.r4.core.CodeableConcept.Builder, com.google.fhir.r4.core.CodeableConceptOrBuilder> 
        getSequenceTypeFieldBuilder() {
      if (sequenceTypeBuilder_ == null) {
        sequenceTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.CodeableConcept, com.google.fhir.r4.core.CodeableConcept.Builder, com.google.fhir.r4.core.CodeableConceptOrBuilder>(
                getSequenceType(),
                getParentForChildren(),
                isClean());
        sequenceType_ = null;
      }
      return sequenceTypeBuilder_;
    }

    private com.google.fhir.r4.core.Integer numberOfSubunits_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.Integer, com.google.fhir.r4.core.Integer.Builder, com.google.fhir.r4.core.IntegerOrBuilder> numberOfSubunitsBuilder_;
    /**
     * <pre>
     * The number of linear sequences of nucleotides linked through phosphodiester
     * bonds shall be described. Subunits would be strands of nucleic acids that
     * are tightly associated typically through Watson-Crick base pairing. NOTE:
     * If not specified in the reference source, the assumption is that there is 1
     * subunit
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer number_of_subunits = 11;</code>
     * @return Whether the numberOfSubunits field is set.
     */
    public boolean hasNumberOfSubunits() {
      return numberOfSubunitsBuilder_ != null || numberOfSubunits_ != null;
    }
    /**
     * <pre>
     * The number of linear sequences of nucleotides linked through phosphodiester
     * bonds shall be described. Subunits would be strands of nucleic acids that
     * are tightly associated typically through Watson-Crick base pairing. NOTE:
     * If not specified in the reference source, the assumption is that there is 1
     * subunit
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer number_of_subunits = 11;</code>
     * @return The numberOfSubunits.
     */
    public com.google.fhir.r4.core.Integer getNumberOfSubunits() {
      if (numberOfSubunitsBuilder_ == null) {
        return numberOfSubunits_ == null ? com.google.fhir.r4.core.Integer.getDefaultInstance() : numberOfSubunits_;
      } else {
        return numberOfSubunitsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The number of linear sequences of nucleotides linked through phosphodiester
     * bonds shall be described. Subunits would be strands of nucleic acids that
     * are tightly associated typically through Watson-Crick base pairing. NOTE:
     * If not specified in the reference source, the assumption is that there is 1
     * subunit
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer number_of_subunits = 11;</code>
     */
    public Builder setNumberOfSubunits(com.google.fhir.r4.core.Integer value) {
      if (numberOfSubunitsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        numberOfSubunits_ = value;
        onChanged();
      } else {
        numberOfSubunitsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of linear sequences of nucleotides linked through phosphodiester
     * bonds shall be described. Subunits would be strands of nucleic acids that
     * are tightly associated typically through Watson-Crick base pairing. NOTE:
     * If not specified in the reference source, the assumption is that there is 1
     * subunit
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer number_of_subunits = 11;</code>
     */
    public Builder setNumberOfSubunits(
        com.google.fhir.r4.core.Integer.Builder builderForValue) {
      if (numberOfSubunitsBuilder_ == null) {
        numberOfSubunits_ = builderForValue.build();
        onChanged();
      } else {
        numberOfSubunitsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The number of linear sequences of nucleotides linked through phosphodiester
     * bonds shall be described. Subunits would be strands of nucleic acids that
     * are tightly associated typically through Watson-Crick base pairing. NOTE:
     * If not specified in the reference source, the assumption is that there is 1
     * subunit
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer number_of_subunits = 11;</code>
     */
    public Builder mergeNumberOfSubunits(com.google.fhir.r4.core.Integer value) {
      if (numberOfSubunitsBuilder_ == null) {
        if (numberOfSubunits_ != null) {
          numberOfSubunits_ =
            com.google.fhir.r4.core.Integer.newBuilder(numberOfSubunits_).mergeFrom(value).buildPartial();
        } else {
          numberOfSubunits_ = value;
        }
        onChanged();
      } else {
        numberOfSubunitsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of linear sequences of nucleotides linked through phosphodiester
     * bonds shall be described. Subunits would be strands of nucleic acids that
     * are tightly associated typically through Watson-Crick base pairing. NOTE:
     * If not specified in the reference source, the assumption is that there is 1
     * subunit
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer number_of_subunits = 11;</code>
     */
    public Builder clearNumberOfSubunits() {
      if (numberOfSubunitsBuilder_ == null) {
        numberOfSubunits_ = null;
        onChanged();
      } else {
        numberOfSubunits_ = null;
        numberOfSubunitsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The number of linear sequences of nucleotides linked through phosphodiester
     * bonds shall be described. Subunits would be strands of nucleic acids that
     * are tightly associated typically through Watson-Crick base pairing. NOTE:
     * If not specified in the reference source, the assumption is that there is 1
     * subunit
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer number_of_subunits = 11;</code>
     */
    public com.google.fhir.r4.core.Integer.Builder getNumberOfSubunitsBuilder() {
      
      onChanged();
      return getNumberOfSubunitsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The number of linear sequences of nucleotides linked through phosphodiester
     * bonds shall be described. Subunits would be strands of nucleic acids that
     * are tightly associated typically through Watson-Crick base pairing. NOTE:
     * If not specified in the reference source, the assumption is that there is 1
     * subunit
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer number_of_subunits = 11;</code>
     */
    public com.google.fhir.r4.core.IntegerOrBuilder getNumberOfSubunitsOrBuilder() {
      if (numberOfSubunitsBuilder_ != null) {
        return numberOfSubunitsBuilder_.getMessageOrBuilder();
      } else {
        return numberOfSubunits_ == null ?
            com.google.fhir.r4.core.Integer.getDefaultInstance() : numberOfSubunits_;
      }
    }
    /**
     * <pre>
     * The number of linear sequences of nucleotides linked through phosphodiester
     * bonds shall be described. Subunits would be strands of nucleic acids that
     * are tightly associated typically through Watson-Crick base pairing. NOTE:
     * If not specified in the reference source, the assumption is that there is 1
     * subunit
     * </pre>
     *
     * <code>.google.fhir.r4.core.Integer number_of_subunits = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.Integer, com.google.fhir.r4.core.Integer.Builder, com.google.fhir.r4.core.IntegerOrBuilder> 
        getNumberOfSubunitsFieldBuilder() {
      if (numberOfSubunitsBuilder_ == null) {
        numberOfSubunitsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.Integer, com.google.fhir.r4.core.Integer.Builder, com.google.fhir.r4.core.IntegerOrBuilder>(
                getNumberOfSubunits(),
                getParentForChildren(),
                isClean());
        numberOfSubunits_ = null;
      }
      return numberOfSubunitsBuilder_;
    }

    private com.google.fhir.r4.core.String areaOfHybridisation_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> areaOfHybridisationBuilder_;
    /**
     * <pre>
     * The area of hybridisation shall be described if applicable for double
     * stranded RNA or DNA. The number associated with the subunit followed by the
     * number associated to the residue shall be specified in increasing order.
     * The underscore “” shall be used as separator as follows: “Subunitnumber
     * Residue”
     * </pre>
     *
     * <code>.google.fhir.r4.core.String area_of_hybridisation = 12;</code>
     * @return Whether the areaOfHybridisation field is set.
     */
    public boolean hasAreaOfHybridisation() {
      return areaOfHybridisationBuilder_ != null || areaOfHybridisation_ != null;
    }
    /**
     * <pre>
     * The area of hybridisation shall be described if applicable for double
     * stranded RNA or DNA. The number associated with the subunit followed by the
     * number associated to the residue shall be specified in increasing order.
     * The underscore “” shall be used as separator as follows: “Subunitnumber
     * Residue”
     * </pre>
     *
     * <code>.google.fhir.r4.core.String area_of_hybridisation = 12;</code>
     * @return The areaOfHybridisation.
     */
    public com.google.fhir.r4.core.String getAreaOfHybridisation() {
      if (areaOfHybridisationBuilder_ == null) {
        return areaOfHybridisation_ == null ? com.google.fhir.r4.core.String.getDefaultInstance() : areaOfHybridisation_;
      } else {
        return areaOfHybridisationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The area of hybridisation shall be described if applicable for double
     * stranded RNA or DNA. The number associated with the subunit followed by the
     * number associated to the residue shall be specified in increasing order.
     * The underscore “” shall be used as separator as follows: “Subunitnumber
     * Residue”
     * </pre>
     *
     * <code>.google.fhir.r4.core.String area_of_hybridisation = 12;</code>
     */
    public Builder setAreaOfHybridisation(com.google.fhir.r4.core.String value) {
      if (areaOfHybridisationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        areaOfHybridisation_ = value;
        onChanged();
      } else {
        areaOfHybridisationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The area of hybridisation shall be described if applicable for double
     * stranded RNA or DNA. The number associated with the subunit followed by the
     * number associated to the residue shall be specified in increasing order.
     * The underscore “” shall be used as separator as follows: “Subunitnumber
     * Residue”
     * </pre>
     *
     * <code>.google.fhir.r4.core.String area_of_hybridisation = 12;</code>
     */
    public Builder setAreaOfHybridisation(
        com.google.fhir.r4.core.String.Builder builderForValue) {
      if (areaOfHybridisationBuilder_ == null) {
        areaOfHybridisation_ = builderForValue.build();
        onChanged();
      } else {
        areaOfHybridisationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The area of hybridisation shall be described if applicable for double
     * stranded RNA or DNA. The number associated with the subunit followed by the
     * number associated to the residue shall be specified in increasing order.
     * The underscore “” shall be used as separator as follows: “Subunitnumber
     * Residue”
     * </pre>
     *
     * <code>.google.fhir.r4.core.String area_of_hybridisation = 12;</code>
     */
    public Builder mergeAreaOfHybridisation(com.google.fhir.r4.core.String value) {
      if (areaOfHybridisationBuilder_ == null) {
        if (areaOfHybridisation_ != null) {
          areaOfHybridisation_ =
            com.google.fhir.r4.core.String.newBuilder(areaOfHybridisation_).mergeFrom(value).buildPartial();
        } else {
          areaOfHybridisation_ = value;
        }
        onChanged();
      } else {
        areaOfHybridisationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The area of hybridisation shall be described if applicable for double
     * stranded RNA or DNA. The number associated with the subunit followed by the
     * number associated to the residue shall be specified in increasing order.
     * The underscore “” shall be used as separator as follows: “Subunitnumber
     * Residue”
     * </pre>
     *
     * <code>.google.fhir.r4.core.String area_of_hybridisation = 12;</code>
     */
    public Builder clearAreaOfHybridisation() {
      if (areaOfHybridisationBuilder_ == null) {
        areaOfHybridisation_ = null;
        onChanged();
      } else {
        areaOfHybridisation_ = null;
        areaOfHybridisationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The area of hybridisation shall be described if applicable for double
     * stranded RNA or DNA. The number associated with the subunit followed by the
     * number associated to the residue shall be specified in increasing order.
     * The underscore “” shall be used as separator as follows: “Subunitnumber
     * Residue”
     * </pre>
     *
     * <code>.google.fhir.r4.core.String area_of_hybridisation = 12;</code>
     */
    public com.google.fhir.r4.core.String.Builder getAreaOfHybridisationBuilder() {
      
      onChanged();
      return getAreaOfHybridisationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The area of hybridisation shall be described if applicable for double
     * stranded RNA or DNA. The number associated with the subunit followed by the
     * number associated to the residue shall be specified in increasing order.
     * The underscore “” shall be used as separator as follows: “Subunitnumber
     * Residue”
     * </pre>
     *
     * <code>.google.fhir.r4.core.String area_of_hybridisation = 12;</code>
     */
    public com.google.fhir.r4.core.StringOrBuilder getAreaOfHybridisationOrBuilder() {
      if (areaOfHybridisationBuilder_ != null) {
        return areaOfHybridisationBuilder_.getMessageOrBuilder();
      } else {
        return areaOfHybridisation_ == null ?
            com.google.fhir.r4.core.String.getDefaultInstance() : areaOfHybridisation_;
      }
    }
    /**
     * <pre>
     * The area of hybridisation shall be described if applicable for double
     * stranded RNA or DNA. The number associated with the subunit followed by the
     * number associated to the residue shall be specified in increasing order.
     * The underscore “” shall be used as separator as follows: “Subunitnumber
     * Residue”
     * </pre>
     *
     * <code>.google.fhir.r4.core.String area_of_hybridisation = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder> 
        getAreaOfHybridisationFieldBuilder() {
      if (areaOfHybridisationBuilder_ == null) {
        areaOfHybridisationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.String, com.google.fhir.r4.core.String.Builder, com.google.fhir.r4.core.StringOrBuilder>(
                getAreaOfHybridisation(),
                getParentForChildren(),
                isClean());
        areaOfHybridisation_ = null;
      }
      return areaOfHybridisationBuilder_;
    }

    private com.google.fhir.r4.core.CodeableConcept oligoNucleotideType_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.CodeableConcept, com.google.fhir.r4.core.CodeableConcept.Builder, com.google.fhir.r4.core.CodeableConceptOrBuilder> oligoNucleotideTypeBuilder_;
    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept oligo_nucleotide_type = 13;</code>
     * @return Whether the oligoNucleotideType field is set.
     */
    public boolean hasOligoNucleotideType() {
      return oligoNucleotideTypeBuilder_ != null || oligoNucleotideType_ != null;
    }
    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept oligo_nucleotide_type = 13;</code>
     * @return The oligoNucleotideType.
     */
    public com.google.fhir.r4.core.CodeableConcept getOligoNucleotideType() {
      if (oligoNucleotideTypeBuilder_ == null) {
        return oligoNucleotideType_ == null ? com.google.fhir.r4.core.CodeableConcept.getDefaultInstance() : oligoNucleotideType_;
      } else {
        return oligoNucleotideTypeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept oligo_nucleotide_type = 13;</code>
     */
    public Builder setOligoNucleotideType(com.google.fhir.r4.core.CodeableConcept value) {
      if (oligoNucleotideTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        oligoNucleotideType_ = value;
        onChanged();
      } else {
        oligoNucleotideTypeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept oligo_nucleotide_type = 13;</code>
     */
    public Builder setOligoNucleotideType(
        com.google.fhir.r4.core.CodeableConcept.Builder builderForValue) {
      if (oligoNucleotideTypeBuilder_ == null) {
        oligoNucleotideType_ = builderForValue.build();
        onChanged();
      } else {
        oligoNucleotideTypeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept oligo_nucleotide_type = 13;</code>
     */
    public Builder mergeOligoNucleotideType(com.google.fhir.r4.core.CodeableConcept value) {
      if (oligoNucleotideTypeBuilder_ == null) {
        if (oligoNucleotideType_ != null) {
          oligoNucleotideType_ =
            com.google.fhir.r4.core.CodeableConcept.newBuilder(oligoNucleotideType_).mergeFrom(value).buildPartial();
        } else {
          oligoNucleotideType_ = value;
        }
        onChanged();
      } else {
        oligoNucleotideTypeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept oligo_nucleotide_type = 13;</code>
     */
    public Builder clearOligoNucleotideType() {
      if (oligoNucleotideTypeBuilder_ == null) {
        oligoNucleotideType_ = null;
        onChanged();
      } else {
        oligoNucleotideType_ = null;
        oligoNucleotideTypeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept oligo_nucleotide_type = 13;</code>
     */
    public com.google.fhir.r4.core.CodeableConcept.Builder getOligoNucleotideTypeBuilder() {
      
      onChanged();
      return getOligoNucleotideTypeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept oligo_nucleotide_type = 13;</code>
     */
    public com.google.fhir.r4.core.CodeableConceptOrBuilder getOligoNucleotideTypeOrBuilder() {
      if (oligoNucleotideTypeBuilder_ != null) {
        return oligoNucleotideTypeBuilder_.getMessageOrBuilder();
      } else {
        return oligoNucleotideType_ == null ?
            com.google.fhir.r4.core.CodeableConcept.getDefaultInstance() : oligoNucleotideType_;
      }
    }
    /**
     * <pre>
     * (TBC)
     * </pre>
     *
     * <code>.google.fhir.r4.core.CodeableConcept oligo_nucleotide_type = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.fhir.r4.core.CodeableConcept, com.google.fhir.r4.core.CodeableConcept.Builder, com.google.fhir.r4.core.CodeableConceptOrBuilder> 
        getOligoNucleotideTypeFieldBuilder() {
      if (oligoNucleotideTypeBuilder_ == null) {
        oligoNucleotideTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.fhir.r4.core.CodeableConcept, com.google.fhir.r4.core.CodeableConcept.Builder, com.google.fhir.r4.core.CodeableConceptOrBuilder>(
                getOligoNucleotideType(),
                getParentForChildren(),
                isClean());
        oligoNucleotideType_ = null;
      }
      return oligoNucleotideTypeBuilder_;
    }

    private java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit> subunit_ =
      java.util.Collections.emptyList();
    private void ensureSubunitIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        subunit_ = new java.util.ArrayList<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit>(subunit_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Builder, com.google.fhir.r4.core.SubstanceNucleicAcid.SubunitOrBuilder> subunitBuilder_;

    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit> getSubunitList() {
      if (subunitBuilder_ == null) {
        return java.util.Collections.unmodifiableList(subunit_);
      } else {
        return subunitBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public int getSubunitCount() {
      if (subunitBuilder_ == null) {
        return subunit_.size();
      } else {
        return subunitBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit getSubunit(int index) {
      if (subunitBuilder_ == null) {
        return subunit_.get(index);
      } else {
        return subunitBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public Builder setSubunit(
        int index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit value) {
      if (subunitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubunitIsMutable();
        subunit_.set(index, value);
        onChanged();
      } else {
        subunitBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public Builder setSubunit(
        int index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Builder builderForValue) {
      if (subunitBuilder_ == null) {
        ensureSubunitIsMutable();
        subunit_.set(index, builderForValue.build());
        onChanged();
      } else {
        subunitBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public Builder addSubunit(com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit value) {
      if (subunitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubunitIsMutable();
        subunit_.add(value);
        onChanged();
      } else {
        subunitBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public Builder addSubunit(
        int index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit value) {
      if (subunitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSubunitIsMutable();
        subunit_.add(index, value);
        onChanged();
      } else {
        subunitBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public Builder addSubunit(
        com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Builder builderForValue) {
      if (subunitBuilder_ == null) {
        ensureSubunitIsMutable();
        subunit_.add(builderForValue.build());
        onChanged();
      } else {
        subunitBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public Builder addSubunit(
        int index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Builder builderForValue) {
      if (subunitBuilder_ == null) {
        ensureSubunitIsMutable();
        subunit_.add(index, builderForValue.build());
        onChanged();
      } else {
        subunitBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public Builder addAllSubunit(
        java.lang.Iterable<? extends com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit> values) {
      if (subunitBuilder_ == null) {
        ensureSubunitIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, subunit_);
        onChanged();
      } else {
        subunitBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public Builder clearSubunit() {
      if (subunitBuilder_ == null) {
        subunit_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        subunitBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public Builder removeSubunit(int index) {
      if (subunitBuilder_ == null) {
        ensureSubunitIsMutable();
        subunit_.remove(index);
        onChanged();
      } else {
        subunitBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Builder getSubunitBuilder(
        int index) {
      return getSubunitFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public com.google.fhir.r4.core.SubstanceNucleicAcid.SubunitOrBuilder getSubunitOrBuilder(
        int index) {
      if (subunitBuilder_ == null) {
        return subunit_.get(index);  } else {
        return subunitBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public java.util.List<? extends com.google.fhir.r4.core.SubstanceNucleicAcid.SubunitOrBuilder> 
         getSubunitOrBuilderList() {
      if (subunitBuilder_ != null) {
        return subunitBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(subunit_);
      }
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Builder addSubunitBuilder() {
      return getSubunitFieldBuilder().addBuilder(
          com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.getDefaultInstance());
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Builder addSubunitBuilder(
        int index) {
      return getSubunitFieldBuilder().addBuilder(
          index, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.getDefaultInstance());
    }
    /**
     * <code>repeated .google.fhir.r4.core.SubstanceNucleicAcid.Subunit subunit = 14;</code>
     */
    public java.util.List<com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Builder> 
         getSubunitBuilderList() {
      return getSubunitFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Builder, com.google.fhir.r4.core.SubstanceNucleicAcid.SubunitOrBuilder> 
        getSubunitFieldBuilder() {
      if (subunitBuilder_ == null) {
        subunitBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit, com.google.fhir.r4.core.SubstanceNucleicAcid.Subunit.Builder, com.google.fhir.r4.core.SubstanceNucleicAcid.SubunitOrBuilder>(
                subunit_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        subunit_ = null;
      }
      return subunitBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.fhir.r4.core.SubstanceNucleicAcid)
  }

  // @@protoc_insertion_point(class_scope:google.fhir.r4.core.SubstanceNucleicAcid)
  private static final com.google.fhir.r4.core.SubstanceNucleicAcid DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.fhir.r4.core.SubstanceNucleicAcid();
  }

  public static com.google.fhir.r4.core.SubstanceNucleicAcid getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SubstanceNucleicAcid>
      PARSER = new com.google.protobuf.AbstractParser<SubstanceNucleicAcid>() {
    @java.lang.Override
    public SubstanceNucleicAcid parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SubstanceNucleicAcid(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SubstanceNucleicAcid> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SubstanceNucleicAcid> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.fhir.r4.core.SubstanceNucleicAcid getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

