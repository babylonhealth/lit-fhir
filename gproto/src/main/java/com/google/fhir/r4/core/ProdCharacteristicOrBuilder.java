// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/r4/core/datatypes.proto

package com.google.fhir.r4.core;

public interface ProdCharacteristicOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.fhir.r4.core.ProdCharacteristic)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * Unique id for inter-element referencing
   * </pre>
   *
   * <code>.google.fhir.r4.core.String id = 1;</code>
   *
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   *
   *
   * <pre>
   * Unique id for inter-element referencing
   * </pre>
   *
   * <code>.google.fhir.r4.core.String id = 1;</code>
   *
   * @return The id.
   */
  com.google.fhir.r4.core.String getId();
  /**
   *
   *
   * <pre>
   * Unique id for inter-element referencing
   * </pre>
   *
   * <code>.google.fhir.r4.core.String id = 1;</code>
   */
  com.google.fhir.r4.core.StringOrBuilder getIdOrBuilder();

  /**
   *
   *
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  java.util.List<com.google.fhir.r4.core.Extension> getExtensionList();
  /**
   *
   *
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  com.google.fhir.r4.core.Extension getExtension(int index);
  /**
   *
   *
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  int getExtensionCount();
  /**
   *
   *
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder> getExtensionOrBuilderList();
  /**
   *
   *
   * <pre>
   * Additional content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension extension = 2;</code>
   */
  com.google.fhir.r4.core.ExtensionOrBuilder getExtensionOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Extensions that cannot be ignored even if unrecognized
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
   */
  java.util.List<com.google.fhir.r4.core.Extension> getModifierExtensionList();
  /**
   *
   *
   * <pre>
   * Extensions that cannot be ignored even if unrecognized
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
   */
  com.google.fhir.r4.core.Extension getModifierExtension(int index);
  /**
   *
   *
   * <pre>
   * Extensions that cannot be ignored even if unrecognized
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
   */
  int getModifierExtensionCount();
  /**
   *
   *
   * <pre>
   * Extensions that cannot be ignored even if unrecognized
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
   */
  java.util.List<? extends com.google.fhir.r4.core.ExtensionOrBuilder>
      getModifierExtensionOrBuilderList();
  /**
   *
   *
   * <pre>
   * Extensions that cannot be ignored even if unrecognized
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Extension modifier_extension = 3;</code>
   */
  com.google.fhir.r4.core.ExtensionOrBuilder getModifierExtensionOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Where applicable, the height can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity height = 4;</code>
   *
   * @return Whether the height field is set.
   */
  boolean hasHeight();
  /**
   *
   *
   * <pre>
   * Where applicable, the height can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity height = 4;</code>
   *
   * @return The height.
   */
  com.google.fhir.r4.core.Quantity getHeight();
  /**
   *
   *
   * <pre>
   * Where applicable, the height can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity height = 4;</code>
   */
  com.google.fhir.r4.core.QuantityOrBuilder getHeightOrBuilder();

  /**
   *
   *
   * <pre>
   * Where applicable, the width can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity width = 5;</code>
   *
   * @return Whether the width field is set.
   */
  boolean hasWidth();
  /**
   *
   *
   * <pre>
   * Where applicable, the width can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity width = 5;</code>
   *
   * @return The width.
   */
  com.google.fhir.r4.core.Quantity getWidth();
  /**
   *
   *
   * <pre>
   * Where applicable, the width can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity width = 5;</code>
   */
  com.google.fhir.r4.core.QuantityOrBuilder getWidthOrBuilder();

  /**
   *
   *
   * <pre>
   * Where applicable, the depth can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity depth = 6;</code>
   *
   * @return Whether the depth field is set.
   */
  boolean hasDepth();
  /**
   *
   *
   * <pre>
   * Where applicable, the depth can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity depth = 6;</code>
   *
   * @return The depth.
   */
  com.google.fhir.r4.core.Quantity getDepth();
  /**
   *
   *
   * <pre>
   * Where applicable, the depth can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity depth = 6;</code>
   */
  com.google.fhir.r4.core.QuantityOrBuilder getDepthOrBuilder();

  /**
   *
   *
   * <pre>
   * Where applicable, the weight can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity weight = 7;</code>
   *
   * @return Whether the weight field is set.
   */
  boolean hasWeight();
  /**
   *
   *
   * <pre>
   * Where applicable, the weight can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity weight = 7;</code>
   *
   * @return The weight.
   */
  com.google.fhir.r4.core.Quantity getWeight();
  /**
   *
   *
   * <pre>
   * Where applicable, the weight can be specified using a numerical value and
   * its unit of measurement The unit of measurement shall be specified in
   * accordance with ISO 11240 and the resulting terminology The symbol and the
   * symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity weight = 7;</code>
   */
  com.google.fhir.r4.core.QuantityOrBuilder getWeightOrBuilder();

  /**
   *
   *
   * <pre>
   * Where applicable, the nominal volume can be specified using a numerical
   * value and its unit of measurement The unit of measurement shall be
   * specified in accordance with ISO 11240 and the resulting terminology The
   * symbol and the symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity nominal_volume = 8;</code>
   *
   * @return Whether the nominalVolume field is set.
   */
  boolean hasNominalVolume();
  /**
   *
   *
   * <pre>
   * Where applicable, the nominal volume can be specified using a numerical
   * value and its unit of measurement The unit of measurement shall be
   * specified in accordance with ISO 11240 and the resulting terminology The
   * symbol and the symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity nominal_volume = 8;</code>
   *
   * @return The nominalVolume.
   */
  com.google.fhir.r4.core.Quantity getNominalVolume();
  /**
   *
   *
   * <pre>
   * Where applicable, the nominal volume can be specified using a numerical
   * value and its unit of measurement The unit of measurement shall be
   * specified in accordance with ISO 11240 and the resulting terminology The
   * symbol and the symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity nominal_volume = 8;</code>
   */
  com.google.fhir.r4.core.QuantityOrBuilder getNominalVolumeOrBuilder();

  /**
   *
   *
   * <pre>
   * Where applicable, the external diameter can be specified using a numerical
   * value and its unit of measurement The unit of measurement shall be
   * specified in accordance with ISO 11240 and the resulting terminology The
   * symbol and the symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity external_diameter = 9;</code>
   *
   * @return Whether the externalDiameter field is set.
   */
  boolean hasExternalDiameter();
  /**
   *
   *
   * <pre>
   * Where applicable, the external diameter can be specified using a numerical
   * value and its unit of measurement The unit of measurement shall be
   * specified in accordance with ISO 11240 and the resulting terminology The
   * symbol and the symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity external_diameter = 9;</code>
   *
   * @return The externalDiameter.
   */
  com.google.fhir.r4.core.Quantity getExternalDiameter();
  /**
   *
   *
   * <pre>
   * Where applicable, the external diameter can be specified using a numerical
   * value and its unit of measurement The unit of measurement shall be
   * specified in accordance with ISO 11240 and the resulting terminology The
   * symbol and the symbol identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.Quantity external_diameter = 9;</code>
   */
  com.google.fhir.r4.core.QuantityOrBuilder getExternalDiameterOrBuilder();

  /**
   *
   *
   * <pre>
   * Where applicable, the shape can be specified An appropriate controlled
   * vocabulary shall be used The term and the term identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.String shape = 10;</code>
   *
   * @return Whether the shape field is set.
   */
  boolean hasShape();
  /**
   *
   *
   * <pre>
   * Where applicable, the shape can be specified An appropriate controlled
   * vocabulary shall be used The term and the term identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.String shape = 10;</code>
   *
   * @return The shape.
   */
  com.google.fhir.r4.core.String getShape();
  /**
   *
   *
   * <pre>
   * Where applicable, the shape can be specified An appropriate controlled
   * vocabulary shall be used The term and the term identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.String shape = 10;</code>
   */
  com.google.fhir.r4.core.StringOrBuilder getShapeOrBuilder();

  /**
   *
   *
   * <pre>
   * Where applicable, the color can be specified An appropriate controlled
   * vocabulary shall be used The term and the term identifier shall be used
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.String color = 11;</code>
   */
  java.util.List<com.google.fhir.r4.core.String> getColorList();
  /**
   *
   *
   * <pre>
   * Where applicable, the color can be specified An appropriate controlled
   * vocabulary shall be used The term and the term identifier shall be used
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.String color = 11;</code>
   */
  com.google.fhir.r4.core.String getColor(int index);
  /**
   *
   *
   * <pre>
   * Where applicable, the color can be specified An appropriate controlled
   * vocabulary shall be used The term and the term identifier shall be used
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.String color = 11;</code>
   */
  int getColorCount();
  /**
   *
   *
   * <pre>
   * Where applicable, the color can be specified An appropriate controlled
   * vocabulary shall be used The term and the term identifier shall be used
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.String color = 11;</code>
   */
  java.util.List<? extends com.google.fhir.r4.core.StringOrBuilder> getColorOrBuilderList();
  /**
   *
   *
   * <pre>
   * Where applicable, the color can be specified An appropriate controlled
   * vocabulary shall be used The term and the term identifier shall be used
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.String color = 11;</code>
   */
  com.google.fhir.r4.core.StringOrBuilder getColorOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Where applicable, the imprint can be specified as text
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.String imprint = 12;</code>
   */
  java.util.List<com.google.fhir.r4.core.String> getImprintList();
  /**
   *
   *
   * <pre>
   * Where applicable, the imprint can be specified as text
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.String imprint = 12;</code>
   */
  com.google.fhir.r4.core.String getImprint(int index);
  /**
   *
   *
   * <pre>
   * Where applicable, the imprint can be specified as text
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.String imprint = 12;</code>
   */
  int getImprintCount();
  /**
   *
   *
   * <pre>
   * Where applicable, the imprint can be specified as text
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.String imprint = 12;</code>
   */
  java.util.List<? extends com.google.fhir.r4.core.StringOrBuilder> getImprintOrBuilderList();
  /**
   *
   *
   * <pre>
   * Where applicable, the imprint can be specified as text
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.String imprint = 12;</code>
   */
  com.google.fhir.r4.core.StringOrBuilder getImprintOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Where applicable, the image can be provided The format of the image
   * attachment shall be specified by regional implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Attachment image = 13;</code>
   */
  java.util.List<com.google.fhir.r4.core.Attachment> getImageList();
  /**
   *
   *
   * <pre>
   * Where applicable, the image can be provided The format of the image
   * attachment shall be specified by regional implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Attachment image = 13;</code>
   */
  com.google.fhir.r4.core.Attachment getImage(int index);
  /**
   *
   *
   * <pre>
   * Where applicable, the image can be provided The format of the image
   * attachment shall be specified by regional implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Attachment image = 13;</code>
   */
  int getImageCount();
  /**
   *
   *
   * <pre>
   * Where applicable, the image can be provided The format of the image
   * attachment shall be specified by regional implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Attachment image = 13;</code>
   */
  java.util.List<? extends com.google.fhir.r4.core.AttachmentOrBuilder> getImageOrBuilderList();
  /**
   *
   *
   * <pre>
   * Where applicable, the image can be provided The format of the image
   * attachment shall be specified by regional implementations
   * </pre>
   *
   * <code>repeated .google.fhir.r4.core.Attachment image = 13;</code>
   */
  com.google.fhir.r4.core.AttachmentOrBuilder getImageOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * Where applicable, the scoring can be specified An appropriate controlled
   * vocabulary shall be used The term and the term identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept scoring = 14;</code>
   *
   * @return Whether the scoring field is set.
   */
  boolean hasScoring();
  /**
   *
   *
   * <pre>
   * Where applicable, the scoring can be specified An appropriate controlled
   * vocabulary shall be used The term and the term identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept scoring = 14;</code>
   *
   * @return The scoring.
   */
  com.google.fhir.r4.core.CodeableConcept getScoring();
  /**
   *
   *
   * <pre>
   * Where applicable, the scoring can be specified An appropriate controlled
   * vocabulary shall be used The term and the term identifier shall be used
   * </pre>
   *
   * <code>.google.fhir.r4.core.CodeableConcept scoring = 14;</code>
   */
  com.google.fhir.r4.core.CodeableConceptOrBuilder getScoringOrBuilder();
}
