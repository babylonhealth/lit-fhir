// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/google/fhir/proto/stu3/ml_extensions.proto

package com.google.fhir.stu3.ml;

public interface EventLabelOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.fhir.stu3.ml.EventLabel)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * xml:id (or equivalent in JSON)
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.String id = 1;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * xml:id (or equivalent in JSON)
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.String id = 1;</code>
   * @return The id.
   */
  com.google.fhir.stu3.proto.String getId();
  /**
   * <pre>
   * xml:id (or equivalent in JSON)
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.String id = 1;</code>
   */
  com.google.fhir.stu3.proto.StringOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * Additional Content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.stu3.proto.Extension extension = 2;</code>
   */
  java.util.List<com.google.fhir.stu3.proto.Extension> 
      getExtensionList();
  /**
   * <pre>
   * Additional Content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.stu3.proto.Extension extension = 2;</code>
   */
  com.google.fhir.stu3.proto.Extension getExtension(int index);
  /**
   * <pre>
   * Additional Content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.stu3.proto.Extension extension = 2;</code>
   */
  int getExtensionCount();
  /**
   * <pre>
   * Additional Content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.stu3.proto.Extension extension = 2;</code>
   */
  java.util.List<? extends com.google.fhir.stu3.proto.ExtensionOrBuilder> 
      getExtensionOrBuilderList();
  /**
   * <pre>
   * Additional Content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.stu3.proto.Extension extension = 2;</code>
   */
  com.google.fhir.stu3.proto.ExtensionOrBuilder getExtensionOrBuilder(
      int index);

  /**
   * <pre>
   * The patient associated with this label
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Reference patient = 4 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   * @return Whether the patient field is set.
   */
  boolean hasPatient();
  /**
   * <pre>
   * The patient associated with this label
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Reference patient = 4 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   * @return The patient.
   */
  com.google.fhir.stu3.proto.Reference getPatient();
  /**
   * <pre>
   * The patient associated with this label
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Reference patient = 4 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   */
  com.google.fhir.stu3.proto.ReferenceOrBuilder getPatientOrBuilder();

  /**
   * <pre>
   * The type of label, part of the prediction task definition
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Coding type = 5 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * The type of label, part of the prediction task definition
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Coding type = 5 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   * @return The type.
   */
  com.google.fhir.stu3.proto.Coding getType();
  /**
   * <pre>
   * The type of label, part of the prediction task definition
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Coding type = 5 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR, (.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   */
  com.google.fhir.stu3.proto.CodingOrBuilder getTypeOrBuilder();

  /**
   * <pre>
   * Time associated with the label event, if available
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.DateTime event_time = 6 [(.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   * @return Whether the eventTime field is set.
   */
  boolean hasEventTime();
  /**
   * <pre>
   * Time associated with the label event, if available
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.DateTime event_time = 6 [(.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   * @return The eventTime.
   */
  com.google.fhir.stu3.proto.DateTime getEventTime();
  /**
   * <pre>
   * Time associated with the label event, if available
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.DateTime event_time = 6 [(.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   */
  com.google.fhir.stu3.proto.DateTimeOrBuilder getEventTimeOrBuilder();

  /**
   * <pre>
   * Resource that owns this label
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Reference source = 7 [(.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   * @return Whether the source field is set.
   */
  boolean hasSource();
  /**
   * <pre>
   * Resource that owns this label
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Reference source = 7 [(.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   * @return The source.
   */
  com.google.fhir.stu3.proto.Reference getSource();
  /**
   * <pre>
   * Resource that owns this label
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Reference source = 7 [(.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   */
  com.google.fhir.stu3.proto.ReferenceOrBuilder getSourceOrBuilder();

  /**
   * <code>repeated .google.fhir.stu3.ml.EventLabel.Label label = 8 [(.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   */
  java.util.List<com.google.fhir.stu3.ml.EventLabel.Label> 
      getLabelList();
  /**
   * <code>repeated .google.fhir.stu3.ml.EventLabel.Label label = 8 [(.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   */
  com.google.fhir.stu3.ml.EventLabel.Label getLabel(int index);
  /**
   * <code>repeated .google.fhir.stu3.ml.EventLabel.Label label = 8 [(.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   */
  int getLabelCount();
  /**
   * <code>repeated .google.fhir.stu3.ml.EventLabel.Label label = 8 [(.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   */
  java.util.List<? extends com.google.fhir.stu3.ml.EventLabel.LabelOrBuilder> 
      getLabelOrBuilderList();
  /**
   * <code>repeated .google.fhir.stu3.ml.EventLabel.Label label = 8 [(.google.fhir.proto.fhir_path_constraint) = "extension.exists() != value.exists()"];</code>
   */
  com.google.fhir.stu3.ml.EventLabel.LabelOrBuilder getLabelOrBuilder(
      int index);
}
