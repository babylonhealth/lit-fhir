// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/google/fhir/proto/stu3/datatypes.proto

package com.google.fhir.stu3.proto;

public interface SampledDataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.fhir.stu3.proto.SampledData)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * xml:id (or equivalent in JSON)
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.String id = 1;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * xml:id (or equivalent in JSON)
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.String id = 1;</code>
   * @return The id.
   */
  com.google.fhir.stu3.proto.String getId();
  /**
   * <pre>
   * xml:id (or equivalent in JSON)
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.String id = 1;</code>
   */
  com.google.fhir.stu3.proto.StringOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * Additional Content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.stu3.proto.Extension extension = 2;</code>
   */
  java.util.List<com.google.fhir.stu3.proto.Extension> 
      getExtensionList();
  /**
   * <pre>
   * Additional Content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.stu3.proto.Extension extension = 2;</code>
   */
  com.google.fhir.stu3.proto.Extension getExtension(int index);
  /**
   * <pre>
   * Additional Content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.stu3.proto.Extension extension = 2;</code>
   */
  int getExtensionCount();
  /**
   * <pre>
   * Additional Content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.stu3.proto.Extension extension = 2;</code>
   */
  java.util.List<? extends com.google.fhir.stu3.proto.ExtensionOrBuilder> 
      getExtensionOrBuilderList();
  /**
   * <pre>
   * Additional Content defined by implementations
   * </pre>
   *
   * <code>repeated .google.fhir.stu3.proto.Extension extension = 2;</code>
   */
  com.google.fhir.stu3.proto.ExtensionOrBuilder getExtensionOrBuilder(
      int index);

  /**
   * <pre>
   * Zero value and units
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.SimpleQuantity origin = 3 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];</code>
   * @return Whether the origin field is set.
   */
  boolean hasOrigin();
  /**
   * <pre>
   * Zero value and units
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.SimpleQuantity origin = 3 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];</code>
   * @return The origin.
   */
  com.google.fhir.stu3.proto.SimpleQuantity getOrigin();
  /**
   * <pre>
   * Zero value and units
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.SimpleQuantity origin = 3 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];</code>
   */
  com.google.fhir.stu3.proto.SimpleQuantityOrBuilder getOriginOrBuilder();

  /**
   * <pre>
   * Number of milliseconds between samples
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Decimal period = 4 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];</code>
   * @return Whether the period field is set.
   */
  boolean hasPeriod();
  /**
   * <pre>
   * Number of milliseconds between samples
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Decimal period = 4 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];</code>
   * @return The period.
   */
  com.google.fhir.stu3.proto.Decimal getPeriod();
  /**
   * <pre>
   * Number of milliseconds between samples
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Decimal period = 4 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];</code>
   */
  com.google.fhir.stu3.proto.DecimalOrBuilder getPeriodOrBuilder();

  /**
   * <pre>
   * Multiply data by this before adding to origin
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Decimal factor = 5;</code>
   * @return Whether the factor field is set.
   */
  boolean hasFactor();
  /**
   * <pre>
   * Multiply data by this before adding to origin
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Decimal factor = 5;</code>
   * @return The factor.
   */
  com.google.fhir.stu3.proto.Decimal getFactor();
  /**
   * <pre>
   * Multiply data by this before adding to origin
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Decimal factor = 5;</code>
   */
  com.google.fhir.stu3.proto.DecimalOrBuilder getFactorOrBuilder();

  /**
   * <pre>
   * Lower limit of detection
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Decimal lower_limit = 6;</code>
   * @return Whether the lowerLimit field is set.
   */
  boolean hasLowerLimit();
  /**
   * <pre>
   * Lower limit of detection
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Decimal lower_limit = 6;</code>
   * @return The lowerLimit.
   */
  com.google.fhir.stu3.proto.Decimal getLowerLimit();
  /**
   * <pre>
   * Lower limit of detection
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Decimal lower_limit = 6;</code>
   */
  com.google.fhir.stu3.proto.DecimalOrBuilder getLowerLimitOrBuilder();

  /**
   * <pre>
   * Upper limit of detection
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Decimal upper_limit = 7;</code>
   * @return Whether the upperLimit field is set.
   */
  boolean hasUpperLimit();
  /**
   * <pre>
   * Upper limit of detection
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Decimal upper_limit = 7;</code>
   * @return The upperLimit.
   */
  com.google.fhir.stu3.proto.Decimal getUpperLimit();
  /**
   * <pre>
   * Upper limit of detection
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.Decimal upper_limit = 7;</code>
   */
  com.google.fhir.stu3.proto.DecimalOrBuilder getUpperLimitOrBuilder();

  /**
   * <pre>
   * Number of sample points at each time point
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.PositiveInt dimensions = 8 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];</code>
   * @return Whether the dimensions field is set.
   */
  boolean hasDimensions();
  /**
   * <pre>
   * Number of sample points at each time point
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.PositiveInt dimensions = 8 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];</code>
   * @return The dimensions.
   */
  com.google.fhir.stu3.proto.PositiveInt getDimensions();
  /**
   * <pre>
   * Number of sample points at each time point
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.PositiveInt dimensions = 8 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];</code>
   */
  com.google.fhir.stu3.proto.PositiveIntOrBuilder getDimensionsOrBuilder();

  /**
   * <pre>
   * Decimal values with spaces, or "E" | "U" | "L"
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.String data = 9 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];</code>
   * @return Whether the data field is set.
   */
  boolean hasData();
  /**
   * <pre>
   * Decimal values with spaces, or "E" | "U" | "L"
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.String data = 9 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];</code>
   * @return The data.
   */
  com.google.fhir.stu3.proto.String getData();
  /**
   * <pre>
   * Decimal values with spaces, or "E" | "U" | "L"
   * </pre>
   *
   * <code>.google.fhir.stu3.proto.String data = 9 [(.google.fhir.proto.validation_requirement) = REQUIRED_BY_FHIR];</code>
   */
  com.google.fhir.stu3.proto.StringOrBuilder getDataOrBuilder();
}
