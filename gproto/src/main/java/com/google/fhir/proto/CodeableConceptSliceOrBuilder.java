// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/google/fhir/proto/profile_config.proto

package com.google.fhir.proto;

public interface CodeableConceptSliceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.fhir.proto.CodeableConceptSlice)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Id in the Structure Definition of the CodeableConcept to slice.
   * e.g., Observation.code, or RiskAssessment.prediction.qualitativeRisk
   * Note that this should be of type CodeableConcept, NOT type Coding.
   * </pre>
   *
   * <code>string field_id = 1;</code>
   * @return The fieldId.
   */
  java.lang.String getFieldId();
  /**
   * <pre>
   * Id in the Structure Definition of the CodeableConcept to slice.
   * e.g., Observation.code, or RiskAssessment.prediction.qualitativeRisk
   * Note that this should be of type CodeableConcept, NOT type Coding.
   * </pre>
   *
   * <code>string field_id = 1;</code>
   * @return The bytes for fieldId.
   */
  com.google.protobuf.ByteString
      getFieldIdBytes();

  /**
   * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
   */
  java.util.List<com.google.fhir.proto.CodeableConceptSlice.CodingSlice> 
      getCodingSliceList();
  /**
   * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
   */
  com.google.fhir.proto.CodeableConceptSlice.CodingSlice getCodingSlice(int index);
  /**
   * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
   */
  int getCodingSliceCount();
  /**
   * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
   */
  java.util.List<? extends com.google.fhir.proto.CodeableConceptSlice.CodingSliceOrBuilder> 
      getCodingSliceOrBuilderList();
  /**
   * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
   */
  com.google.fhir.proto.CodeableConceptSlice.CodingSliceOrBuilder getCodingSliceOrBuilder(
      int index);

  /**
   * <pre>
   * Whether or not to allow Codings that do not fit into any of the above
   * slices.
   * Optional - defaults to OPEN
   * </pre>
   *
   * <code>.google.fhir.r4.core.SlicingRulesCode.Value rules = 4;</code>
   * @return The enum numeric value on the wire for rules.
   */
  int getRulesValue();
  /**
   * <pre>
   * Whether or not to allow Codings that do not fit into any of the above
   * slices.
   * Optional - defaults to OPEN
   * </pre>
   *
   * <code>.google.fhir.r4.core.SlicingRulesCode.Value rules = 4;</code>
   * @return The rules.
   */
  com.google.fhir.r4.core.SlicingRulesCode.Value getRules();
}
