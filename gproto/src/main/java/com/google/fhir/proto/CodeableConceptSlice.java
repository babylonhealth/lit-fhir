// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/google/fhir/proto/profile_config.proto

package com.google.fhir.proto;

/**
 * <pre>
 * Defines a FHIR slice on a codeable concept as described in
 * https://www.hl7.org/fhir/profiling.html#slicing
 * These are used in the protobuf representation of profiled resources
 * to create concrete fields for specific code systems.
 * </pre>
 *
 * Protobuf type {@code google.fhir.proto.CodeableConceptSlice}
 */
public final class CodeableConceptSlice extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.fhir.proto.CodeableConceptSlice)
    CodeableConceptSliceOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CodeableConceptSlice.newBuilder() to construct.
  private CodeableConceptSlice(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CodeableConceptSlice() {
    fieldId_ = "";
    codingSlice_ = java.util.Collections.emptyList();
    rules_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CodeableConceptSlice();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CodeableConceptSlice(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            fieldId_ = s;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              codingSlice_ = new java.util.ArrayList<com.google.fhir.proto.CodeableConceptSlice.CodingSlice>();
              mutable_bitField0_ |= 0x00000001;
            }
            codingSlice_.add(
                input.readMessage(com.google.fhir.proto.CodeableConceptSlice.CodingSlice.parser(), extensionRegistry));
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            rules_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        codingSlice_ = java.util.Collections.unmodifiableList(codingSlice_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.fhir.proto.ProfileConfig.internal_static_google_fhir_proto_CodeableConceptSlice_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.fhir.proto.ProfileConfig.internal_static_google_fhir_proto_CodeableConceptSlice_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.fhir.proto.CodeableConceptSlice.class, com.google.fhir.proto.CodeableConceptSlice.Builder.class);
  }

  public interface CodingSliceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.fhir.proto.CodeableConceptSlice.CodingSlice)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.google.fhir.proto.ElementData element_data = 1;</code>
     * @return Whether the elementData field is set.
     */
    boolean hasElementData();
    /**
     * <code>.google.fhir.proto.ElementData element_data = 1;</code>
     * @return The elementData.
     */
    com.google.fhir.proto.ElementData getElementData();
    /**
     * <code>.google.fhir.proto.ElementData element_data = 1;</code>
     */
    com.google.fhir.proto.ElementDataOrBuilder getElementDataOrBuilder();

    /**
     * <code>.google.fhir.proto.CodeData code_data = 2;</code>
     * @return Whether the codeData field is set.
     */
    boolean hasCodeData();
    /**
     * <code>.google.fhir.proto.CodeData code_data = 2;</code>
     * @return The codeData.
     */
    com.google.fhir.proto.CodeData getCodeData();
    /**
     * <code>.google.fhir.proto.CodeData code_data = 2;</code>
     */
    com.google.fhir.proto.CodeDataOrBuilder getCodeDataOrBuilder();
  }
  /**
   * Protobuf type {@code google.fhir.proto.CodeableConceptSlice.CodingSlice}
   */
  public static final class CodingSlice extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.fhir.proto.CodeableConceptSlice.CodingSlice)
      CodingSliceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CodingSlice.newBuilder() to construct.
    private CodingSlice(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CodingSlice() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CodingSlice();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CodingSlice(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.fhir.proto.ElementData.Builder subBuilder = null;
              if (elementData_ != null) {
                subBuilder = elementData_.toBuilder();
              }
              elementData_ = input.readMessage(com.google.fhir.proto.ElementData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(elementData_);
                elementData_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.fhir.proto.CodeData.Builder subBuilder = null;
              if (codeData_ != null) {
                subBuilder = codeData_.toBuilder();
              }
              codeData_ = input.readMessage(com.google.fhir.proto.CodeData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(codeData_);
                codeData_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.fhir.proto.ProfileConfig.internal_static_google_fhir_proto_CodeableConceptSlice_CodingSlice_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.fhir.proto.ProfileConfig.internal_static_google_fhir_proto_CodeableConceptSlice_CodingSlice_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.fhir.proto.CodeableConceptSlice.CodingSlice.class, com.google.fhir.proto.CodeableConceptSlice.CodingSlice.Builder.class);
    }

    public static final int ELEMENT_DATA_FIELD_NUMBER = 1;
    private com.google.fhir.proto.ElementData elementData_;
    /**
     * <code>.google.fhir.proto.ElementData element_data = 1;</code>
     * @return Whether the elementData field is set.
     */
    @java.lang.Override
    public boolean hasElementData() {
      return elementData_ != null;
    }
    /**
     * <code>.google.fhir.proto.ElementData element_data = 1;</code>
     * @return The elementData.
     */
    @java.lang.Override
    public com.google.fhir.proto.ElementData getElementData() {
      return elementData_ == null ? com.google.fhir.proto.ElementData.getDefaultInstance() : elementData_;
    }
    /**
     * <code>.google.fhir.proto.ElementData element_data = 1;</code>
     */
    @java.lang.Override
    public com.google.fhir.proto.ElementDataOrBuilder getElementDataOrBuilder() {
      return getElementData();
    }

    public static final int CODE_DATA_FIELD_NUMBER = 2;
    private com.google.fhir.proto.CodeData codeData_;
    /**
     * <code>.google.fhir.proto.CodeData code_data = 2;</code>
     * @return Whether the codeData field is set.
     */
    @java.lang.Override
    public boolean hasCodeData() {
      return codeData_ != null;
    }
    /**
     * <code>.google.fhir.proto.CodeData code_data = 2;</code>
     * @return The codeData.
     */
    @java.lang.Override
    public com.google.fhir.proto.CodeData getCodeData() {
      return codeData_ == null ? com.google.fhir.proto.CodeData.getDefaultInstance() : codeData_;
    }
    /**
     * <code>.google.fhir.proto.CodeData code_data = 2;</code>
     */
    @java.lang.Override
    public com.google.fhir.proto.CodeDataOrBuilder getCodeDataOrBuilder() {
      return getCodeData();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (elementData_ != null) {
        output.writeMessage(1, getElementData());
      }
      if (codeData_ != null) {
        output.writeMessage(2, getCodeData());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (elementData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getElementData());
      }
      if (codeData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCodeData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.google.fhir.proto.CodeableConceptSlice.CodingSlice)) {
        return super.equals(obj);
      }
      com.google.fhir.proto.CodeableConceptSlice.CodingSlice other = (com.google.fhir.proto.CodeableConceptSlice.CodingSlice) obj;

      if (hasElementData() != other.hasElementData()) return false;
      if (hasElementData()) {
        if (!getElementData()
            .equals(other.getElementData())) return false;
      }
      if (hasCodeData() != other.hasCodeData()) return false;
      if (hasCodeData()) {
        if (!getCodeData()
            .equals(other.getCodeData())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasElementData()) {
        hash = (37 * hash) + ELEMENT_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getElementData().hashCode();
      }
      if (hasCodeData()) {
        hash = (37 * hash) + CODE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getCodeData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.fhir.proto.CodeableConceptSlice.CodingSlice parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.fhir.proto.CodeableConceptSlice.CodingSlice parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.fhir.proto.CodeableConceptSlice.CodingSlice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.fhir.proto.CodeableConceptSlice.CodingSlice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.fhir.proto.CodeableConceptSlice.CodingSlice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.fhir.proto.CodeableConceptSlice.CodingSlice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.fhir.proto.CodeableConceptSlice.CodingSlice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.fhir.proto.CodeableConceptSlice.CodingSlice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.fhir.proto.CodeableConceptSlice.CodingSlice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.google.fhir.proto.CodeableConceptSlice.CodingSlice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.google.fhir.proto.CodeableConceptSlice.CodingSlice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.google.fhir.proto.CodeableConceptSlice.CodingSlice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.fhir.proto.CodeableConceptSlice.CodingSlice prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code google.fhir.proto.CodeableConceptSlice.CodingSlice}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.fhir.proto.CodeableConceptSlice.CodingSlice)
        com.google.fhir.proto.CodeableConceptSlice.CodingSliceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.fhir.proto.ProfileConfig.internal_static_google_fhir_proto_CodeableConceptSlice_CodingSlice_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.fhir.proto.ProfileConfig.internal_static_google_fhir_proto_CodeableConceptSlice_CodingSlice_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.fhir.proto.CodeableConceptSlice.CodingSlice.class, com.google.fhir.proto.CodeableConceptSlice.CodingSlice.Builder.class);
      }

      // Construct using com.google.fhir.proto.CodeableConceptSlice.CodingSlice.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (elementDataBuilder_ == null) {
          elementData_ = null;
        } else {
          elementData_ = null;
          elementDataBuilder_ = null;
        }
        if (codeDataBuilder_ == null) {
          codeData_ = null;
        } else {
          codeData_ = null;
          codeDataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.fhir.proto.ProfileConfig.internal_static_google_fhir_proto_CodeableConceptSlice_CodingSlice_descriptor;
      }

      @java.lang.Override
      public com.google.fhir.proto.CodeableConceptSlice.CodingSlice getDefaultInstanceForType() {
        return com.google.fhir.proto.CodeableConceptSlice.CodingSlice.getDefaultInstance();
      }

      @java.lang.Override
      public com.google.fhir.proto.CodeableConceptSlice.CodingSlice build() {
        com.google.fhir.proto.CodeableConceptSlice.CodingSlice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.fhir.proto.CodeableConceptSlice.CodingSlice buildPartial() {
        com.google.fhir.proto.CodeableConceptSlice.CodingSlice result = new com.google.fhir.proto.CodeableConceptSlice.CodingSlice(this);
        if (elementDataBuilder_ == null) {
          result.elementData_ = elementData_;
        } else {
          result.elementData_ = elementDataBuilder_.build();
        }
        if (codeDataBuilder_ == null) {
          result.codeData_ = codeData_;
        } else {
          result.codeData_ = codeDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.fhir.proto.CodeableConceptSlice.CodingSlice) {
          return mergeFrom((com.google.fhir.proto.CodeableConceptSlice.CodingSlice)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.fhir.proto.CodeableConceptSlice.CodingSlice other) {
        if (other == com.google.fhir.proto.CodeableConceptSlice.CodingSlice.getDefaultInstance()) return this;
        if (other.hasElementData()) {
          mergeElementData(other.getElementData());
        }
        if (other.hasCodeData()) {
          mergeCodeData(other.getCodeData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.fhir.proto.CodeableConceptSlice.CodingSlice parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.fhir.proto.CodeableConceptSlice.CodingSlice) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.fhir.proto.ElementData elementData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.proto.ElementData, com.google.fhir.proto.ElementData.Builder, com.google.fhir.proto.ElementDataOrBuilder> elementDataBuilder_;
      /**
       * <code>.google.fhir.proto.ElementData element_data = 1;</code>
       * @return Whether the elementData field is set.
       */
      public boolean hasElementData() {
        return elementDataBuilder_ != null || elementData_ != null;
      }
      /**
       * <code>.google.fhir.proto.ElementData element_data = 1;</code>
       * @return The elementData.
       */
      public com.google.fhir.proto.ElementData getElementData() {
        if (elementDataBuilder_ == null) {
          return elementData_ == null ? com.google.fhir.proto.ElementData.getDefaultInstance() : elementData_;
        } else {
          return elementDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.fhir.proto.ElementData element_data = 1;</code>
       */
      public Builder setElementData(com.google.fhir.proto.ElementData value) {
        if (elementDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          elementData_ = value;
          onChanged();
        } else {
          elementDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.fhir.proto.ElementData element_data = 1;</code>
       */
      public Builder setElementData(
          com.google.fhir.proto.ElementData.Builder builderForValue) {
        if (elementDataBuilder_ == null) {
          elementData_ = builderForValue.build();
          onChanged();
        } else {
          elementDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.fhir.proto.ElementData element_data = 1;</code>
       */
      public Builder mergeElementData(com.google.fhir.proto.ElementData value) {
        if (elementDataBuilder_ == null) {
          if (elementData_ != null) {
            elementData_ =
              com.google.fhir.proto.ElementData.newBuilder(elementData_).mergeFrom(value).buildPartial();
          } else {
            elementData_ = value;
          }
          onChanged();
        } else {
          elementDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.fhir.proto.ElementData element_data = 1;</code>
       */
      public Builder clearElementData() {
        if (elementDataBuilder_ == null) {
          elementData_ = null;
          onChanged();
        } else {
          elementData_ = null;
          elementDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.fhir.proto.ElementData element_data = 1;</code>
       */
      public com.google.fhir.proto.ElementData.Builder getElementDataBuilder() {
        
        onChanged();
        return getElementDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.fhir.proto.ElementData element_data = 1;</code>
       */
      public com.google.fhir.proto.ElementDataOrBuilder getElementDataOrBuilder() {
        if (elementDataBuilder_ != null) {
          return elementDataBuilder_.getMessageOrBuilder();
        } else {
          return elementData_ == null ?
              com.google.fhir.proto.ElementData.getDefaultInstance() : elementData_;
        }
      }
      /**
       * <code>.google.fhir.proto.ElementData element_data = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.proto.ElementData, com.google.fhir.proto.ElementData.Builder, com.google.fhir.proto.ElementDataOrBuilder> 
          getElementDataFieldBuilder() {
        if (elementDataBuilder_ == null) {
          elementDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.fhir.proto.ElementData, com.google.fhir.proto.ElementData.Builder, com.google.fhir.proto.ElementDataOrBuilder>(
                  getElementData(),
                  getParentForChildren(),
                  isClean());
          elementData_ = null;
        }
        return elementDataBuilder_;
      }

      private com.google.fhir.proto.CodeData codeData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.proto.CodeData, com.google.fhir.proto.CodeData.Builder, com.google.fhir.proto.CodeDataOrBuilder> codeDataBuilder_;
      /**
       * <code>.google.fhir.proto.CodeData code_data = 2;</code>
       * @return Whether the codeData field is set.
       */
      public boolean hasCodeData() {
        return codeDataBuilder_ != null || codeData_ != null;
      }
      /**
       * <code>.google.fhir.proto.CodeData code_data = 2;</code>
       * @return The codeData.
       */
      public com.google.fhir.proto.CodeData getCodeData() {
        if (codeDataBuilder_ == null) {
          return codeData_ == null ? com.google.fhir.proto.CodeData.getDefaultInstance() : codeData_;
        } else {
          return codeDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.fhir.proto.CodeData code_data = 2;</code>
       */
      public Builder setCodeData(com.google.fhir.proto.CodeData value) {
        if (codeDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          codeData_ = value;
          onChanged();
        } else {
          codeDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.fhir.proto.CodeData code_data = 2;</code>
       */
      public Builder setCodeData(
          com.google.fhir.proto.CodeData.Builder builderForValue) {
        if (codeDataBuilder_ == null) {
          codeData_ = builderForValue.build();
          onChanged();
        } else {
          codeDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.fhir.proto.CodeData code_data = 2;</code>
       */
      public Builder mergeCodeData(com.google.fhir.proto.CodeData value) {
        if (codeDataBuilder_ == null) {
          if (codeData_ != null) {
            codeData_ =
              com.google.fhir.proto.CodeData.newBuilder(codeData_).mergeFrom(value).buildPartial();
          } else {
            codeData_ = value;
          }
          onChanged();
        } else {
          codeDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.fhir.proto.CodeData code_data = 2;</code>
       */
      public Builder clearCodeData() {
        if (codeDataBuilder_ == null) {
          codeData_ = null;
          onChanged();
        } else {
          codeData_ = null;
          codeDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.fhir.proto.CodeData code_data = 2;</code>
       */
      public com.google.fhir.proto.CodeData.Builder getCodeDataBuilder() {
        
        onChanged();
        return getCodeDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.fhir.proto.CodeData code_data = 2;</code>
       */
      public com.google.fhir.proto.CodeDataOrBuilder getCodeDataOrBuilder() {
        if (codeDataBuilder_ != null) {
          return codeDataBuilder_.getMessageOrBuilder();
        } else {
          return codeData_ == null ?
              com.google.fhir.proto.CodeData.getDefaultInstance() : codeData_;
        }
      }
      /**
       * <code>.google.fhir.proto.CodeData code_data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.fhir.proto.CodeData, com.google.fhir.proto.CodeData.Builder, com.google.fhir.proto.CodeDataOrBuilder> 
          getCodeDataFieldBuilder() {
        if (codeDataBuilder_ == null) {
          codeDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.fhir.proto.CodeData, com.google.fhir.proto.CodeData.Builder, com.google.fhir.proto.CodeDataOrBuilder>(
                  getCodeData(),
                  getParentForChildren(),
                  isClean());
          codeData_ = null;
        }
        return codeDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.fhir.proto.CodeableConceptSlice.CodingSlice)
    }

    // @@protoc_insertion_point(class_scope:google.fhir.proto.CodeableConceptSlice.CodingSlice)
    private static final com.google.fhir.proto.CodeableConceptSlice.CodingSlice DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.fhir.proto.CodeableConceptSlice.CodingSlice();
    }

    public static com.google.fhir.proto.CodeableConceptSlice.CodingSlice getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CodingSlice>
        PARSER = new com.google.protobuf.AbstractParser<CodingSlice>() {
      @java.lang.Override
      public CodingSlice parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CodingSlice(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CodingSlice> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CodingSlice> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.fhir.proto.CodeableConceptSlice.CodingSlice getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int FIELD_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object fieldId_;
  /**
   * <pre>
   * Id in the Structure Definition of the CodeableConcept to slice.
   * e.g., Observation.code, or RiskAssessment.prediction.qualitativeRisk
   * Note that this should be of type CodeableConcept, NOT type Coding.
   * </pre>
   *
   * <code>string field_id = 1;</code>
   * @return The fieldId.
   */
  @java.lang.Override
  public java.lang.String getFieldId() {
    java.lang.Object ref = fieldId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fieldId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Id in the Structure Definition of the CodeableConcept to slice.
   * e.g., Observation.code, or RiskAssessment.prediction.qualitativeRisk
   * Note that this should be of type CodeableConcept, NOT type Coding.
   * </pre>
   *
   * <code>string field_id = 1;</code>
   * @return The bytes for fieldId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFieldIdBytes() {
    java.lang.Object ref = fieldId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fieldId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CODING_SLICE_FIELD_NUMBER = 2;
  private java.util.List<com.google.fhir.proto.CodeableConceptSlice.CodingSlice> codingSlice_;
  /**
   * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
   */
  @java.lang.Override
  public java.util.List<com.google.fhir.proto.CodeableConceptSlice.CodingSlice> getCodingSliceList() {
    return codingSlice_;
  }
  /**
   * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.google.fhir.proto.CodeableConceptSlice.CodingSliceOrBuilder> 
      getCodingSliceOrBuilderList() {
    return codingSlice_;
  }
  /**
   * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
   */
  @java.lang.Override
  public int getCodingSliceCount() {
    return codingSlice_.size();
  }
  /**
   * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
   */
  @java.lang.Override
  public com.google.fhir.proto.CodeableConceptSlice.CodingSlice getCodingSlice(int index) {
    return codingSlice_.get(index);
  }
  /**
   * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
   */
  @java.lang.Override
  public com.google.fhir.proto.CodeableConceptSlice.CodingSliceOrBuilder getCodingSliceOrBuilder(
      int index) {
    return codingSlice_.get(index);
  }

  public static final int RULES_FIELD_NUMBER = 4;
  private int rules_;
  /**
   * <pre>
   * Whether or not to allow Codings that do not fit into any of the above
   * slices.
   * Optional - defaults to OPEN
   * </pre>
   *
   * <code>.google.fhir.r4.core.SlicingRulesCode.Value rules = 4;</code>
   * @return The enum numeric value on the wire for rules.
   */
  @java.lang.Override public int getRulesValue() {
    return rules_;
  }
  /**
   * <pre>
   * Whether or not to allow Codings that do not fit into any of the above
   * slices.
   * Optional - defaults to OPEN
   * </pre>
   *
   * <code>.google.fhir.r4.core.SlicingRulesCode.Value rules = 4;</code>
   * @return The rules.
   */
  @java.lang.Override public com.google.fhir.r4.core.SlicingRulesCode.Value getRules() {
    @SuppressWarnings("deprecation")
    com.google.fhir.r4.core.SlicingRulesCode.Value result = com.google.fhir.r4.core.SlicingRulesCode.Value.valueOf(rules_);
    return result == null ? com.google.fhir.r4.core.SlicingRulesCode.Value.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getFieldIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, fieldId_);
    }
    for (int i = 0; i < codingSlice_.size(); i++) {
      output.writeMessage(2, codingSlice_.get(i));
    }
    if (rules_ != com.google.fhir.r4.core.SlicingRulesCode.Value.INVALID_UNINITIALIZED.getNumber()) {
      output.writeEnum(4, rules_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getFieldIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, fieldId_);
    }
    for (int i = 0; i < codingSlice_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, codingSlice_.get(i));
    }
    if (rules_ != com.google.fhir.r4.core.SlicingRulesCode.Value.INVALID_UNINITIALIZED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, rules_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.fhir.proto.CodeableConceptSlice)) {
      return super.equals(obj);
    }
    com.google.fhir.proto.CodeableConceptSlice other = (com.google.fhir.proto.CodeableConceptSlice) obj;

    if (!getFieldId()
        .equals(other.getFieldId())) return false;
    if (!getCodingSliceList()
        .equals(other.getCodingSliceList())) return false;
    if (rules_ != other.rules_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FIELD_ID_FIELD_NUMBER;
    hash = (53 * hash) + getFieldId().hashCode();
    if (getCodingSliceCount() > 0) {
      hash = (37 * hash) + CODING_SLICE_FIELD_NUMBER;
      hash = (53 * hash) + getCodingSliceList().hashCode();
    }
    hash = (37 * hash) + RULES_FIELD_NUMBER;
    hash = (53 * hash) + rules_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.fhir.proto.CodeableConceptSlice parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.fhir.proto.CodeableConceptSlice parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.fhir.proto.CodeableConceptSlice parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.fhir.proto.CodeableConceptSlice parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.fhir.proto.CodeableConceptSlice parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.fhir.proto.CodeableConceptSlice parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.fhir.proto.CodeableConceptSlice parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.fhir.proto.CodeableConceptSlice parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.fhir.proto.CodeableConceptSlice parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.fhir.proto.CodeableConceptSlice parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.fhir.proto.CodeableConceptSlice parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.fhir.proto.CodeableConceptSlice parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.fhir.proto.CodeableConceptSlice prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Defines a FHIR slice on a codeable concept as described in
   * https://www.hl7.org/fhir/profiling.html#slicing
   * These are used in the protobuf representation of profiled resources
   * to create concrete fields for specific code systems.
   * </pre>
   *
   * Protobuf type {@code google.fhir.proto.CodeableConceptSlice}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.fhir.proto.CodeableConceptSlice)
      com.google.fhir.proto.CodeableConceptSliceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.fhir.proto.ProfileConfig.internal_static_google_fhir_proto_CodeableConceptSlice_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.fhir.proto.ProfileConfig.internal_static_google_fhir_proto_CodeableConceptSlice_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.fhir.proto.CodeableConceptSlice.class, com.google.fhir.proto.CodeableConceptSlice.Builder.class);
    }

    // Construct using com.google.fhir.proto.CodeableConceptSlice.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getCodingSliceFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      fieldId_ = "";

      if (codingSliceBuilder_ == null) {
        codingSlice_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        codingSliceBuilder_.clear();
      }
      rules_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.fhir.proto.ProfileConfig.internal_static_google_fhir_proto_CodeableConceptSlice_descriptor;
    }

    @java.lang.Override
    public com.google.fhir.proto.CodeableConceptSlice getDefaultInstanceForType() {
      return com.google.fhir.proto.CodeableConceptSlice.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.fhir.proto.CodeableConceptSlice build() {
      com.google.fhir.proto.CodeableConceptSlice result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.fhir.proto.CodeableConceptSlice buildPartial() {
      com.google.fhir.proto.CodeableConceptSlice result = new com.google.fhir.proto.CodeableConceptSlice(this);
      int from_bitField0_ = bitField0_;
      result.fieldId_ = fieldId_;
      if (codingSliceBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          codingSlice_ = java.util.Collections.unmodifiableList(codingSlice_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.codingSlice_ = codingSlice_;
      } else {
        result.codingSlice_ = codingSliceBuilder_.build();
      }
      result.rules_ = rules_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.fhir.proto.CodeableConceptSlice) {
        return mergeFrom((com.google.fhir.proto.CodeableConceptSlice)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.fhir.proto.CodeableConceptSlice other) {
      if (other == com.google.fhir.proto.CodeableConceptSlice.getDefaultInstance()) return this;
      if (!other.getFieldId().isEmpty()) {
        fieldId_ = other.fieldId_;
        onChanged();
      }
      if (codingSliceBuilder_ == null) {
        if (!other.codingSlice_.isEmpty()) {
          if (codingSlice_.isEmpty()) {
            codingSlice_ = other.codingSlice_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCodingSliceIsMutable();
            codingSlice_.addAll(other.codingSlice_);
          }
          onChanged();
        }
      } else {
        if (!other.codingSlice_.isEmpty()) {
          if (codingSliceBuilder_.isEmpty()) {
            codingSliceBuilder_.dispose();
            codingSliceBuilder_ = null;
            codingSlice_ = other.codingSlice_;
            bitField0_ = (bitField0_ & ~0x00000001);
            codingSliceBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCodingSliceFieldBuilder() : null;
          } else {
            codingSliceBuilder_.addAllMessages(other.codingSlice_);
          }
        }
      }
      if (other.rules_ != 0) {
        setRulesValue(other.getRulesValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.fhir.proto.CodeableConceptSlice parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.fhir.proto.CodeableConceptSlice) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object fieldId_ = "";
    /**
     * <pre>
     * Id in the Structure Definition of the CodeableConcept to slice.
     * e.g., Observation.code, or RiskAssessment.prediction.qualitativeRisk
     * Note that this should be of type CodeableConcept, NOT type Coding.
     * </pre>
     *
     * <code>string field_id = 1;</code>
     * @return The fieldId.
     */
    public java.lang.String getFieldId() {
      java.lang.Object ref = fieldId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fieldId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Id in the Structure Definition of the CodeableConcept to slice.
     * e.g., Observation.code, or RiskAssessment.prediction.qualitativeRisk
     * Note that this should be of type CodeableConcept, NOT type Coding.
     * </pre>
     *
     * <code>string field_id = 1;</code>
     * @return The bytes for fieldId.
     */
    public com.google.protobuf.ByteString
        getFieldIdBytes() {
      java.lang.Object ref = fieldId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fieldId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Id in the Structure Definition of the CodeableConcept to slice.
     * e.g., Observation.code, or RiskAssessment.prediction.qualitativeRisk
     * Note that this should be of type CodeableConcept, NOT type Coding.
     * </pre>
     *
     * <code>string field_id = 1;</code>
     * @param value The fieldId to set.
     * @return This builder for chaining.
     */
    public Builder setFieldId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fieldId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Id in the Structure Definition of the CodeableConcept to slice.
     * e.g., Observation.code, or RiskAssessment.prediction.qualitativeRisk
     * Note that this should be of type CodeableConcept, NOT type Coding.
     * </pre>
     *
     * <code>string field_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearFieldId() {
      
      fieldId_ = getDefaultInstance().getFieldId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Id in the Structure Definition of the CodeableConcept to slice.
     * e.g., Observation.code, or RiskAssessment.prediction.qualitativeRisk
     * Note that this should be of type CodeableConcept, NOT type Coding.
     * </pre>
     *
     * <code>string field_id = 1;</code>
     * @param value The bytes for fieldId to set.
     * @return This builder for chaining.
     */
    public Builder setFieldIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fieldId_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.google.fhir.proto.CodeableConceptSlice.CodingSlice> codingSlice_ =
      java.util.Collections.emptyList();
    private void ensureCodingSliceIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        codingSlice_ = new java.util.ArrayList<com.google.fhir.proto.CodeableConceptSlice.CodingSlice>(codingSlice_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.fhir.proto.CodeableConceptSlice.CodingSlice, com.google.fhir.proto.CodeableConceptSlice.CodingSlice.Builder, com.google.fhir.proto.CodeableConceptSlice.CodingSliceOrBuilder> codingSliceBuilder_;

    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public java.util.List<com.google.fhir.proto.CodeableConceptSlice.CodingSlice> getCodingSliceList() {
      if (codingSliceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(codingSlice_);
      } else {
        return codingSliceBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public int getCodingSliceCount() {
      if (codingSliceBuilder_ == null) {
        return codingSlice_.size();
      } else {
        return codingSliceBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public com.google.fhir.proto.CodeableConceptSlice.CodingSlice getCodingSlice(int index) {
      if (codingSliceBuilder_ == null) {
        return codingSlice_.get(index);
      } else {
        return codingSliceBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public Builder setCodingSlice(
        int index, com.google.fhir.proto.CodeableConceptSlice.CodingSlice value) {
      if (codingSliceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCodingSliceIsMutable();
        codingSlice_.set(index, value);
        onChanged();
      } else {
        codingSliceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public Builder setCodingSlice(
        int index, com.google.fhir.proto.CodeableConceptSlice.CodingSlice.Builder builderForValue) {
      if (codingSliceBuilder_ == null) {
        ensureCodingSliceIsMutable();
        codingSlice_.set(index, builderForValue.build());
        onChanged();
      } else {
        codingSliceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public Builder addCodingSlice(com.google.fhir.proto.CodeableConceptSlice.CodingSlice value) {
      if (codingSliceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCodingSliceIsMutable();
        codingSlice_.add(value);
        onChanged();
      } else {
        codingSliceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public Builder addCodingSlice(
        int index, com.google.fhir.proto.CodeableConceptSlice.CodingSlice value) {
      if (codingSliceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCodingSliceIsMutable();
        codingSlice_.add(index, value);
        onChanged();
      } else {
        codingSliceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public Builder addCodingSlice(
        com.google.fhir.proto.CodeableConceptSlice.CodingSlice.Builder builderForValue) {
      if (codingSliceBuilder_ == null) {
        ensureCodingSliceIsMutable();
        codingSlice_.add(builderForValue.build());
        onChanged();
      } else {
        codingSliceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public Builder addCodingSlice(
        int index, com.google.fhir.proto.CodeableConceptSlice.CodingSlice.Builder builderForValue) {
      if (codingSliceBuilder_ == null) {
        ensureCodingSliceIsMutable();
        codingSlice_.add(index, builderForValue.build());
        onChanged();
      } else {
        codingSliceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public Builder addAllCodingSlice(
        java.lang.Iterable<? extends com.google.fhir.proto.CodeableConceptSlice.CodingSlice> values) {
      if (codingSliceBuilder_ == null) {
        ensureCodingSliceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, codingSlice_);
        onChanged();
      } else {
        codingSliceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public Builder clearCodingSlice() {
      if (codingSliceBuilder_ == null) {
        codingSlice_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        codingSliceBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public Builder removeCodingSlice(int index) {
      if (codingSliceBuilder_ == null) {
        ensureCodingSliceIsMutable();
        codingSlice_.remove(index);
        onChanged();
      } else {
        codingSliceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public com.google.fhir.proto.CodeableConceptSlice.CodingSlice.Builder getCodingSliceBuilder(
        int index) {
      return getCodingSliceFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public com.google.fhir.proto.CodeableConceptSlice.CodingSliceOrBuilder getCodingSliceOrBuilder(
        int index) {
      if (codingSliceBuilder_ == null) {
        return codingSlice_.get(index);  } else {
        return codingSliceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public java.util.List<? extends com.google.fhir.proto.CodeableConceptSlice.CodingSliceOrBuilder> 
         getCodingSliceOrBuilderList() {
      if (codingSliceBuilder_ != null) {
        return codingSliceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(codingSlice_);
      }
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public com.google.fhir.proto.CodeableConceptSlice.CodingSlice.Builder addCodingSliceBuilder() {
      return getCodingSliceFieldBuilder().addBuilder(
          com.google.fhir.proto.CodeableConceptSlice.CodingSlice.getDefaultInstance());
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public com.google.fhir.proto.CodeableConceptSlice.CodingSlice.Builder addCodingSliceBuilder(
        int index) {
      return getCodingSliceFieldBuilder().addBuilder(
          index, com.google.fhir.proto.CodeableConceptSlice.CodingSlice.getDefaultInstance());
    }
    /**
     * <code>repeated .google.fhir.proto.CodeableConceptSlice.CodingSlice coding_slice = 2;</code>
     */
    public java.util.List<com.google.fhir.proto.CodeableConceptSlice.CodingSlice.Builder> 
         getCodingSliceBuilderList() {
      return getCodingSliceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.fhir.proto.CodeableConceptSlice.CodingSlice, com.google.fhir.proto.CodeableConceptSlice.CodingSlice.Builder, com.google.fhir.proto.CodeableConceptSlice.CodingSliceOrBuilder> 
        getCodingSliceFieldBuilder() {
      if (codingSliceBuilder_ == null) {
        codingSliceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.fhir.proto.CodeableConceptSlice.CodingSlice, com.google.fhir.proto.CodeableConceptSlice.CodingSlice.Builder, com.google.fhir.proto.CodeableConceptSlice.CodingSliceOrBuilder>(
                codingSlice_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        codingSlice_ = null;
      }
      return codingSliceBuilder_;
    }

    private int rules_ = 0;
    /**
     * <pre>
     * Whether or not to allow Codings that do not fit into any of the above
     * slices.
     * Optional - defaults to OPEN
     * </pre>
     *
     * <code>.google.fhir.r4.core.SlicingRulesCode.Value rules = 4;</code>
     * @return The enum numeric value on the wire for rules.
     */
    @java.lang.Override public int getRulesValue() {
      return rules_;
    }
    /**
     * <pre>
     * Whether or not to allow Codings that do not fit into any of the above
     * slices.
     * Optional - defaults to OPEN
     * </pre>
     *
     * <code>.google.fhir.r4.core.SlicingRulesCode.Value rules = 4;</code>
     * @param value The enum numeric value on the wire for rules to set.
     * @return This builder for chaining.
     */
    public Builder setRulesValue(int value) {
      
      rules_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether or not to allow Codings that do not fit into any of the above
     * slices.
     * Optional - defaults to OPEN
     * </pre>
     *
     * <code>.google.fhir.r4.core.SlicingRulesCode.Value rules = 4;</code>
     * @return The rules.
     */
    @java.lang.Override
    public com.google.fhir.r4.core.SlicingRulesCode.Value getRules() {
      @SuppressWarnings("deprecation")
      com.google.fhir.r4.core.SlicingRulesCode.Value result = com.google.fhir.r4.core.SlicingRulesCode.Value.valueOf(rules_);
      return result == null ? com.google.fhir.r4.core.SlicingRulesCode.Value.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Whether or not to allow Codings that do not fit into any of the above
     * slices.
     * Optional - defaults to OPEN
     * </pre>
     *
     * <code>.google.fhir.r4.core.SlicingRulesCode.Value rules = 4;</code>
     * @param value The rules to set.
     * @return This builder for chaining.
     */
    public Builder setRules(com.google.fhir.r4.core.SlicingRulesCode.Value value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      rules_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether or not to allow Codings that do not fit into any of the above
     * slices.
     * Optional - defaults to OPEN
     * </pre>
     *
     * <code>.google.fhir.r4.core.SlicingRulesCode.Value rules = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearRules() {
      
      rules_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.fhir.proto.CodeableConceptSlice)
  }

  // @@protoc_insertion_point(class_scope:google.fhir.proto.CodeableConceptSlice)
  private static final com.google.fhir.proto.CodeableConceptSlice DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.fhir.proto.CodeableConceptSlice();
  }

  public static com.google.fhir.proto.CodeableConceptSlice getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CodeableConceptSlice>
      PARSER = new com.google.protobuf.AbstractParser<CodeableConceptSlice>() {
    @java.lang.Override
    public CodeableConceptSlice parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CodeableConceptSlice(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CodeableConceptSlice> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CodeableConceptSlice> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.fhir.proto.CodeableConceptSlice getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

